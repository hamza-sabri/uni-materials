[{"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\index.tsx":"1","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\App.tsx":"2","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\history\\credationls-history.ts":"3","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\home.tsx":"4","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signin.tsx":"5","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signup.tsx":"6","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\pages-route.ts":"7","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\uni-requests\\university.ts":"8","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\signup-context\\uni-data-context.ts":"9","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\apis-caller.ts":"10","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-container.tsx":"11","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\login-page.tsx":"12","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\home-page.tsx":"13","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\status-codes.ts":"14","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\urls.ts":"15","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\axios-creation.ts":"16","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\form-arrays.ts":"17","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts":"18","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-image.tsx":"19","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-forms.tsx":"20","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\signUpButton.tsx":"21","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\user-requestes\\user.ts":"22","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\forgotPassword.tsx":"23","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx":"24","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar.tsx":"25","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar.tsx":"26","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\utilities\\alearts.tsx":"27","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\local-storage-keys.ts":"28","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\messages.ts":"29","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-buttons.tsx":"30","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-inputs.tsx":"31","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\side-bar-section-cards.ts":"32","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\book-entry-page.tsx":"33","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\manual-entry.tsx":"34","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\material-info-page.tsx":"35","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\profile-page.tsx":"36","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\view-page.tsx":"37","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\guidance.tsx":"38","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\not-found-page.tsx":"39","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-entry-section.tsx":"40","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\schedule-page.tsx":"41","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\uni-manager-page.tsx":"42","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\logo.tsx":"43","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx":"44","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\search-area.tsx":"45","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx":"46","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\view-all-res.tsx":"47","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-res.tsx":"48","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\data-entry-page.tsx":"49","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx":"50","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx":"51","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\validation\\signup-validation.ts":"52","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-dropdown.tsx":"53","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\res-types.ts":"54","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx":"55","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx":"56","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\res-requests\\res.ts":"57","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx":"58","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar-card.tsx":"59","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx":"60","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\res-card.tsx":"61","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx":"62","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\404\\404-componant.tsx":"63","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx":"64","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx":"65","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx":"66","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx":"67","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx":"68","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\material-requests\\mateirla.ts":"69","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\action-cods.ts":"70","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx":"71","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx":"72","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx":"73","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx":"74","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx":"75","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx":"76","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx":"77","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx":"78","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx":"79","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx":"80","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx":"81","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx":"82","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx":"83"},{"size":246,"mtime":1617706800040,"results":"84","hashOfConfig":"85"},{"size":681,"mtime":1617706799980,"results":"86","hashOfConfig":"85"},{"size":86,"mtime":1617706800039,"results":"87","hashOfConfig":"85"},{"size":115,"mtime":1617706800042,"results":"88","hashOfConfig":"85"},{"size":208,"mtime":1617706800042,"results":"89","hashOfConfig":"85"},{"size":870,"mtime":1617706800043,"results":"90","hashOfConfig":"85"},{"size":1266,"mtime":1620390577734,"results":"91","hashOfConfig":"85"},{"size":2267,"mtime":1617706800045,"results":"92","hashOfConfig":"85"},{"size":97,"mtime":1617706800039,"results":"93","hashOfConfig":"85"},{"size":1336,"mtime":1619794564013,"results":"94","hashOfConfig":"85"},{"size":890,"mtime":1620127648774,"results":"95","hashOfConfig":"85"},{"size":2189,"mtime":1620206016196,"results":"96","hashOfConfig":"85"},{"size":2264,"mtime":1621505601008,"results":"97","hashOfConfig":"85"},{"size":724,"mtime":1619935711322,"results":"98","hashOfConfig":"85"},{"size":2151,"mtime":1621162959363,"results":"99","hashOfConfig":"85"},{"size":464,"mtime":1619794564014,"results":"100","hashOfConfig":"85"},{"size":1016,"mtime":1617706800036,"results":"101","hashOfConfig":"85"},{"size":109,"mtime":1617706800038,"results":"102","hashOfConfig":"85"},{"size":64538,"mtime":1617706800036,"results":"103","hashOfConfig":"85"},{"size":560,"mtime":1617706800035,"results":"104","hashOfConfig":"85"},{"size":326,"mtime":1617706800034,"results":"105","hashOfConfig":"85"},{"size":5045,"mtime":1621099852139,"results":"106","hashOfConfig":"85"},{"size":531,"mtime":1619794564007,"results":"107","hashOfConfig":"85"},{"size":3390,"mtime":1621505709761,"results":"108","hashOfConfig":"85"},{"size":284,"mtime":1617706800022,"results":"109","hashOfConfig":"85"},{"size":335,"mtime":1617706800021,"results":"110","hashOfConfig":"85"},{"size":1340,"mtime":1619794564034,"results":"111","hashOfConfig":"85"},{"size":159,"mtime":1619794564009,"results":"112","hashOfConfig":"85"},{"size":431,"mtime":1617706800036,"results":"113","hashOfConfig":"85"},{"size":2463,"mtime":1620206016196,"results":"114","hashOfConfig":"85"},{"size":1281,"mtime":1617706800034,"results":"115","hashOfConfig":"85"},{"size":2375,"mtime":1621099852137,"results":"116","hashOfConfig":"85"},{"size":319,"mtime":1617706800042,"results":"117","hashOfConfig":"85"},{"size":1709,"mtime":1619299756673,"results":"118","hashOfConfig":"85"},{"size":388,"mtime":1617803904992,"results":"119","hashOfConfig":"85"},{"size":223,"mtime":1619794564013,"results":"120","hashOfConfig":"85"},{"size":388,"mtime":1617706800043,"results":"121","hashOfConfig":"85"},{"size":302,"mtime":1619794564012,"results":"122","hashOfConfig":"85"},{"size":445,"mtime":1620127648776,"results":"123","hashOfConfig":"85"},{"size":626,"mtime":1619935711318,"results":"124","hashOfConfig":"85"},{"size":268,"mtime":1619935711323,"results":"125","hashOfConfig":"85"},{"size":256,"mtime":1617706800043,"results":"126","hashOfConfig":"85"},{"size":8781,"mtime":1617706800021,"results":"127","hashOfConfig":"85"},{"size":1000,"mtime":1619794563996,"results":"128","hashOfConfig":"85"},{"size":5027,"mtime":1621518764101,"results":"129","hashOfConfig":"85"},{"size":961,"mtime":1620032449666,"results":"130","hashOfConfig":"85"},{"size":14300,"mtime":1621432842002,"results":"131","hashOfConfig":"85"},{"size":17302,"mtime":1620810449055,"results":"132","hashOfConfig":"85"},{"size":472,"mtime":1621099852138,"results":"133","hashOfConfig":"85"},{"size":698,"mtime":1617706800026,"results":"134","hashOfConfig":"85"},{"size":561,"mtime":1617706800025,"results":"135","hashOfConfig":"85"},{"size":1434,"mtime":1617706800059,"results":"136","hashOfConfig":"85"},{"size":1312,"mtime":1617706800035,"results":"137","hashOfConfig":"85"},{"size":282,"mtime":1620031046759,"results":"138","hashOfConfig":"85"},{"size":7601,"mtime":1620392287273,"results":"139","hashOfConfig":"85"},{"size":4451,"mtime":1619794563998,"results":"140","hashOfConfig":"85"},{"size":1876,"mtime":1620583198598,"results":"141","hashOfConfig":"85"},{"size":10302,"mtime":1621520034465,"results":"142","hashOfConfig":"85"},{"size":609,"mtime":1619794563997,"results":"143","hashOfConfig":"85"},{"size":4421,"mtime":1619794564000,"results":"144","hashOfConfig":"85"},{"size":4482,"mtime":1620761185150,"results":"145","hashOfConfig":"85"},{"size":2617,"mtime":1619935711319,"results":"146","hashOfConfig":"85"},{"size":21249,"mtime":1619794563995,"results":"147","hashOfConfig":"85"},{"size":220,"mtime":1619794564003,"results":"148","hashOfConfig":"85"},{"size":3612,"mtime":1619794563999,"results":"149","hashOfConfig":"85"},{"size":696,"mtime":1617706800031,"results":"150","hashOfConfig":"85"},{"size":3259,"mtime":1621099852135,"results":"151","hashOfConfig":"85"},{"size":6529,"mtime":1621441883513,"results":"152","hashOfConfig":"85"},{"size":3101,"mtime":1619794564014,"results":"153","hashOfConfig":"85"},{"size":268,"mtime":1619794564008,"results":"154","hashOfConfig":"85"},{"size":4499,"mtime":1620503336125,"results":"155","hashOfConfig":"85"},{"size":535,"mtime":1617706800025,"results":"156","hashOfConfig":"85"},{"size":2149,"mtime":1619794564001,"results":"157","hashOfConfig":"85"},{"size":2009,"mtime":1619794564004,"results":"158","hashOfConfig":"85"},{"size":5484,"mtime":1620583059498,"results":"159","hashOfConfig":"85"},{"size":2540,"mtime":1620031750454,"results":"160","hashOfConfig":"85"},{"size":2549,"mtime":1620031750455,"results":"161","hashOfConfig":"85"},{"size":2346,"mtime":1619794564003,"results":"162","hashOfConfig":"85"},{"size":5753,"mtime":1619794564004,"results":"163","hashOfConfig":"85"},{"size":3050,"mtime":1619794564006,"results":"164","hashOfConfig":"85"},{"size":11111,"mtime":1620206016195,"results":"165","hashOfConfig":"85"},{"size":601,"mtime":1617706800029,"results":"166","hashOfConfig":"85"},{"size":2514,"mtime":1617706800029,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1tu7uso",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"265","usedDeprecatedRules":"170"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"170"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"170"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\index.tsx",[],["342","343"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\App.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\history\\credationls-history.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\home.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signin.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signup.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\pages-route.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\uni-requests\\university.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\signup-context\\uni-data-context.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\apis-caller.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-container.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\login-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\home-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\status-codes.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\urls.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\axios-creation.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\form-arrays.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-image.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-forms.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\signUpButton.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\user-requestes\\user.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\forgotPassword.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx",["344"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\utilities\\alearts.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\local-storage-keys.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\messages.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-buttons.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-inputs.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\side-bar-section-cards.ts",["345"],"import { sideBarSectionInterface } from '../interfaces/side-bar/side-bar-section-interface';\r\n\r\n// icons\r\nimport homeIcon from '../assets/home/side-bar/home.svg';\r\nimport createIcon from '../assets/home/side-bar/create.svg';\r\nimport editIcon from '../assets/home/side-bar/edit.svg';\r\nimport createTopicIcon from '../assets/home/side-bar/create-topic.svg';\r\nimport infoIcon from '../assets/home/side-bar/info.svg';\r\nimport managerIcon from '../assets/home/side-bar/teamwork.svg';\r\nimport profileIcon from '../assets/home/side-bar/profile.svg';\r\nimport examsIcon from '../assets/home/side-bar/online-test.svg';\r\nimport rulesIcon from '../assets/home/side-bar/regulation.svg';\r\nimport settingsIcon from '../assets/home/side-bar/settings.svg';\r\nimport tableIcon from '../assets/home/side-bar/table.svg';\r\nimport feedbackIcon from '../assets/home/side-bar/feedback.svg';\r\nimport logOutIcon from '../assets/home/side-bar/logout.svg';\r\nimport guideIcon from '../assets/home/side-bar/guide.svg';\r\n\r\n// pages\r\nimport { cretateTopics, dataEntryRoute, scheduleRoute, updatematerialsRoute, uniMangerRoute, materialInfoRoute, singinPageRoute, notFoundRoute, profileRoute, guidanceRoute } from './pages-route';\r\n\r\nconst dataEntrySectionCards: sideBarSectionInterface = {\r\n\tsectionTitle: 'Data Entry',\r\n\tsectionCards: [\r\n\t\t{ cardName: 'Profile', routeTo: profileRoute, cardIcon: profileIcon },\r\n\t\t{ cardName: 'Create Material', routeTo: dataEntryRoute, cardIcon: createIcon },\r\n\t\t{ cardName: 'Update Materials', routeTo: updatematerialsRoute, cardIcon: editIcon },\r\n\t\t{ cardName: 'Create Topic', routeTo: cretateTopics, cardIcon: createTopicIcon },\r\n\t\t{ cardName: 'Materials info', routeTo: materialInfoRoute, cardIcon: infoIcon },\r\n\t\t{ cardName: 'Schedule', routeTo: scheduleRoute, cardIcon: tableIcon },\r\n\t\t{ cardName: 'Settings', routeTo: notFoundRoute, cardIcon: settingsIcon },\r\n\t\t{ cardName: 'Uni managers', routeTo: uniMangerRoute, cardIcon: managerIcon },\r\n\t\t{ cardName: 'Exams', routeTo: notFoundRoute, cardIcon: examsIcon },\r\n\t\t{ cardName: 'Facts & Rules', routeTo: notFoundRoute, cardIcon: rulesIcon },\r\n\t\t{ cardName: 'Feedback', routeTo: notFoundRoute, cardIcon: feedbackIcon },\r\n\t\t{ cardName: 'Guidance', routeTo: guidanceRoute, cardIcon: guideIcon }, \r\n\t\t{ cardName: 'Log out', routeTo: singinPageRoute, cardIcon: logOutIcon },\r\n\r\n\t]\r\n};\r\n\r\nexport { dataEntrySectionCards };\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\book-entry-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\manual-entry.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\material-info-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\profile-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\view-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\guidance.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\not-found-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-entry-section.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\schedule-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\uni-manager-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\logo.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\search-area.tsx",["346","347","348","349","350","351"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx",["352"],"import { useState } from 'react';\r\nimport CardCreateor from '../../../../components/home/subpages/data-entry/add-manually';\r\nimport { match as matchType, useLocation } from 'react-router-dom';\r\nimport { addResMethods } from '../../../../constants/pages-route';\r\n\r\nexport default function UpdateTopic() {\r\n    let loc = useLocation();\r\n\r\n    let { materialID, topicID, name, photo, description }: any = loc.state;\r\n    const basicTopicRoute: string = `${addResMethods}/${materialID}/${topicID}`;\r\n    const [resRoute, setResRoute] = useState<string>(basicTopicRoute);\r\n\r\n    let inputs = [\"Topic Name\", \"Topic Image URL\"];\r\n    let descriptionInput = description;\r\n    let values = [name, photo];\r\n    let id = materialID;\r\n    let rate = 5;\r\n\r\n\r\n    return (\r\n        <div className=\"dynamic-subpage\">\r\n            <CardCreateor {...{ inputs, descriptionInput, values, localMaterialID: id, topicID, rate, resRoute, setResRoute }} />\r\n        </div>\r\n    );\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\view-all-res.tsx",["353","354","355","356","357","358","359","360","361","362","363","364","365"],"import { match as infoPageMatch, useHistory, useLocation } from 'react-router-dom';\r\nimport { APIsCaller } from './../../../../requestes/apis-caller';\r\nimport { getAllRes, deleteRes } from './../../../../requestes/res-requests/res'\r\nimport MaterialCard from \"./../viewer/material-card\";\r\nimport ResCard from \"./../viewer/res-card\";\r\nimport * as Types from './../../../../constants/res-types';\r\nimport PdfSVG from './../../../../assets/data-entry-assets/pdf.svg'\r\nimport { updateTopicRes } from '../../../../constants/pages-route';\r\n\r\nimport lottie, { AnimationItem } from 'lottie-web';\r\nimport '../../../../styles/data-entry-styles/res/view-all-topic-res.css'\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport loadingIcon from '../../../../assets/material-info-assets/loading_icon.json';\r\n\r\ninterface LooseObject {\r\n    [key: string]: any\r\n}\r\n\r\n// HTODO: add loding thingy.\r\n// HTDOD: clean code more.\r\nexport default function ViewAllRes({ match }: { match: infoPageMatch<{ matID: string }> }) {\r\n    let loc = useLocation();\r\n    let { matID, topicID }: any = match.params;\r\n    let { title, photo, rate, description }: any = loc.state;\r\n    let allTypes = Object.entries(Types).map((item) => item[1]);\r\n    let [allRes, setAllRes] = useState<Array<Array<any>>>([]);\r\n    let [loading, setLoding] = useState(true);\r\n    let [loadingAnimation, setLoadingAnimation] = useState<AnimationItem>();\r\n\r\n    const loadingDivRef = useRef(null);\r\n\r\n    // HTODO: add to local storage.\r\n    useEffect(() => {\r\n        // loading animation for the loading animation.\r\n        // this comment is intended to be confusing :);\r\n        setLoadingAnimation(lottie.loadAnimation({\r\n            container: loadingDivRef.current!,\r\n            autoplay: true,\r\n            renderer: 'svg',\r\n            loop: true,\r\n            animationData: loadingIcon,\r\n        }));\r\n\r\n\r\n        const getData = async () => {\r\n            const requestParams = { materialID: matID, topicID: topicID };\r\n            let { data } = await APIsCaller({ api: getAllRes, requestParams: requestParams });\r\n            let tempAllRes = new Array(allTypes.length).fill(0).map(() => new Array()) as any;\r\n            data.resorses.forEach((item: any) => {\r\n                tempAllRes[allTypes.indexOf(item.resType)].push(item)\r\n                setLoding(false);\r\n            });\r\n            setAllRes(tempAllRes);\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    let editResFun = (history: any, cardID: any, cardTitle: any, cardPhoto: any, ResDes: any, info: any) => {\r\n        history.push(`${updateTopicRes}/${info.resType}/${matID}/${topicID}/${cardID}`, { materialID: matID, topicID: topicID, ResID: cardID, name: cardTitle, photo: cardPhoto, description: ResDes, info: info })\r\n    }\r\n\r\n    let deleteResFun = async (cardID: any) => {\r\n        const requestParams = { materialID: matID, topicID: topicID, resorseID: cardID };\r\n        // HTODO: Make this a comp\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, delete it!',\r\n            showLoaderOnConfirm: true,\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                Swal.fire({\r\n                    title: \"Deleting Topic\",\r\n                    text: \"Please Wait...\",\r\n                    didOpen: async () => {\r\n                        Swal.showLoading();\r\n                        let res = await APIsCaller({ api: deleteRes, requestParams });\r\n                        Swal.hideLoading();\r\n                        if (res.status === 200) {\r\n                            // after deleting completed\r\n                            removeFromAllRes(cardID);\r\n                            Swal.fire(\r\n                                'Deleted!',\r\n                                res.data.message,\r\n                                'success'\r\n                            )\r\n                        } else {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Oops...',\r\n                                text: 'Something went wrong!',\r\n                                footer: '<a href>Please Try Agian</a>'\r\n                            })\r\n                        }\r\n\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // HTODO: make this better.\r\n    let removeFromAllRes = (resID: string) => {\r\n        let newRes = allRes.map(item => {\r\n            return item.filter(res => {\r\n                return res.resID !== resID;\r\n            })\r\n        })\r\n        setAllRes(newRes);\r\n    }\r\n\r\n    let showRes = (history:any, info: LooseObject) => {\r\n        info.readOnly = true;\r\n        history.push(`${updateTopicRes}/${info.resType}/${matID}/${topicID}/${info.resID}`, { materialID: matID, topicID: topicID, ResID: \"\", name: \"\", photo: \"\", description: \"\", info: info })\r\n    }\r\n\r\n    let onClickHandlers = {\r\n        edit: editResFun,\r\n        delete: deleteResFun,\r\n        body: (history:any,info: any) => { },\r\n    }\r\n\r\n    return (\r\n        <div className=\"all-topic-res-contianer\">\r\n            {/* TODO: move this to be a component */}\r\n            <div id=\"material-card\">\r\n                <MaterialCard cardTitle={title} cardPhoto={photo} cardRate={rate} />\r\n            </div>\r\n\r\n            <div id=\"desc\">\r\n                <p id=\"desc-title\">Description: </p>\r\n                <p id=\"desc-text\">{description || \"No Description\"}</p>\r\n            </div>\r\n\r\n            <div className=\"resource-section\">\r\n                {\r\n                    (loading) ?\r\n                        <div  className=\"loading-div\" ref={loadingDivRef}></div>\r\n                        : allRes.map((item: any, idx: any) => {\r\n                            return (\r\n                                <div key={idx} tabIndex={0} className=\"expand-on-foucs\">\r\n                                    <span className=\"section-name\"><span>{allTypes[idx]}</span><span className=\"arrow\">&#9660;</span></span>\r\n                                    <div className=\"content-section\">\r\n                                        {\r\n                                            item.map((res: any, id: any) => {\r\n                                                switch (res.resType) {\r\n                                                    case \"PDFs\":\r\n                                                        // resID\r\n                                                        // fileName: \"test\"\r\n                                                        // bookRefrence: \"https://res.cloudinary.com/dgviin24k/image/upload/v1620041621/20vanemdeboastrees.pdf\"\r\n                                                        // rate: 5\r\n                                                        onClickHandlers.body = (info: any) => { };\r\n                                                        return (\r\n                                                            <a key={id} href={res.link || res.bookRefrence} target=\"_blank\">\r\n                                                                <ResCard key={id}\r\n                                                                    cardID={res.resID}\r\n                                                                    cardPhoto={PdfSVG}\r\n                                                                    cardTitle={res.fileName || title || \"Book Chapter\"}\r\n                                                                    cardRate={res.rate}\r\n                                                                    info={res}\r\n                                                                    onClickHandlers={{...onClickHandlers}}\r\n                                                                />\r\n                                                            </a>\r\n                                                        )\r\n                                                        break;\r\n                                                    case \"Videos\":\r\n                                                        // link: \"youtube-link-test\"\r\n                                                        // resType: \"Videos\"\r\n                                                        // rate: 0\r\n                                                        // videoImage: \"/static/media/youtube.2044ed05.jpg\"\r\n                                                        // videoName: \"???????\r\n                                                        onClickHandlers.body = (info: any) => { };\r\n                                                        return (\r\n                                                            <a key={id} href={res.link} target=\"_blank\">\r\n                                                                <ResCard key={id}\r\n                                                                    cardID={res.resID}\r\n                                                                    cardPhoto={res.videoImage}\r\n                                                                    cardTitle={res.videoName}\r\n                                                                    cardRate={res.topicRate}\r\n                                                                    info={res}\r\n                                                                    onClickHandlers={{...onClickHandlers}} />\r\n                                                            </a>)\r\n                                                        break;\r\n                                                    case \"Q&A\":\r\n                                                        // QName: \"best Q\" \r\n                                                        // answer: \"aaaaaa\"\r\n                                                        // question: \"a\"\r\n                                                        // resType: \"Q&A\"\r\n                                                        // rate: 0\r\n                                                        onClickHandlers.body = showRes;\r\n                                                        return (\r\n                                                            <ResCard key={id}\r\n                                                                cardID={res.resID}\r\n                                                                cardPhoto={photo}\r\n                                                                cardTitle={res.QName || \"Q N\"}\r\n                                                                cardRate={res.topicRate}\r\n                                                                info={res}\r\n                                                                onClickHandlers={{...onClickHandlers}} />)\r\n                                                        break;\r\n                                                    case \"Resources\":\r\n                                                        // link: \"test-link\"\r\n                                                        // resType: \"Resources\"\r\n                                                        // topicRate: 0\r\n                                                        // websiteImage: \"/static/media/website.499d2971.webp\"\r\n                                                        // websiteName: \"???????\"\r\n                                                        onClickHandlers.body = (info: any) => { };\r\n                                                        return (\r\n                                                            <a key={id} href={res.link} target=\"_blank\">\r\n                                                                <ResCard key={id}\r\n                                                                    cardID={res.resID}\r\n                                                                    cardPhoto={res.websiteImage}\r\n                                                                    cardTitle={res.websiteName}\r\n                                                                    cardRate={res.topicRate}\r\n                                                                    info={res}\r\n                                                                    onClickHandlers={{...onClickHandlers}} />\r\n                                                            </a>)\r\n                                                        break;\r\n                                                    case \"Laws\":\r\n                                                        // lawConent: \"aa\"\r\n                                                        // lawExample: \"aaa\"\r\n                                                        // lawName: \"a\"\r\n                                                        // resType: \"Laws\"\r\n                                                        // topicRate: 0\r\n                                                        onClickHandlers.body = showRes;\r\n                                                        return (\r\n                                                            <ResCard key={id}\r\n                                                                cardID={res.resID}\r\n                                                                cardPhoto={photo}\r\n                                                                cardTitle={res.lawName}\r\n                                                                cardRate={res.topicRate}\r\n                                                                info={res}\r\n                                                                onClickHandlers={{...onClickHandlers}} />)\r\n                                                        break;\r\n                                                    default:\r\n                                                        console.log(\"Something worng have happend\");\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-res.tsx",["366","367","368","369","370","371","372","373","374","375"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport '../../../../styles/data-entry-styles/res/res-adders.css';\r\nimport pdfAnimation from '../../../../assets/data-entry-assets/pdf-animation.json';\r\nimport qAndA from '../../../../assets/data-entry-assets/Q-and-A.json';\r\nimport rulesAnimation from '../../../../assets/data-entry-assets/rules.json';\r\nimport usefulResAnimation from '../../../../assets/data-entry-assets/useful-resources.json';\r\nimport videoAnimatedIcon from '../../../../assets/data-entry-assets/video-animated-icon.json';\r\nimport defualtWebsiteImage from \"../../../../assets/data-entry-assets/website.webp\";\r\nimport DropZone from './drop-zone';\r\nimport lottie from 'lottie-web';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { updateRes } from '../../../../requestes/res-requests/res';\r\nimport { pdfsType, questionAndAnswerType, rulesType, usefulResType, videosType } from '../../../../constants/res-types';\r\nimport { showLoading } from '../../../../utilities/alearts';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport youtubeImage from \"../../../../assets/data-entry-assets/youtube.jpg\";\r\nimport axios from 'axios';\r\nimport { match as infoPageMatch, useLocation } from 'react-router';\r\n\r\n\r\nexport default function UpdateRes({ match }: { match: infoPageMatch<{ resType: string; matID: string; topicID: string; resID: string }> }) {\r\n    let loc = useLocation();\r\n    let { ign1, ign2, ign3, name, photo, description, info }: any = loc.state;\r\n    let { resType, matID, topicID, resID } = match.params;\r\n\r\n    switch (info.resType) {\r\n        case \"PDFs\":\r\n            return <PDF matID={matID} topicID={topicID} resID={resID} fileName={info.fileName || name} bookRefrence={info.bookRefrence} />\r\n        // break;\r\n        case \"Videos\":\r\n            return <Video matID={matID} topicID={topicID} resID={resID} videoName={info.videoName} VideoLink={info.link} videoImgURl={info.videoImage} />\r\n            break;\r\n        case \"Q&A\":\r\n            return <QA matID={matID} topicID={topicID} resID={resID} question={info.question} answer={info.answer} QName={info.QName} isReadOnly={info.readOnly || false} />\r\n            break;\r\n        case \"Resources\":\r\n            return <UsefulRes matID={matID} topicID={topicID} resID={resID} linkName={info.link} linkImgURl={info.websiteImage} />\r\n            break;\r\n        case \"Laws\":\r\n            return <Rules matID={matID} topicID={topicID} resID={resID} lawName={info.lawName} lawConent={info.lawConent} lawExample={info.lawExample} isReadOnly={info.readOnly || false} />\r\n            break;\r\n        default:\r\n            console.log(\"Something worng have happend\");\r\n            return <p>Error Talk with Hamza</p>\r\n    }\r\n}\r\n\r\nfunction PDF({ matID, topicID, resID, fileName, bookRefrence }: any) {\r\n    // fileName\r\n    // bookRefrence\r\n    const results: string[] = ['', '', ''];\r\n    const bookLinkInput = useRef<HTMLInputElement>(null);\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const pdfNameInput = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: pdfAnimation\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n\r\n    const submitHandler = async () => {\r\n        const pdfName: string = pdfNameInput.current!.value;\r\n        const pdfLink: string = bookLinkInput.current!.value;\r\n        if (pdfName === '' || pdfLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: pdfsType,\r\n                fileName: pdfName,\r\n                bookRefrence: pdfLink\r\n            };\r\n\r\n\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input type=\"text\" className=\"res-input\" placeholder=\"PDF Name\" ref={pdfNameInput} defaultValue={fileName || \"temp name\"} onChange={e => { results[0] = e.target.value }} />\r\n            <input type=\"url\" className=\"res-input\" id=\"pdf-link\" placeholder=\"PDF link\" ref={bookLinkInput} defaultValue={bookRefrence} onChange={e => { results[1] = e.target.value }} />\r\n            <DropZone {...{ bookLinkInput, results, pdfNameInput }} />\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// TODO add loading after when the user adds the link\r\nfunction Video({ matID, topicID, resID, videoName, VideoLink, videoImgURl }: any) {\r\n    // link: \"youtube-link-test\"\r\n    // resType: \"Videos\"\r\n    // rate: 0\r\n    // videoImage: \"/static/media/youtube.2044ed05.jpg\"\r\n    // videoName: \"???????\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const videoRef = useRef<HTMLInputElement>(null);\r\n    const [name, setName] = useState<string>(videoName);\r\n    const [imgURl, setImgURL] = useState<string>(videoImgURl);\r\n    const submitHandler = async () => {\r\n        const VideoLink: string = videoRef.current!.value;\r\n        if (VideoLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: videosType,\r\n                videoName: name, //TODO get the title of the video some how\r\n                link: VideoLink,\r\n                videoImage: imgURl\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n\r\n    const changeVideCard = async () => {\r\n        const url: string = videoRef.current!.value || '';\r\n        const { data } = await axios.get(`https://api.linkpreview.net/?key=d71742f9c4c457e68276f6288fdfc4d0&q=${url}`);\r\n        const { image, title } = data;\r\n        if (image) {\r\n            setImgURL(image);\r\n            setName(title);\r\n        } else {\r\n            setImgURL(youtubeImage);\r\n            setName('???????');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: videoAnimatedIcon\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input\r\n                type=\"text\"\r\n                className=\"res-input\"\r\n                placeholder=\"video link\"\r\n                defaultValue={VideoLink}\r\n                ref={videoRef}\r\n                onChange={changeVideCard}\r\n                onBlur={changeVideCard}\r\n            />\r\n            <div className=\"video-previewer\">\r\n                <img src={imgURl} alt=\"youtube\" />\r\n                <div className=\"name-wrapper\">\r\n                    <div className=\"name\">{name}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UsefulRes({ matID, topicID, resID, linkName, linkImgURl }: any) {\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const urlRef = useRef<HTMLInputElement>(null);\r\n    const [name, setName] = useState<string>(linkName);\r\n    const [imgURl, setImgURL] = useState<string>(linkImgURl);\r\n\r\n    const changeVideCard = async () => {\r\n        const url: string = urlRef.current!.value || '';\r\n        const { data } = await axios.get(`https://api.linkpreview.net/?key=d71742f9c4c457e68276f6288fdfc4d0&q=${url}`);\r\n        const { image, title } = data;\r\n        if (image) {\r\n            setImgURL(image);\r\n            setName(title);\r\n        } else {\r\n            setImgURL(defualtWebsiteImage);\r\n            setName('???????');\r\n        }\r\n    };\r\n\r\n    const submitHandler = async () => {\r\n        const websiteLink: string = urlRef.current!.value;\r\n        if (websiteLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: usefulResType,\r\n                websiteName: name, //TODO get the title of the video some how\r\n                link: websiteLink,\r\n                websiteImage: imgURl\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        lottie.loadAnimation({\r\n            container: divRef.current!,\r\n            autoplay: true,\r\n            renderer: 'svg',\r\n            loop: true,\r\n            animationData: usefulResAnimation\r\n        }).setSpeed(0.8);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input\r\n                type=\"text\"\r\n                className=\"res-input\"\r\n                placeholder=\"Resource link\"\r\n                defaultValue={linkName}\r\n                ref={urlRef}\r\n                onChange={changeVideCard}\r\n                onBlur={changeVideCard}\r\n            />\r\n            <div className=\"video-previewer\">\r\n                <img src={imgURl} alt=\"youtube\" />\r\n                <div className=\"name-wrapper\">\r\n                    <div className=\"name\">{name}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction QA({ matID, topicID, resID, question, answer, QName, isReadOnly = false }: any) {\r\n    let [selectable, setSelectable] = useState(false);\r\n    let [answerTextAreaClasses, setAnswerTextAreaClasses] = useState(\"res-text-area blurry-text\")\r\n\r\n    const divRef = useRef<HTMLInputElement>(null);\r\n    const qNameRef = useRef<HTMLInputElement>(null);\r\n    const questionRef = useRef<HTMLTextAreaElement>(null);\r\n    const answerRef = useRef<HTMLTextAreaElement>(null);\r\n    const submitHandler = async () => {\r\n        const question: string = questionRef.current!.value;\r\n        const answer: string = answerRef.current!.value;\r\n        const QName: string = qNameRef.current!.value;\r\n        if (question === '' || answer === '' || QName === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: questionAndAnswerType,\r\n                question,\r\n                answer,\r\n                QName,\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: qAndA\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n\r\n    let showAnswer = () => {\r\n        setSelectable(true);\r\n        setAnswerTextAreaClasses(\"res-text-area show-text\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            {\r\n                isReadOnly ?\r\n                    <>\r\n                        <input className=\"q-name-input\" defaultValue={QName} type=\"text\" ref={qNameRef} placeholder=\"Question Name\" readOnly />\r\n                        <textarea className=\"res-text-area\" defaultValue={question} placeholder=\"Question\" ref={questionRef} readOnly />\r\n                        <textarea onMouseDown={() => selectable} onSelect={() => selectable} className={answerTextAreaClasses} defaultValue={answer} placeholder=\"Answer\" ref={answerRef} readOnly />\r\n                        <button className=\"res-submit-btn\" onClick={showAnswer}>Show Answer</button>\r\n                    </>\r\n                    : <>\r\n                        <input className=\"q-name-input\" defaultValue={QName} type=\"text\" ref={qNameRef} placeholder=\"Question Name\" />\r\n                        <textarea className=\"res-text-area\" defaultValue={question} placeholder=\"Question\" ref={questionRef} />\r\n                        <textarea className=\"res-text-area\" defaultValue={answer} placeholder=\"Answer\" ref={answerRef} />\r\n                        <div className=\"res-submit-btn\" onClick={submitHandler}>submit</div>\r\n                    </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Rules({ matID, topicID, resID, lawName, lawConent, lawExample, isReadOnly = false }: any) {\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const lawNameRef = useRef<HTMLInputElement>(null);\r\n    const lawConentRef = useRef<HTMLTextAreaElement>(null);\r\n    const lawExampleRef = useRef<HTMLTextAreaElement>(null);\r\n    const submitHandler = async () => {\r\n        const lawName: string = lawNameRef.current!.value;\r\n        const lawConent: string = lawConentRef.current!.value;\r\n        const lawExample: string = lawExampleRef.current!.value;\r\n        if (lawName === '' || lawConent === '' || lawExample === '')\r\n            Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: rulesType,\r\n                lawName,\r\n                lawConent,\r\n                lawExample\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: rulesAnimation\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            {\r\n                isReadOnly ?\r\n                    <>\r\n                        <input type=\"text\" className=\"res-input\" placeholder=\"Law name\" defaultValue={lawName} ref={lawNameRef} readOnly />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Law content\" defaultValue={lawConent} ref={lawConentRef} readOnly />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Example\" defaultValue={lawExample} ref={lawExampleRef} readOnly />\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <input type=\"text\" className=\"res-input\" placeholder=\"Law name\" defaultValue={lawName} ref={lawNameRef} />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Law content\" defaultValue={lawConent} ref={lawConentRef} />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Example\" defaultValue={lawExample} ref={lawExampleRef} />\r\n                        <div className=\"res-submit-btn\" onClick={submitHandler}> submit </div>\r\n                    </>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\data-entry-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\validation\\signup-validation.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-dropdown.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\res-types.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx",["376","377"],"import React, { useContext, useEffect, useRef } from 'react';\r\nimport '../../../../styles/data-entry-styles/manual/manual-entry.css';\r\nimport lottie from 'lottie-web';\r\nimport floattingLaptop from '../../../../assets/data-entry-assets/floatting-laptop.json';\r\nimport emptySVG from '../../../../assets/data-entry-assets/empty.svg';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { createNewMaerial, createTopic, updateMaterial, updateTopic } from '../../../../requestes/material-requests/mateirla';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport { DynamicContentContext } from '../../../../contexts/home-context/dynamic-content-state-context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype cardCreateorInterface = {\r\n\tinputs: string[];\r\n\tdescriptionInput?: string;\r\n\tvalues: string[];\r\n\tlocalMaterialID?: string;\r\n\trate?: number;\r\n\tresRoute: string;\r\n\ttopicID?: string;\r\n\tResID?: string;\r\n\tsetResRoute: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function CardCreateor({ inputs, descriptionInput, values, localMaterialID, topicID, ResID, rate, resRoute, setResRoute }: cardCreateorInterface) {\r\n\tconst inputLottie = useRef(null);\r\n\tconst materialName = useRef<HTMLPreElement>(null);\r\n\tconst previewer = useRef<HTMLImageElement>(null);\r\n\tconst emptyName: string = '???? ????';\r\n\tconst results: string[] = (values.length === inputs.length) ? values : new Array(inputs.length).fill('');\r\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\tconst addResButtonRef = useRef<HTMLDivElement>(null);\r\n\tconst { materialsTable, setMaterialsTable } = useContext(DynamicContentContext);\r\n\r\n\tuseEffect (() => {\r\n\t\tif(topicID) {\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlottie.loadAnimation({\r\n\t\t\tcontainer: inputLottie.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: floattingLaptop\r\n\t\t});\r\n\t}, [materialsTable, resRoute]);\r\n\r\n\tconst inputHandler = (e: any, index: number) => {\r\n\t\tconst value: string = e.target.value || '';\r\n\t\tif (index === 0) materialName.current!.innerHTML = value !== '' ? value : emptyName;\r\n\t\telse if (index === 1) {\r\n\t\t\tpreviewer.current!.src = (value !== '' ? value : emptySVG)\r\n\t\t}\r\n\t\tresults[index] = value;\r\n\t};\r\n\r\n\tconst submitHandler = () => {\r\n\t\tlet emptyIndex: number = -1;\r\n\t\tresults.forEach((result, index) => (result === '' || !result) ? emptyIndex = index : '')\r\n\t\tif (emptyIndex !== -1) Swal.fire('Ops!', `Sorry but the \"${inputs[emptyIndex]}\" is required`, 'error');\r\n\t\telse {\r\n\t\t\tif(ResID != undefined) {}\r\n\t\t\telse if (topicID != undefined) { updateTopicDocument(); }\r\n\t\t\telse if (inputs[0].includes('Topic')) submitTopic();\r\n\t\t\telse if (values.length !== 0) updateDocument();\r\n\t\t\telse if (descriptionInput) submitMaterial();\r\n\t\t\t// to add the topic later\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody: any = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: rate\r\n\t\t}\r\n\t\tconst requestParams = {\r\n\t\t\tmaterialID: localMaterialID!\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: updateMaterial, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === OK) {\r\n\t\t\tupdateMaterialLocally(localMaterialID!, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitMaterial = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: 5,\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: createNewMaerial, requestBody });\r\n\t\tconst { message, materialID } = data;\r\n\r\n\t\tif (status === CREATED) {\r\n\t\t\tupdateMaterialLocally(materialID, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', message || 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitTopic = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID }\r\n\t\tconst { data, status } = await APIsCaller({ api: createTopic, requestBody, requestParams });\r\n\t\tconst { message, topicID } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\tconsole.log(addResButtonRef.current)\r\n\t\t\tsetResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\tawait Swal.fire('Thanks', message, 'success');\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateTopicDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID, topicID: topicID }\r\n\t\tconst { data, status } = await APIsCaller({ api: updateTopic, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\t// setResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\t// addResButtonRef.current!.style.display = 'flex';\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateMaterialLocally = (matID: string, newMat: any) => {\r\n\t\tconst newData = {\r\n\t\t\t...materialsTable,\r\n\t\t\t[matID]: newMat\r\n\t\t}\r\n\t\tsetMaterialsTable(() => newData);\r\n\t}\r\n\r\n\tconst MaterialInputs = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"inputs-container\">\r\n\t\t\t\t{inputs.map((hint, index) => {\r\n\t\t\t\t\tif (values!.length > index) return <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} defaultValue={values[index]} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t\treturn <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t})}\r\n\t\t\t\t{\r\n\t\t\t\t\tdescriptionInput ? <textarea placeholder={descriptionInput} ref={textAreaRef}\r\n\t\t\t\t\t\tdefaultValue={(localMaterialID) ? materialsTable[localMaterialID].materialDesc : ''}\r\n\t\t\t\t\t\tonFocus={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflowY = 'scroll';\r\n\t\t\t\t\t\t}} onBlur={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflow = 'hidden';\r\n\t\t\t\t\t\t}} /> : <div />\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"lottie-input-container\" ref={inputLottie} />\r\n\t\t\t\t<div className=\"submit-material-button\" onClick={submitHandler}>\r\n\t\t\t\t\t{(values.length !== 0) ? \"Update\" : \"Submit\"}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Materialpreviewer = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"material-previewer-container\">\r\n\t\t\t\t<div className=\"material-previewer\" >\r\n\t\t\t\t\t<img src={(values.length >= 2) ? values[1] : emptySVG} alt=\"card-img\" ref={previewer} />\r\n\t\t\t\t\t<pre className=\"material-name-container\" ref={materialName}>\r\n\t\t\t\t\t\t{(values.length >= 2) ? values[0] : emptyName}\r\n\t\t\t\t\t</pre>\r\n\t\t\t\t</div>\r\n\t\t\t\t{addResButton()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\t// TODO if I recived the topic ID then the button should be display flex by defualt\r\n\tconst addResButton = () => {\r\n\t\treturn <NavLink to={resRoute}>\r\n\t\t\t<div className=\"add-res-button\" ref={addResButtonRef}>Add resources</div>\r\n\t\t</NavLink>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"manual-entry-method\">\r\n\t\t\t<MaterialInputs />\r\n\t\t\t<Materialpreviewer />\r\n\t\t</div>\r\n\t);\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\res-requests\\res.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\res-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\404\\404-componant.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx",["394","395","396","397","398","399"],"import { useContext, useEffect, useState } from 'react';\r\nimport { DynamicContentContext } from '../../../../contexts/home-context/dynamic-content-state-context';\r\nimport { cardInterface } from '../../../../interfaces/cards/cards';\r\nimport '../../../../styles/viewer/cards-viewer/cards-viewer.css';\r\nimport MaterialCard from './material-card';\r\nimport { cretateTopics, manualEntryRoute, materialInfoRoute, updatematerialsRoute, updateTopic } from '../../../../constants/pages-route';\r\nimport { match as cardsViewerMatch } from 'react-router-dom';\r\nimport saveIcon from '../../../../assets/home/profile/save.svg';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { updateUserProfile } from '../../../../requestes/user-requestes/user';\r\nimport { BAD_REQUEST, OK } from '../../../../constants/status-codes';\r\nexport default function CardsViewer({ match }: { match?: cardsViewerMatch<any> }) {\r\n\tconst { user, materialsTable, setUser, setDtaToSearchIn, searchResult } = useContext(DynamicContentContext);\r\n\tconst MySwal = withReactContent(Swal);\r\n\r\n\r\n\r\n\tconst createCardsList = (routeTo: string): cardInterface[] => {\r\n\t\tconst result: cardInterface[] = [];\r\n\t\tfor (let [key, value] of Object.entries(materialsTable)) {\r\n\t\t\tconst data: any = value;\r\n\t\t\tresult.push({\r\n\t\t\t\tcardPhoto: data.materialPhoto,\r\n\t\t\t\tcardRate: data.totalRate,\r\n\t\t\t\tcardTitle: data.materialName,\r\n\t\t\t\tcardID: key,\r\n\t\t\t\trouteTo: `${routeTo}/${key}`\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst scheduleCardList = () => {\r\n\t\tconst result: cardInterface[] = [];\r\n\t\tfor (let [key, value] of Object.entries(materialsTable)) {\r\n\t\t\tconst data: any = value;\r\n\t\t\tresult.push({\r\n\t\t\t\tcardPhoto: data.materialPhoto,\r\n\t\t\t\tcardRate: data.totalRate,\r\n\t\t\t\tcardTitle: data.materialName,\r\n\t\t\t\tcardID: key,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconst urlHandler = (): cardInterface[] => {\r\n\t\tconst url: string | undefined = match?.url;\r\n\t\tif (!url) return scheduleCardList();\r\n\r\n\t\tswitch (url) {\r\n\t\t\tcase updatematerialsRoute: return createCardsList(manualEntryRoute);\r\n\t\t\tcase cretateTopics: return createCardsList(updateTopic);\r\n\t\t\tcase materialInfoRoute: return createCardsList(materialInfoRoute);\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst [data, setData] = useState<(cardInterface | undefined)[]>([]);\r\n\tconst [selected, setSelected] = useState<(cardInterface | undefined)[]>();\r\n\tconst [userSchedule, setUserSchedule] = useState<(string | undefined)[]>(user?.userProfile?.schedule);\r\n\tconst [adding, setAdding] = useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(user)\r\n\r\n\t\tdefualtValues();\r\n\t}, [userSchedule])\r\n\r\n\r\n\t// For search logic\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"data\", data);\r\n\t\tif(data.length != 0)\r\n\t\t\tsetDtaToSearchIn(data.map(item => { return { key: item?.cardTitle, value: item?.cardID } }));\r\n\t}, [data]);\r\n\r\n\t// For search logic\r\n\tuseEffect(() => {\r\n\t\tsetData(urlHandler());\r\n\r\n\t\treturn () => {\r\n\t\t\tsetDtaToSearchIn(undefined);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst SaveFAB = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"save-button\" onClick={saveShcedule}>\r\n\t\t\t\t<img alt=\"save\" src={saveIcon} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst saveShcedule = async () => {\r\n\r\n\t\tconsole.log(`userSchedule`, userSchedule);\r\n\t\tconst { isConfirmed } = await MySwal.fire({\r\n\t\t\ttitle: 'Materials',\r\n\t\t\thtml: <VeiwSelected />,\r\n\t\t\ticon: \"info\",\r\n\t\t\tconfirmButtonText: \"Create\",\r\n\t\t\twidth: \"70vw\",\r\n\t\t\tconfirmButtonColor: \"#766ffa\",\r\n\t\t})\r\n\t\tif (isConfirmed) await saveToFirebase()\r\n\t}\r\n\r\n\tconst saveToFirebase = async () => {\r\n\t\tMySwal.fire('');\r\n\t\tMySwal.showLoading();\r\n\t\ttry {\r\n\t\t\tconst requestBody = {\r\n\t\t\t\tschedule: userSchedule\r\n\t\t\t}\r\n\t\t\tconsole.log(requestBody);\r\n\t\t\tconst { status } = await APIsCaller({ api: updateUserProfile, requestBody });\r\n\t\t\t// TODO fix it very very very soooooooooooooooon\r\n\t\t\tif (status === OK || status === BAD_REQUEST) {\r\n\t\t\t\tconst newUser = { ...user };\r\n\t\t\t\tnewUser.userProfile.schedule = userSchedule;\r\n\t\t\t\tsetUser(newUser);\r\n\t\t\t\tSwal.fire(\"Congrats\", \"Your Schedule has been updated!\", \"success\");\r\n\t\t\t} else Swal.fire(\"Ops!\", \"Something went wrong\", \"error\");\r\n\t\t} catch (err) {\r\n\t\t\tSwal.fire(\"Ops!\", \"Something went wrong\", \"error\");\r\n\t\t}\r\n\t}\r\n\r\n\tconst VeiwSelected = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className='schedule-alert'>\r\n\t\t\t\t{selected?.map((card, index) => <MaterialCard key={index} {...card!} submitHandler={removeCardFromSchedule} option=\"-\" />)}\r\n\t\t\t</div>)\r\n\t}\r\n\r\n\tconst defualtValues = () => {\r\n\r\n\t\tconst temp: cardInterface[] = [];\r\n\t\tuserSchedule?.forEach((val: any) => {\r\n\t\t\tconst currentMat = materialsTable[val];\r\n\t\t\ttemp.push({\r\n\t\t\t\tcardPhoto: currentMat.materialPhoto,\r\n\t\t\t\tcardRate: currentMat.totalRate,\r\n\t\t\t\tcardTitle: currentMat.materialName,\r\n\t\t\t\tcardID: val\r\n\t\t\t})\r\n\t\t});\r\n\t\tsetSelected(() => temp);\r\n\t\tconsole.log(adding)\r\n\t\tif (selected && !adding) {\r\n\t\t\tif (selected?.length === 0) Swal.clickCancel();\r\n\t\t\tsaveShcedule();\r\n\t\t}\r\n\t}\r\n\r\n\tconst removeCardFromSchedule = (matID: string) => {\r\n\t\tsetAdding(false);\r\n\t\tconst newData = selected?.filter((tempCard) => `${tempCard?.cardID}` !== `${matID}`);\r\n\t\tconst newSchedule = newData!.map((temp) => temp!.cardID);\r\n\t\tconsole.log(newData)\r\n\t\tsetSelected(() => newData);\r\n\t\tsetUserSchedule(() => newSchedule)\r\n\t}\r\n\r\n\tconst onCardClickHandler = (matID: string) => {\r\n\t\tsetAdding(true);\r\n\t\tconsole.log(\"am adding\");\r\n\r\n\t\tsetUserSchedule((mySchedule) => {\r\n\t\t\tif (!mySchedule) return [...[matID]]\r\n\t\t\treturn [...[matID, ...mySchedule]];\r\n\t\t})\r\n\t\tconst temp = materialsTable[matID];\r\n\t\tconst cardToAdd = {\r\n\t\t\tcardPhoto: temp.materialPhoto,\r\n\t\t\tcardRate: temp.totalRate,\r\n\t\t\tcardTitle: temp.materialName,\r\n\t\t\tcardID: matID,\r\n\t\t}\r\n\t\tsetSelected((selectedSoFar) => {\r\n\r\n\t\t\tif (selectedSoFar) return [...[cardToAdd, ...selectedSoFar]];\r\n\t\t\treturn [...[cardToAdd]];\r\n\t\t})\r\n\t\tconst newData = data?.filter((tempCard) => tempCard?.cardID !== matID);\r\n\t\tsetData(newData)\r\n\t}\r\n\r\n\t// TODO check if the array is empty then give a diffrent UI\r\n\treturn (\r\n\t\t<div className=\"cards-viewer\">\r\n\t\t\t<div className=\"space\" />\r\n\t\t\t{/* // For search logic */}\r\n\t\t\t{searchResult?.length !== 0 ?\r\n\t\t\t\tdata?.map((card, index) => {\r\n\t\t\t\t\t// For search logic\r\n\t\t\t\t\tif (searchResult == undefined || searchResult?.includes(card?.cardID)) {\r\n\t\t\t\t\t\treturn <MaterialCard key={index} {...card!} submitHandler={onCardClickHandler} option=\"+\" />\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t: <p> no material Found:(</p>}\r\n\t\t\t<div className=\"down-space\" />\r\n\t\t\t{match ? <div /> : <SaveFAB />}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\material-requests\\mateirla.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\action-cods.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx",["400"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport lottie from \"lottie-web\";\r\nimport Swal from \"sweetalert2\";\r\nimport uniManagerPic from \"../../../../assets/home/uni-manager/uni-manager.json\";\r\nimport DeleteUni from \"./delete-uni\";\r\ninterface SelectProtected {\r\n  readonly wrapperElement: HTMLDivElement;\r\n}\r\n\r\ntype uniNames = {\r\n  unisDataList: any;\r\n  setUnisDataList: any;\r\n  setLocations: any;\r\n  setMajors: any;\r\n  uniName: string;\r\n  setUniName: any;\r\n  uniID: string;\r\n  setUniID: any;\r\n  unisNames: string[];\r\n  setUnisNames: any;\r\n};\r\n\r\nexport default function UnisNames({\r\n  unisDataList,\r\n  setUnisDataList,\r\n  setLocations,\r\n  setMajors,\r\n  uniName,\r\n  setUniName,\r\n  uniID,\r\n  setUniID,\r\n  unisNames,\r\n  setUnisNames,\r\n}: uniNames) {\r\n  const [display, setDisplay] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // let unisNamess: string[] = unisDataList.map(({ doc }: any) => doc.name);\r\n  // const [unisNames, setUnisNames] = useState(unisNamess || []);\r\n\r\n  let index = 0;\r\n  const animated: any = useRef(null);\r\n  const [flag, setFlag] = useState(true); // to clear data (locations and majors) depending on the name\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const setUniDex = (uni: string) => { // set the uni index to fill data locations and majors if founds\r\n    if (unisNames.includes(uni)) {\r\n      // setSearch(uni);\r\n      // setDisplay(false);\r\n      const index = unisNames.indexOf(uni);\r\n      const item = unisDataList[index];\r\n      const { id } = item;\r\n      const { doc } = item;\r\n      const { name } = doc;\r\n      const { locations } = doc;\r\n      const { fields } = doc;\r\n      setLocations(locations);\r\n      setMajors(fields);\r\n      setUniName(name);\r\n      setUniID(id);\r\n      setFlag(true);\r\n    } else {\r\n      setUniName(uni);\r\n      setUniID(null);\r\n      if (flag === true) {\r\n        const empty: any = [];\r\n        setLocations(empty);\r\n        setMajors(empty);\r\n        setFlag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeUniName = async (oldName: string) => {\r\n    let newName = oldName;\r\n    Swal.fire({\r\n      title: \"change university name\",\r\n      input: \"text\",\r\n      inputValue: oldName,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: true,\r\n      allowEnterKey: true,\r\n      confirmButtonText: \"edit\",\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (result) => {\r\n        if (result) {\r\n          if (unisNames.includes(result)) {\r\n            Swal.showValidationMessage(\"this name already exists\");\r\n          } else return;\r\n        } else {\r\n          Swal.showValidationMessage(\"please enter a name\");\r\n        }\r\n      },\r\n    }).then((result: any) => {\r\n      newName = result.value;\r\n      if (result.isConfirmed) {\r\n        if (newName === \"\") {\r\n        }\r\n        if (newName !== null && newName !== \"\") {\r\n          const temp = [];\r\n          for (let i = 0; i < unisNames.length; i++) {\r\n            if (unisNames[i] === oldName) temp[i] = newName;\r\n            else temp[i] = unisNames[i];\r\n          }\r\n          setUnisNames(temp);\r\n          setSearch(newName);\r\n          setUniName(newName);\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: animated.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: uniManagerPic,\r\n    });\r\n\r\n    if (unisNames[0].length > 0) {\r\n      const temp = unisNames[0];\r\n      setUniDex(temp);\r\n      setSearch(temp);\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutSide);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutSide);\r\n    };\r\n  }, []);\r\n\r\n  const selectProtected: SelectProtected = {\r\n    wrapperElement: document.createElement(\"div\"),\r\n  };\r\n  const wrapperRef = useRef(selectProtected.wrapperElement);\r\n\r\n  const handleClickOutSide = (e: any) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(e.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uni-names-div \">\r\n      <label htmlFor=\"uni-name-input\" className=\"uni-name-label label\">\r\n        University name\r\n      </label>\r\n      <input\r\n        id=\"auto\"\r\n        className=\"auto-input input\"\r\n        onClick={() => setDisplay(true)}\r\n        value={search}\r\n        autoComplete=\"off\"\r\n        onChange={(event) => setSearch(event.target.value)}\r\n        onBlur={(event) => setUniDex(search)}\r\n      ></input>\r\n      {display && (\r\n        <div ref={wrapperRef} className=\"autoContainer\">\r\n          {unisNames\r\n            .filter((uniName: string) => uniName.indexOf(search) > -1)\r\n            .map((uniName: string) => {\r\n              return (\r\n                <div\r\n                  onClick={() => {\r\n                    setSearch(() => uniName);\r\n                    setUniDex(uniName);\r\n                    setDisplay(false);\r\n                  }}\r\n                  className=\"option\"\r\n                  key={index++}\r\n                >\r\n                  <span className=\"uni-name-option\">{uniName}</span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n      <div className=\"change-uni-name-div\">\r\n        <button\r\n          className=\"change-uni-name-btn\"\r\n          onClick={() => changeUniName(search)}\r\n        >\r\n          change name\r\n        </button>\r\n      </div>\r\n      <DeleteUni\r\n        {...{\r\n          unisDataList,\r\n          setUnisDataList,\r\n          unisNames,\r\n          setUnisNames,\r\n          uniID,\r\n          uniName,\r\n          setUniDex,\r\n          setSearch,\r\n        }}\r\n      />\r\n      <div className=\"animated\" ref={animated}></div>\r\n    </div>\r\n  );\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx",[],{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","severity":1,"message":"406","line":50,"column":5,"nodeType":"407","endLine":50,"endColumn":7,"suggestions":"408"},{"ruleId":"409","severity":1,"message":"410","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":16},{"ruleId":"413","severity":1,"message":"414","line":27,"column":20,"nodeType":"415","messageId":"416","endLine":27,"endColumn":22},{"ruleId":"405","severity":1,"message":"417","line":42,"column":4,"nodeType":"407","endLine":42,"endColumn":16,"suggestions":"418"},{"ruleId":"405","severity":1,"message":"419","line":52,"column":5,"nodeType":"407","endLine":52,"endColumn":32,"suggestions":"420"},{"ruleId":"405","severity":1,"message":"421","line":56,"column":5,"nodeType":"407","endLine":56,"endColumn":35,"suggestions":"422"},{"ruleId":"413","severity":1,"message":"414","line":113,"column":17,"nodeType":"415","messageId":"416","endLine":113,"endColumn":19},{"ruleId":"423","severity":1,"message":"424","line":114,"column":141,"nodeType":"425","endLine":114,"endColumn":164},{"ruleId":"409","severity":1,"message":"426","line":3,"column":19,"nodeType":"411","messageId":"412","endLine":3,"endColumn":28},{"ruleId":"409","severity":1,"message":"427","line":1,"column":34,"nodeType":"411","messageId":"412","endLine":1,"endColumn":44},{"ruleId":"409","severity":1,"message":"428","line":30,"column":10,"nodeType":"411","messageId":"412","endLine":30,"endColumn":26},{"ruleId":"429","severity":1,"message":"430","line":50,"column":75,"nodeType":"431","messageId":"432","endLine":50,"endColumn":86,"fix":"433"},{"ruleId":"405","severity":1,"message":"434","line":58,"column":8,"nodeType":"407","endLine":58,"endColumn":10,"suggestions":"435"},{"ruleId":"436","severity":1,"message":"437","line":151,"column":74,"nodeType":"438","messageId":"439","endLine":151,"endColumn":76},{"ruleId":"440","severity":1,"message":"441","line":160,"column":61,"nodeType":"425","endLine":160,"endColumn":125},{"ruleId":"442","severity":1,"message":"443","line":171,"column":57,"nodeType":"444","messageId":"445","endLine":171,"endColumn":63},{"ruleId":"440","severity":1,"message":"441","line":180,"column":61,"nodeType":"425","endLine":180,"endColumn":105},{"ruleId":"442","severity":1,"message":"443","line":189,"column":57,"nodeType":"444","messageId":"445","endLine":189,"endColumn":63},{"ruleId":"442","severity":1,"message":"443","line":205,"column":57,"nodeType":"444","messageId":"445","endLine":205,"endColumn":63},{"ruleId":"440","severity":1,"message":"441","line":214,"column":61,"nodeType":"425","endLine":214,"endColumn":105},{"ruleId":"442","severity":1,"message":"443","line":223,"column":57,"nodeType":"444","messageId":"445","endLine":223,"endColumn":63},{"ruleId":"442","severity":1,"message":"443","line":239,"column":57,"nodeType":"444","messageId":"445","endLine":239,"endColumn":63},{"ruleId":"409","severity":1,"message":"446","line":24,"column":11,"nodeType":"411","messageId":"412","endLine":24,"endColumn":15},{"ruleId":"409","severity":1,"message":"447","line":24,"column":17,"nodeType":"411","messageId":"412","endLine":24,"endColumn":21},{"ruleId":"409","severity":1,"message":"448","line":24,"column":23,"nodeType":"411","messageId":"412","endLine":24,"endColumn":27},{"ruleId":"409","severity":1,"message":"449","line":24,"column":35,"nodeType":"411","messageId":"412","endLine":24,"endColumn":40},{"ruleId":"409","severity":1,"message":"450","line":24,"column":42,"nodeType":"411","messageId":"412","endLine":24,"endColumn":53},{"ruleId":"409","severity":1,"message":"451","line":25,"column":11,"nodeType":"411","messageId":"412","endLine":25,"endColumn":18},{"ruleId":"442","severity":1,"message":"443","line":33,"column":13,"nodeType":"444","messageId":"445","endLine":33,"endColumn":19},{"ruleId":"442","severity":1,"message":"443","line":36,"column":13,"nodeType":"444","messageId":"445","endLine":36,"endColumn":19},{"ruleId":"442","severity":1,"message":"443","line":39,"column":13,"nodeType":"444","messageId":"445","endLine":39,"endColumn":19},{"ruleId":"442","severity":1,"message":"443","line":42,"column":13,"nodeType":"444","messageId":"445","endLine":42,"endColumn":19},{"ruleId":"413","severity":1,"message":"414","line":65,"column":13,"nodeType":"415","messageId":"416","endLine":65,"endColumn":15},{"ruleId":"413","severity":1,"message":"414","line":66,"column":21,"nodeType":"415","messageId":"416","endLine":66,"endColumn":23},{"ruleId":"409","severity":1,"message":"428","line":35,"column":7,"nodeType":"411","messageId":"412","endLine":35,"endColumn":23},{"ruleId":"413","severity":1,"message":"452","line":62,"column":24,"nodeType":"415","messageId":"416","endLine":62,"endColumn":26},{"ruleId":"413","severity":1,"message":"452","line":62,"column":42,"nodeType":"415","messageId":"416","endLine":62,"endColumn":44},{"ruleId":"413","severity":1,"message":"452","line":67,"column":19,"nodeType":"415","messageId":"416","endLine":67,"endColumn":21},{"ruleId":"413","severity":1,"message":"452","line":67,"column":31,"nodeType":"415","messageId":"416","endLine":67,"endColumn":33},{"ruleId":"413","severity":1,"message":"414","line":67,"column":54,"nodeType":"415","messageId":"416","endLine":67,"endColumn":56},{"ruleId":"405","severity":1,"message":"453","line":97,"column":5,"nodeType":"407","endLine":97,"endColumn":7,"suggestions":"454"},{"ruleId":"413","severity":1,"message":"414","line":106,"column":24,"nodeType":"415","messageId":"416","endLine":106,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":111,"column":50,"nodeType":"415","messageId":"416","endLine":111,"endColumn":52},{"ruleId":"405","severity":1,"message":"455","line":121,"column":5,"nodeType":"407","endLine":121,"endColumn":16,"suggestions":"456"},{"ruleId":"405","severity":1,"message":"457","line":132,"column":5,"nodeType":"407","endLine":132,"endColumn":29,"suggestions":"458"},{"ruleId":"413","severity":1,"message":"414","line":135,"column":24,"nodeType":"415","messageId":"416","endLine":135,"endColumn":26},{"ruleId":"413","severity":1,"message":"414","line":136,"column":21,"nodeType":"415","messageId":"416","endLine":136,"endColumn":23},{"ruleId":"405","severity":1,"message":"459","line":143,"column":5,"nodeType":"407","endLine":143,"endColumn":19,"suggestions":"460"},{"ruleId":"413","severity":1,"message":"414","line":146,"column":24,"nodeType":"415","messageId":"416","endLine":146,"endColumn":26},{"ruleId":"405","severity":1,"message":"461","line":151,"column":5,"nodeType":"407","endLine":151,"endColumn":22,"suggestions":"462"},{"ruleId":"405","severity":1,"message":"463","line":70,"column":5,"nodeType":"407","endLine":70,"endColumn":19,"suggestions":"464"},{"ruleId":"413","severity":1,"message":"414","line":76,"column":18,"nodeType":"415","messageId":"416","endLine":76,"endColumn":20},{"ruleId":"405","severity":1,"message":"465","line":78,"column":5,"nodeType":"407","endLine":78,"endColumn":11,"suggestions":"466"},{"ruleId":"405","severity":1,"message":"467","line":87,"column":5,"nodeType":"407","endLine":87,"endColumn":7,"suggestions":"468"},{"ruleId":"436","severity":1,"message":"437","line":199,"column":29,"nodeType":"438","messageId":"439","endLine":199,"endColumn":31},{"ruleId":"413","severity":1,"message":"452","line":201,"column":23,"nodeType":"415","messageId":"416","endLine":201,"endColumn":25},{"ruleId":"405","severity":1,"message":"469","line":133,"column":6,"nodeType":"407","endLine":133,"endColumn":8,"suggestions":"470"},"no-native-reassign",["471"],"no-negated-in-lhs",["472"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearSearchBarBtnRef' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["473"],"@typescript-eslint/no-unused-vars","'homeIcon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["474"],"React Hook useEffect has missing dependencies: 'buildTrieTree' and 'setSearchResult'. Either include them or remove the dependency array. Outer scope values like 'undefined' aren't valid dependencies because mutating them doesn't re-render the component.",["475"],"React Hook useEffect has missing dependencies: 'clearSearchBarBtnRef' and 'setClearSearchBarBtnRef'. Either include them or remove the dependency array. Mutable values like 'clearSearchBarBtnRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["476"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'matchType' is defined but never used.","'useHistory' is defined but never used.","'loadingAnimation' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"477","text":"478"},"React Hook useEffect has missing dependencies: 'allTypes', 'matID', and 'topicID'. Either include them or remove the dependency array.",["479"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'ign1' is assigned a value but never used.","'ign2' is assigned a value but never used.","'ign3' is assigned a value but never used.","'photo' is assigned a value but never used.","'description' is assigned a value but never used.","'resType' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allTopics' and 'materialID'. Either include them or remove the dependency array.",["480"],"React Hook useEffect has missing dependencies: 'materialID' and 'setDtaToSearchIn'. Either include them or remove the dependency array.",["481"],"React Hook useEffect has an unnecessary dependency: 'loadMoreDivRef.current'. Either exclude it or remove the dependency array. Mutable values like 'loadMoreDivRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["482"],"React Hook useEffect has a missing dependency: 'allTopics'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMaxNumToDisplay' needs the current value of 'allTopics'.",["483"],"React Hook useEffect has missing dependencies: 'addNewSetOfTopicsToDisplay' and 'allTopics'. Either include them or remove the dependency array.",["484"],"React Hook useEffect has a missing dependency: 'defualtValues'. Either include it or remove the dependency array.",["485"],"React Hook useEffect has a missing dependency: 'setDtaToSearchIn'. Either include it or remove the dependency array.",["486"],"React Hook useEffect has missing dependencies: 'setDtaToSearchIn' and 'urlHandler'. Either include them or remove the dependency array.",["487"],"React Hook useEffect has missing dependencies: 'setUniDex' and 'unisNames'. Either include them or remove the dependency array.",["488"],"no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},[2189,2200],"[]",{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},"Update the dependencies array to be: [clearSearchBarBtnRef, history]",{"range":"517","text":"518"},"Update the dependencies array to be: [search, searchTerm]",{"range":"519","text":"520"},"Update the dependencies array to be: [dataToSearchIn, buildTrieTree, setSearchResult]",{"range":"521","text":"522"},"Update the dependencies array to be: [clearSearchBarBtnRef, setClearSearchBarBtnRef]",{"range":"523","text":"524"},"Update the dependencies array to be: [allTypes, matID, topicID]",{"range":"525","text":"526"},"Update the dependencies array to be: [allTopics, materialID]",{"range":"527","text":"528"},"Update the dependencies array to be: [allTopics, materialID, setDtaToSearchIn]",{"range":"529","text":"530"},"Update the dependencies array to be: []",{"range":"531","text":"478"},"Update the dependencies array to be: [allTopics, searchResult]",{"range":"532","text":"533"},"Update the dependencies array to be: [addNewSetOfTopicsToDisplay, allTopics, maxNumToDisplay]",{"range":"534","text":"535"},"Update the dependencies array to be: [defualtValues, userSchedule]",{"range":"536","text":"537"},"Update the dependencies array to be: [data, setDtaToSearchIn]",{"range":"538","text":"539"},"Update the dependencies array to be: [setDtaToSearchIn, urlHandler]",{"range":"540","text":"541"},"Update the dependencies array to be: [setUniDex, unisNames]",{"range":"542","text":"543"},[1859,1861],"[clearSearchBarBtnRef, history]",[1371,1383],"[search, searchTerm]",[1586,1613],"[dataToSearchIn, buildTrieTree, setSearchResult]",[1692,1722],"[clearSearchBarBtnRef, setClearSearchBarBtnRef]",[2460,2462],"[allTypes, matID, topicID]",[4586,4588],"[allTopics, materialID]",[5678,5689],"[allTopics, materialID, setDtaToSearchIn]",[5961,5985],[6252,6266],"[allTopics, searchResult]",[6414,6431],"[addNewSetOfTopicsToDisplay, allTopics, maxNumToDisplay]",[2686,2700],"[defualtValues, userSchedule]",[2905,2911],"[data, setDtaToSearchIn]",[3047,3049],"[setDtaToSearchIn, urlHandler]",[3725,3727],"[setUniDex, unisNames]"]