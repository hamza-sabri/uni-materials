[{"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\index.tsx":"1","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\App.tsx":"2","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\history\\credationls-history.ts":"3","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signin.tsx":"4","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signup.tsx":"5","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\home.tsx":"6","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\pages-route.ts":"7","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\apis-caller.ts":"8","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\uni-requests\\university.ts":"9","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\signup-context\\uni-data-context.ts":"10","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\login-page.tsx":"11","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-container.tsx":"12","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\home-page.tsx":"13","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\status-codes.ts":"14","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\axios-creation.ts":"15","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\urls.ts":"16","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\user-requestes\\user.ts":"17","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\form-arrays.ts":"18","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts":"19","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\forgotPassword.tsx":"20","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\signUpButton.tsx":"21","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-forms.tsx":"22","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-image.tsx":"23","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar.tsx":"24","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\utilities\\alearts.tsx":"25","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar.tsx":"26","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx":"27","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\local-storage-keys.ts":"28","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\messages.ts":"29","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\side-bar-section-cards.ts":"30","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-buttons.tsx":"31","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-inputs.tsx":"32","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-entry-section.tsx":"33","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\logo.tsx":"34","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx":"35","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\search-area.tsx":"36","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx":"37","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx":"38","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\data-entry-page.tsx":"39","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\book-entry-page.tsx":"40","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\manual-entry.tsx":"41","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\view-page.tsx":"42","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\profile-page.tsx":"43","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\material-info-page.tsx":"44","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\schedule-page.tsx":"45","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx":"46","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\uni-manager-page.tsx":"47","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\guidance.tsx":"48","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\not-found-page.tsx":"49","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\update-res.tsx":"50","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\view-all-res.tsx":"51","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\validation\\signup-validation.ts":"52","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-dropdown.tsx":"53","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar-card.tsx":"54","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx":"55","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx":"56","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\res-types.ts":"57","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx":"58","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx":"59","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx":"60","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx":"61","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx":"62","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\404\\404-componant.tsx":"63","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx":"64","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx":"65","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\res-requests\\res.ts":"66","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx":"67","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\res-card.tsx":"68","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\action-cods.ts":"69","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\material-requests\\mateirla.ts":"70","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx":"71","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx":"72","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx":"73","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx":"74","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx":"75","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx":"76","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx":"77","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx":"78","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx":"79","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx":"80","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx":"81","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx":"82","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx":"83"},{"size":246,"mtime":1619576879054,"results":"84","hashOfConfig":"85"},{"size":681,"mtime":1615585899746,"results":"86","hashOfConfig":"85"},{"size":86,"mtime":1613137362652,"results":"87","hashOfConfig":"85"},{"size":208,"mtime":1613751668602,"results":"88","hashOfConfig":"85"},{"size":870,"mtime":1615583337322,"results":"89","hashOfConfig":"85"},{"size":115,"mtime":1613751668600,"results":"90","hashOfConfig":"85"},{"size":1266,"mtime":1620581988200,"results":"91","hashOfConfig":"85"},{"size":1336,"mtime":1619648462556,"results":"92","hashOfConfig":"85"},{"size":2267,"mtime":1619606035178,"results":"93","hashOfConfig":"85"},{"size":97,"mtime":1613137362633,"results":"94","hashOfConfig":"85"},{"size":2189,"mtime":1620176623111,"results":"95","hashOfConfig":"85"},{"size":890,"mtime":1620051398288,"results":"96","hashOfConfig":"85"},{"size":1921,"mtime":1620391534136,"results":"97","hashOfConfig":"85"},{"size":724,"mtime":1619947953663,"results":"98","hashOfConfig":"85"},{"size":464,"mtime":1619536487276,"results":"99","hashOfConfig":"85"},{"size":2151,"mtime":1620581988202,"results":"100","hashOfConfig":"85"},{"size":5045,"mtime":1620821978077,"results":"101","hashOfConfig":"85"},{"size":1016,"mtime":1613137362628,"results":"102","hashOfConfig":"85"},{"size":109,"mtime":1616452072580,"results":"103","hashOfConfig":"85"},{"size":531,"mtime":1619648462548,"results":"104","hashOfConfig":"85"},{"size":326,"mtime":1613751668593,"results":"105","hashOfConfig":"85"},{"size":560,"mtime":1613137362625,"results":"106","hashOfConfig":"85"},{"size":64538,"mtime":1613751668596,"results":"107","hashOfConfig":"85"},{"size":284,"mtime":1619020577987,"results":"108","hashOfConfig":"85"},{"size":1340,"mtime":1619305831281,"results":"109","hashOfConfig":"85"},{"size":335,"mtime":1613751668559,"results":"110","hashOfConfig":"85"},{"size":2846,"mtime":1620581988195,"results":"111","hashOfConfig":"85"},{"size":159,"mtime":1619648462552,"results":"112","hashOfConfig":"85"},{"size":431,"mtime":1613140606899,"results":"113","hashOfConfig":"85"},{"size":2375,"mtime":1620769999285,"results":"114","hashOfConfig":"85"},{"size":2463,"mtime":1620176654976,"results":"115","hashOfConfig":"85"},{"size":1281,"mtime":1615583251390,"results":"116","hashOfConfig":"85"},{"size":626,"mtime":1619947953644,"results":"117","hashOfConfig":"85"},{"size":8781,"mtime":1616452072548,"results":"118","hashOfConfig":"85"},{"size":1000,"mtime":1619947887259,"results":"119","hashOfConfig":"85"},{"size":2982,"mtime":1613751668561,"results":"120","hashOfConfig":"85"},{"size":561,"mtime":1616452072558,"results":"121","hashOfConfig":"85"},{"size":698,"mtime":1616452072560,"results":"122","hashOfConfig":"85"},{"size":472,"mtime":1620660203368,"results":"123","hashOfConfig":"85"},{"size":319,"mtime":1616452072600,"results":"124","hashOfConfig":"85"},{"size":1709,"mtime":1619536487274,"results":"125","hashOfConfig":"85"},{"size":388,"mtime":1616452072605,"results":"126","hashOfConfig":"85"},{"size":223,"mtime":1619734452750,"results":"127","hashOfConfig":"85"},{"size":388,"mtime":1617740974311,"results":"128","hashOfConfig":"85"},{"size":268,"mtime":1619947953676,"results":"129","hashOfConfig":"85"},{"size":961,"mtime":1619951807610,"results":"130","hashOfConfig":"85"},{"size":256,"mtime":1615585899883,"results":"131","hashOfConfig":"85"},{"size":302,"mtime":1619947953667,"results":"132","hashOfConfig":"85"},{"size":445,"mtime":1620051398292,"results":"133","hashOfConfig":"85"},{"size":17302,"mtime":1620823775921,"results":"134","hashOfConfig":"85"},{"size":14347,"mtime":1620823775925,"results":"135","hashOfConfig":"85"},{"size":1434,"mtime":1615583251441,"results":"136","hashOfConfig":"85"},{"size":1312,"mtime":1615583251395,"results":"137","hashOfConfig":"85"},{"size":609,"mtime":1619885977436,"results":"138","hashOfConfig":"85"},{"size":3612,"mtime":1619390181046,"results":"139","hashOfConfig":"85"},{"size":4451,"mtime":1619305831164,"results":"140","hashOfConfig":"85"},{"size":282,"mtime":1620581988201,"results":"141","hashOfConfig":"85"},{"size":5878,"mtime":1620823664927,"results":"142","hashOfConfig":"85"},{"size":696,"mtime":1617724230985,"results":"143","hashOfConfig":"85"},{"size":7601,"mtime":1620581988191,"results":"144","hashOfConfig":"85"},{"size":3259,"mtime":1620822381559,"results":"145","hashOfConfig":"85"},{"size":220,"mtime":1619947953648,"results":"146","hashOfConfig":"85"},{"size":21249,"mtime":1620051426168,"results":"147","hashOfConfig":"85"},{"size":2617,"mtime":1619947953654,"results":"148","hashOfConfig":"85"},{"size":4421,"mtime":1619305831169,"results":"149","hashOfConfig":"85"},{"size":1876,"mtime":1620582867189,"results":"150","hashOfConfig":"85"},{"size":8991,"mtime":1620581988196,"results":"151","hashOfConfig":"85"},{"size":4482,"mtime":1620823775927,"results":"152","hashOfConfig":"85"},{"size":268,"mtime":1619305831198,"results":"153","hashOfConfig":"85"},{"size":3101,"mtime":1619305831213,"results":"154","hashOfConfig":"85"},{"size":535,"mtime":1615583251385,"results":"155","hashOfConfig":"85"},{"size":2149,"mtime":1619536487246,"results":"156","hashOfConfig":"85"},{"size":2009,"mtime":1619305831193,"results":"157","hashOfConfig":"85"},{"size":5484,"mtime":1620390985032,"results":"158","hashOfConfig":"85"},{"size":4499,"mtime":1620581988198,"results":"159","hashOfConfig":"85"},{"size":2346,"mtime":1619305831189,"results":"160","hashOfConfig":"85"},{"size":2549,"mtime":1619951807618,"results":"161","hashOfConfig":"85"},{"size":5753,"mtime":1619536487252,"results":"162","hashOfConfig":"85"},{"size":11111,"mtime":1620161842018,"results":"163","hashOfConfig":"85"},{"size":2540,"mtime":1619951807616,"results":"164","hashOfConfig":"85"},{"size":3050,"mtime":1619734452715,"results":"165","hashOfConfig":"85"},{"size":601,"mtime":1615585899809,"results":"166","hashOfConfig":"85"},{"size":2514,"mtime":1615585899803,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"uken32",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"170"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"170"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"170"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\index.tsx",[],["341","342"],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\App.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\history\\credationls-history.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signin.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signup.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\home.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\pages-route.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\apis-caller.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\uni-requests\\university.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\signup-context\\uni-data-context.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\login-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-container.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\home-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\status-codes.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\axios-creation.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\urls.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\user-requestes\\user.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\form-arrays.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\forgotPassword.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\signUpButton.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-forms.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-image.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\utilities\\alearts.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\local-storage-keys.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\messages.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\side-bar-section-cards.ts",["343"],"import { sideBarSectionInterface } from '../interfaces/side-bar/side-bar-section-interface';\r\n\r\n// icons\r\nimport homeIcon from '../assets/home/side-bar/home.svg';\r\nimport createIcon from '../assets/home/side-bar/create.svg';\r\nimport editIcon from '../assets/home/side-bar/edit.svg';\r\nimport createTopicIcon from '../assets/home/side-bar/create-topic.svg';\r\nimport infoIcon from '../assets/home/side-bar/info.svg';\r\nimport managerIcon from '../assets/home/side-bar/teamwork.svg';\r\nimport profileIcon from '../assets/home/side-bar/profile.svg';\r\nimport examsIcon from '../assets/home/side-bar/online-test.svg';\r\nimport rulesIcon from '../assets/home/side-bar/regulation.svg';\r\nimport settingsIcon from '../assets/home/side-bar/settings.svg';\r\nimport tableIcon from '../assets/home/side-bar/table.svg';\r\nimport feedbackIcon from '../assets/home/side-bar/feedback.svg';\r\nimport logOutIcon from '../assets/home/side-bar/logout.svg';\r\nimport guideIcon from '../assets/home/side-bar/guide.svg';\r\n\r\n// pages\r\nimport { cretateTopics, dataEntryRoute, scheduleRoute, updatematerialsRoute, uniMangerRoute, materialInfoRoute, singinPageRoute, notFoundRoute, profileRoute, guidanceRoute } from './pages-route';\r\n\r\nconst dataEntrySectionCards: sideBarSectionInterface = {\r\n\tsectionTitle: 'Data Entry',\r\n\tsectionCards: [\r\n\t\t{ cardName: 'Profile', routeTo: profileRoute, cardIcon: profileIcon },\r\n\t\t{ cardName: 'Create Material', routeTo: dataEntryRoute, cardIcon: createIcon },\r\n\t\t{ cardName: 'Update Materials', routeTo: updatematerialsRoute, cardIcon: editIcon },\r\n\t\t{ cardName: 'Create Topic', routeTo: cretateTopics, cardIcon: createTopicIcon },\r\n\t\t{ cardName: 'Materials info', routeTo: materialInfoRoute, cardIcon: infoIcon },\r\n\t\t{ cardName: 'Schedule', routeTo: scheduleRoute, cardIcon: tableIcon },\r\n\t\t{ cardName: 'Settings', routeTo: notFoundRoute, cardIcon: settingsIcon },\r\n\t\t{ cardName: 'Uni managers', routeTo: uniMangerRoute, cardIcon: managerIcon },\r\n\t\t{ cardName: 'Exams', routeTo: notFoundRoute, cardIcon: examsIcon },\r\n\t\t{ cardName: 'Facts & Rules', routeTo: notFoundRoute, cardIcon: rulesIcon },\r\n\t\t{ cardName: 'Feedback', routeTo: notFoundRoute, cardIcon: feedbackIcon },\r\n\t\t{ cardName: 'Guidance', routeTo: guidanceRoute, cardIcon: guideIcon }, \r\n\t\t{ cardName: 'Log out', routeTo: singinPageRoute, cardIcon: logOutIcon },\r\n\r\n\t]\r\n};\r\n\r\nexport { dataEntrySectionCards };\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-buttons.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-inputs.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-entry-section.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\logo.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\search-area.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\data-entry-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\book-entry-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\manual-entry.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\view-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\profile-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\material-info-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\schedule-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx",["344"],"import { useState } from 'react';\r\nimport CardCreateor from '../../../../components/home/subpages/data-entry/add-manually';\r\nimport { match as matchType, useLocation } from 'react-router-dom';\r\nimport { addResMethods } from '../../../../constants/pages-route';\r\n\r\nexport default function UpdateTopic() {\r\n    let loc = useLocation();\r\n\r\n    let { materialID, topicID, name, photo, description }: any = loc.state;\r\n    const basicTopicRoute: string = `${addResMethods}/${materialID}/${topicID}`;\r\n    const [resRoute, setResRoute] = useState<string>(basicTopicRoute);\r\n\r\n    let inputs = [\"Topic Name\", \"Topic Image URL\"];\r\n    let descriptionInput = description;\r\n    let values = [name, photo];\r\n    let id = materialID;\r\n    let rate = 5;\r\n\r\n\r\n    return (\r\n        <div className=\"dynamic-subpage\">\r\n            <CardCreateor {...{ inputs, descriptionInput, values, localMaterialID: id, topicID, rate, resRoute, setResRoute }} />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\uni-manager-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\guidance.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\not-found-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\update-res.tsx",["345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363"],"import React, { useEffect, useRef, useState } from 'react';\r\n// import '../../../../../styles/data-entry-styles/res/res-adders.css';\r\nimport pdfAnimation from '../../../../assets/data-entry-assets/pdf-animation.json';\r\nimport qAndA from '../../../../assets/data-entry-assets/Q-and-A.json';\r\nimport rulesAnimation from '../../../../assets/data-entry-assets/rules.json';\r\nimport usefulResAnimation from '../../../../assets/data-entry-assets/useful-resources.json';\r\nimport videoAnimatedIcon from '../../../../assets/data-entry-assets/video-animated-icon.json';\r\nimport defualtWebsiteImage from \"../../../../assets/data-entry-assets/website.webp\";\r\nimport DropZone from './drop-zone';\r\nimport lottie from 'lottie-web';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { updateRes } from '../../../../requestes/res-requests/res';\r\nimport { pdfsType, questionAndAnswerType, rulesType, usefulResType, videosType } from '../../../../constants/res-types';\r\nimport { showLoading } from '../../../../utilities/alearts';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport youtubeImage from \"../../../../assets/data-entry-assets/youtube.jpg\";\r\nimport axios from 'axios';\r\nimport { match as infoPageMatch, useLocation } from 'react-router';\r\n\r\n\r\nexport default function UpdateRes({ match }: { match: infoPageMatch<{resType: string; matID: string; topicID: string; resID: string }> }) {\r\n    let loc = useLocation();\r\n    let { ign1, ign2, ign3, name, photo, description, info }: any = loc.state;\r\n    let { resType, matID, topicID, resID } = match.params;\r\n\r\n    switch (info.resType) {\r\n        case \"PDFs\":\r\n            return <PDF matID={matID} topicID={topicID} resID={resID} fileName={info.fileName} bookRefrence={info.bookRefrence} />\r\n            // break;\r\n        // case \"Videos\":\r\n        //     return <Video />\r\n        //     break;\r\n        // case \"Q&A\":\r\n        //     return <QA />\r\n        //     break;\r\n        // case \"Resources\":\r\n        //     return <UsefulRes />\r\n        //     break;\r\n        // case \"Laws\":\r\n        //     return <Rules />\r\n        //     break;\r\n        default:\r\n            console.log(\"Something worng have happend\");\r\n            return <p>Error Talk with Hamza</p>\r\n    }\r\n}\r\n\r\nfunction PDF({matID, topicID, resID, fileName, bookRefrence}: any) {\r\n    // fileName\r\n    // bookRefrence\r\n    const results: string[] = ['', '', ''];\r\n    const bookLinkInput = useRef<HTMLInputElement>(null);\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const pdfNameInput = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: pdfAnimation\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n\r\n    const submitHandler = async () => {\r\n        const pdfName: string = pdfNameInput.current!.value;\r\n        const pdfLink: string = bookLinkInput.current!.value;\r\n        if (pdfName === '' || pdfLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: pdfsType,\r\n                fileName: pdfName,\r\n                bookRefrence: pdfLink\r\n            };\r\n            \r\n\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input type=\"text\" className=\"res-input\" placeholder=\"PDF Name\" ref={pdfNameInput} defaultValue={fileName} onChange={e => {results[0] = e.target.value}}/>\r\n            <input type=\"url\" className=\"res-input\" id=\"pdf-link\" placeholder=\"PDF link\" ref={bookLinkInput} defaultValue={bookRefrence} onChange={e => {results[1] = e.target.value}}/>\r\n            <DropZone {...{ bookLinkInput, results, pdfNameInput }} />\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// // TODO add loading after when the user adds the link\r\n// function Video({matID, topicID, resID, fileName, bookRefrence}: any) {\r\n//     const divRef = useRef<HTMLDivElement>(null);\r\n//     const videoRef = useRef<HTMLInputElement>(null);\r\n//     const [name, setName] = useState<string>('???????');\r\n//     const [imgURl, setImgURL] = useState<string>(youtubeImage);\r\n//     const submitHandler = async () => {\r\n//         const VideoLink: string = videoRef.current!.value;\r\n//         if (VideoLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n//         else {\r\n//             const requestParams = {\r\n//                 materialID: matID,\r\n//                 topicID: topicID\r\n//             };\r\n//             const requestBody = {\r\n//                 resType: videosType,\r\n//                 videoName: name, //TODO get the title of the video some how\r\n//                 link: VideoLink,\r\n//                 videoImage: imgURl\r\n//             };\r\n//             showLoading(0);\r\n//             const { status, data } = await APIsCaller({ api: createNewRes, requestParams, requestBody });\r\n//             console.log(status, data);\r\n//             if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n//             else Swal.fire('Ops!', data.message, 'error');\r\n//         }\r\n//     };\r\n\r\n//     const changeVideCard = async () => {\r\n//         const url: string = videoRef.current!.value || '';\r\n//         const { data } = await axios.get(`https://api.linkpreview.net/?key=d71742f9c4c457e68276f6288fdfc4d0&q=${url}`);\r\n//         const { image, title } = data;\r\n//         if (image) {\r\n//             setImgURL(image);\r\n//             setName(title);\r\n//         } else {\r\n//             setImgURL(youtubeImage);\r\n//             setName('???????');\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         lottie\r\n//             .loadAnimation({\r\n//                 container: divRef.current!,\r\n//                 autoplay: true,\r\n//                 renderer: 'svg',\r\n//                 loop: true,\r\n//                 animationData: videoAnimatedIcon\r\n//             })\r\n//             .setSpeed(0.8);\r\n//     }, []);\r\n//     return (\r\n//         <div className=\"adder\">\r\n//             <div className=\"res-animation-container\" ref={divRef} />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 className=\"res-input\"\r\n//                 placeholder=\"video link\"\r\n//                 ref={videoRef}\r\n//                 onChange={changeVideCard}\r\n//                 onBlur={changeVideCard}\r\n//             />\r\n//             <div className=\"video-previewer\">\r\n//                 <img src={imgURl} alt=\"youtube\" />\r\n//                 <div className=\"name-wrapper\">\r\n//                     <div className=\"name\">{name}</div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n//                 submit\r\n// \t\t\t</div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// function UsefulRes() {\r\n//     const divRef = useRef<HTMLDivElement>(null);\r\n//     const urlRef = useRef<HTMLInputElement>(null);\r\n//     const [name, setName] = useState<string>('???????');\r\n//     const [imgURl, setImgURL] = useState<string>(defualtWebsiteImage);\r\n\r\n//     const changeVideCard = async () => {\r\n//         const url: string = urlRef.current!.value || '';\r\n//         const { data } = await axios.get(`https://api.linkpreview.net/?key=d71742f9c4c457e68276f6288fdfc4d0&q=${url}`);\r\n//         const { image, title } = data;\r\n//         if (image) {\r\n//             setImgURL(image);\r\n//             setName(title);\r\n//         } else {\r\n//             setImgURL(defualtWebsiteImage);\r\n//             setName('???????');\r\n//         }\r\n//     };\r\n\r\n//     const submitHandler = async () => {\r\n//         const websiteLink: string = urlRef.current!.value;\r\n//         if (websiteLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n//         else {\r\n//             const requestParams = {\r\n//                 materialID: matID,\r\n//                 topicID: topicID\r\n//             };\r\n//             const requestBody = {\r\n//                 resType: usefulResType,\r\n//                 websiteName: name, //TODO get the title of the video some how\r\n//                 link: websiteLink,\r\n//                 websiteImage: imgURl\r\n//             };\r\n//             showLoading(0);\r\n//             const { status, data } = await APIsCaller({ api: createNewRes, requestParams, requestBody });\r\n//             console.log(status, data);\r\n//             if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n//             else Swal.fire('Ops!', data.message, 'error');\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         lottie\r\n//             .loadAnimation({\r\n//                 container: divRef.current!,\r\n//                 autoplay: true,\r\n//                 renderer: 'svg',\r\n//                 loop: true,\r\n//                 animationData: usefulResAnimation\r\n//             })\r\n//             .setSpeed(0.8);\r\n//     }, []);\r\n//     return (\r\n//         <div className=\"adder\">\r\n//             <div className=\"res-animation-container\" ref={divRef} />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 className=\"res-input\"\r\n//                 placeholder=\"Resource link\"\r\n//                 ref={urlRef}\r\n//                 onChange={changeVideCard}\r\n//                 onBlur={changeVideCard}\r\n//             />\r\n//             <div className=\"video-previewer\">\r\n//                 <img src={imgURl} alt=\"youtube\" />\r\n//                 <div className=\"name-wrapper\">\r\n//                     <div className=\"name\">{name}</div>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n//                 submit\r\n// \t\t\t</div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// function QA() {\r\n//     const divRef = useRef<HTMLInputElement>(null);\r\n//     const qNameRef = useRef<HTMLInputElement>(null);\r\n//     const questionRef = useRef<HTMLTextAreaElement>(null);\r\n//     const answerRef = useRef<HTMLTextAreaElement>(null);\r\n//     const submitHandler = async () => {\r\n//         const question: string = questionRef.current!.value;\r\n//         const answer: string = answerRef.current!.value;\r\n//         const QName: string = qNameRef.current!.value;\r\n//         if (question === '' || answer === '' || QName === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n//         else {\r\n//             const requestParams = {\r\n//                 materialID: matID,\r\n//                 topicID: topicID\r\n//             };\r\n//             const requestBody = {\r\n//                 resType: questionAndAnswerType,\r\n//                 question,\r\n//                 answer,\r\n//                 QName,\r\n//             };\r\n//             showLoading(0);\r\n//             const { status, data } = await APIsCaller({ api: createNewRes, requestParams, requestBody });\r\n//             console.log(status, data);\r\n//             if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n//             else Swal.fire('Ops!', data.message, 'error');\r\n//         }\r\n//     };\r\n//     useEffect(() => {\r\n//         lottie\r\n//             .loadAnimation({\r\n//                 container: divRef.current!,\r\n//                 autoplay: true,\r\n//                 renderer: 'svg',\r\n//                 loop: true,\r\n//                 animationData: qAndA\r\n//             })\r\n//             .setSpeed(0.8);\r\n//     }, []);\r\n//     return (\r\n//         <div className=\"adder\">\r\n//             <div className=\"res-animation-container\" ref={divRef} />\r\n//             <input className=\"q-name-input\" type=\"text\" ref={qNameRef} placeholder=\"Question Name\" />\r\n//             <textarea className=\"res-text-area\" placeholder=\"Question\" ref={questionRef} />\r\n//             <textarea className=\"res-text-area\" placeholder=\"Answer\" ref={answerRef} />\r\n//             <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n//                 submit\r\n// \t\t\t</div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// function Rules() {\r\n//     const divRef = useRef<HTMLDivElement>(null);\r\n//     const lawNameRef = useRef<HTMLInputElement>(null);\r\n//     const lawConentRef = useRef<HTMLTextAreaElement>(null);\r\n//     const lawExampleRef = useRef<HTMLTextAreaElement>(null);\r\n//     const submitHandler = async () => {\r\n//         const lawName: string = lawNameRef.current!.value;\r\n//         const lawConent: string = lawConentRef.current!.value;\r\n//         const lawExample: string = lawExampleRef.current!.value;\r\n//         if (lawName === '' || lawConent === '' || lawExample === '')\r\n//             Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n//         else {\r\n//             const requestParams = {\r\n//                 materialID: matID,\r\n//                 topicID: topicID\r\n//             };\r\n//             const requestBody = {\r\n//                 resType: rulesType,\r\n//                 lawName,\r\n//                 lawConent,\r\n//                 lawExample\r\n//             };\r\n//             showLoading(0);\r\n//             const { status, data } = await APIsCaller({ api: createNewRes, requestParams, requestBody });\r\n//             console.log(status, data);\r\n//             if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n//             else Swal.fire('Ops!', data.message, 'error');\r\n//         }\r\n//     };\r\n//     useEffect(() => {\r\n//         lottie\r\n//             .loadAnimation({\r\n//                 container: divRef.current!,\r\n//                 autoplay: true,\r\n//                 renderer: 'svg',\r\n//                 loop: true,\r\n//                 animationData: rulesAnimation\r\n//             })\r\n//             .setSpeed(0.8);\r\n//     }, []);\r\n//     return (\r\n//         <div className=\"adder\">\r\n//             <div className=\"res-animation-container\" ref={divRef} />\r\n//             <input type=\"text\" className=\"res-input\" placeholder=\"Law name\" ref={lawNameRef} />\r\n//             <textarea className=\"res-text-area\" placeholder=\"Law content\" ref={lawConentRef} />\r\n//             <textarea className=\"res-text-area\" placeholder=\"Example\" ref={lawExampleRef} />\r\n//             <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n//                 submit\r\n// \t\t\t</div>\r\n//         </div>\r\n//     );\r\n// }\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\view-all-res.tsx",["364","365","366","367","368","369","370","371","372","373","374","375","376"],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\validation\\signup-validation.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-dropdown.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\res-types.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx",["377"],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx",["378","379"],"import React, { useContext, useEffect, useRef } from 'react';\r\nimport '../../../../styles/data-entry-styles/manual/manual-entry.css';\r\nimport lottie from 'lottie-web';\r\nimport floattingLaptop from '../../../../assets/data-entry-assets/floatting-laptop.json';\r\nimport emptySVG from '../../../../assets/data-entry-assets/empty.svg';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { createNewMaerial, createTopic, updateMaterial, updateTopic } from '../../../../requestes/material-requests/mateirla';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport { DynamicContentContext } from '../../../../contexts/home-context/dynamic-content-state-context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype cardCreateorInterface = {\r\n\tinputs: string[];\r\n\tdescriptionInput?: string;\r\n\tvalues: string[];\r\n\tlocalMaterialID?: string;\r\n\trate?: number;\r\n\tresRoute: string;\r\n\ttopicID?: string;\r\n\tResID?: string;\r\n\tsetResRoute: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function CardCreateor({ inputs, descriptionInput, values, localMaterialID, topicID, ResID, rate, resRoute, setResRoute }: cardCreateorInterface) {\r\n\tconst inputLottie = useRef(null);\r\n\tconst materialName = useRef<HTMLPreElement>(null);\r\n\tconst previewer = useRef<HTMLImageElement>(null);\r\n\tconst emptyName: string = '???? ????';\r\n\tconst results: string[] = (values.length === inputs.length) ? values : new Array(inputs.length).fill('');\r\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\tconst addResButtonRef = useRef<HTMLDivElement>(null);\r\n\tconst { materialsTable, setMaterialsTable } = useContext(DynamicContentContext);\r\n\r\n\tuseEffect (() => {\r\n\t\tif(topicID) {\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlottie.loadAnimation({\r\n\t\t\tcontainer: inputLottie.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: floattingLaptop\r\n\t\t});\r\n\t}, [materialsTable, resRoute]);\r\n\r\n\tconst inputHandler = (e: any, index: number) => {\r\n\t\tconst value: string = e.target.value || '';\r\n\t\tif (index === 0) materialName.current!.innerHTML = value !== '' ? value : emptyName;\r\n\t\telse if (index === 1) {\r\n\t\t\tpreviewer.current!.src = (value !== '' ? value : emptySVG)\r\n\t\t}\r\n\t\tresults[index] = value;\r\n\t};\r\n\r\n\tconst submitHandler = () => {\r\n\t\tlet emptyIndex: number = -1;\r\n\t\tresults.forEach((result, index) => (result === '' || !result) ? emptyIndex = index : '')\r\n\t\tif (emptyIndex !== -1) Swal.fire('Ops!', `Sorry but the \"${inputs[emptyIndex]}\" is required`, 'error');\r\n\t\telse {\r\n\t\t\tif(ResID != undefined) {}\r\n\t\t\telse if (topicID != undefined) { updateTopicDocument(); }\r\n\t\t\telse if (inputs[0].includes('Topic')) submitTopic();\r\n\t\t\telse if (values.length !== 0) updateDocument();\r\n\t\t\telse if (descriptionInput) submitMaterial();\r\n\t\t\t// to add the topic later\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody: any = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: rate\r\n\t\t}\r\n\t\tconst requestParams = {\r\n\t\t\tmaterialID: localMaterialID!\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: updateMaterial, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === OK) {\r\n\t\t\tupdateMaterialLocally(localMaterialID!, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitMaterial = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: 5,\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: createNewMaerial, requestBody });\r\n\t\tconst { message, materialID } = data;\r\n\r\n\t\tif (status === CREATED) {\r\n\t\t\tupdateMaterialLocally(materialID, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', message || 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitTopic = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID }\r\n\t\tconst { data, status } = await APIsCaller({ api: createTopic, requestBody, requestParams });\r\n\t\tconst { message, topicID } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\tconsole.log(addResButtonRef.current)\r\n\t\t\tsetResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\tawait Swal.fire('Thanks', message, 'success');\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateTopicDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID, topicID: topicID }\r\n\t\tconst { data, status } = await APIsCaller({ api: updateTopic, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\t// setResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\t// addResButtonRef.current!.style.display = 'flex';\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateMaterialLocally = (matID: string, newMat: any) => {\r\n\t\tconst newData = {\r\n\t\t\t...materialsTable,\r\n\t\t\t[matID]: newMat\r\n\t\t}\r\n\t\tsetMaterialsTable(() => newData);\r\n\t}\r\n\r\n\tconst MaterialInputs = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"inputs-container\">\r\n\t\t\t\t{inputs.map((hint, index) => {\r\n\t\t\t\t\tif (values!.length > index) return <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} defaultValue={values[index]} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t\treturn <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t})}\r\n\t\t\t\t{\r\n\t\t\t\t\tdescriptionInput ? <textarea placeholder={descriptionInput} ref={textAreaRef}\r\n\t\t\t\t\t\tdefaultValue={(localMaterialID) ? materialsTable[localMaterialID].materialDesc : ''}\r\n\t\t\t\t\t\tonFocus={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflowY = 'scroll';\r\n\t\t\t\t\t\t}} onBlur={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflow = 'hidden';\r\n\t\t\t\t\t\t}} /> : <div />\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"lottie-input-container\" ref={inputLottie} />\r\n\t\t\t\t<div className=\"submit-material-button\" onClick={submitHandler}>\r\n\t\t\t\t\t{(values.length !== 0) ? \"Update\" : \"Submit\"}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Materialpreviewer = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"material-previewer-container\">\r\n\t\t\t\t<div className=\"material-previewer\" >\r\n\t\t\t\t\t<img src={(values.length >= 2) ? values[1] : emptySVG} alt=\"card-img\" ref={previewer} />\r\n\t\t\t\t\t<pre className=\"material-name-container\" ref={materialName}>\r\n\t\t\t\t\t\t{(values.length >= 2) ? values[0] : emptyName}\r\n\t\t\t\t\t</pre>\r\n\t\t\t\t</div>\r\n\t\t\t\t{addResButton()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\t// TODO if I recived the topic ID then the button should be display flex by defualt\r\n\tconst addResButton = () => {\r\n\t\treturn <NavLink to={resRoute}>\r\n\t\t\t<div className=\"add-res-button\" ref={addResButtonRef}>Add resources</div>\r\n\t\t</NavLink>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"manual-entry-method\">\r\n\t\t\t<MaterialInputs />\r\n\t\t\t<Materialpreviewer />\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\404\\404-componant.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\res-requests\\res.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"import React, { useCallback, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\r\nimport { match as infoPageMatch, useHistory } from 'react-router-dom';\r\nimport MaterialCard from \"./../viewer/material-card\";\r\nimport TopicCard from \"./../viewer/topic-card\";\r\nimport { APIsCaller } from './../../../../requestes/apis-caller'\r\nimport { getAllTopics } from './../../../../requestes/material-requests/mateirla'\r\nimport { deleteTopic } from './../../../../requestes/material-requests/mateirla'\r\nimport { DynamicContentContext } from './../../../../contexts/home-context/dynamic-content-state-context';\r\nimport loadMoreIcon from '../../../../assets/material-info-assets/load-more-icon.json';\r\nimport loadingIcon from '../../../../assets/material-info-assets/loading_icon.json';\r\nimport lottie, { AnimationItem } from 'lottie-web';\r\nimport { allTopicRes } from '../../../../constants/pages-route';\r\nimport { updateTopic } from '../../../../constants/pages-route';\r\n\r\n\r\nimport './../../../../styles/materials-info/materials-info.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function MaterialInfo({ match }: { match: infoPageMatch<{ matID: string }> }) {\r\n\tconst materialID = match.params.matID;\r\n\tconst TOPIC_SEGEMENT_LENGTH = 11; // how many topic in each page (initial viwed topics count and how many to add each load more click).\r\n\r\n\tconst { materialsTable } = useContext(DynamicContentContext);\r\n\r\n\tconst [allTopics, setAllTopics] = useState([]);\r\n\tconst [topicsToDisplay, setTopicsToDisplay] = useState([]);\r\n\tconst [nextTopicsIndex, setNextTopicsIndex] = useState(0);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [topicsFound, setTopicsFound] = useState(true);\r\n\r\n\tconst loadMoreDivRef = useRef(null);\r\n\tconst loadingDivRef = useRef(null);\r\n\r\n\tlet material = materialsTable[materialID];\r\n\tlet [loadMoreAnimation, setLoadMoreAnimation] = useState<AnimationItem>();\r\n\tlet [loadingAnimation, setLoadingAnimation] = useState<AnimationItem>();\r\n\r\n\t// helllllllllllllllllllllllllllllo, plz rename\r\n\tlet addNewSetOfTopicsToDisplay = (allTopics: any, length: number = TOPIC_SEGEMENT_LENGTH) => {\r\n\t\tsetTopicsToDisplay(Object.entries(allTopics).slice(0, nextTopicsIndex + length).map((entry) => entry[1]) as any);\r\n\t\tsetNextTopicsIndex(nextTopicsIndex + length)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// I think this is a bit overkill but why not :).\r\n\t\t// this is to retrieve suitable[topics for the current opened material] topics from local storage.\r\n\t\t// if the retrived topics are valid then update \"allTopics\" with its value.\r\n\t\t// else send a request to retrieve them from the database.\r\n\t\tif (allTopics.length == 0 || allTopics == undefined) {\r\n\t\t\t// get topics form localStorage\r\n\t\t\tlet res = JSON.parse(localStorage.getItem('currentTopics') as any) || [];\r\n\t\t\t// is there is any data stored in localStorage [checked by res.length==0]\r\n\t\t\t// see if it belongs to the current opend data by comperaint materialId.\r\n\t\t\tif (res.length == 0 || res == undefined || res.id != materialID) {\r\n\t\t\t\t// no data or incorrecnt strored, send request.\r\n\t\t\t\tconst getData = async () => {\r\n\t\t\t\t\tconst requestParams = { materialID: materialID };\r\n\t\t\t\t\tconst { data: topicsTable } = await APIsCaller({ api: getAllTopics, requestParams });\r\n\t\t\t\t\tif (topicsTable) setAllTopics(topicsTable.topicsTable);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t};\r\n\t\t\t\tgetData();\r\n\t\t\t} else {\r\n\t\t\t\t// correct data stored.\r\n\t\t\t\tsetAllTopics(res.topics);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// loading animation for the loading animation.\r\n\t\t// this comment is intended to be confusing :);\r\n\t\tsetLoadingAnimation(lottie.loadAnimation({\r\n\t\t\tcontainer: loadingDivRef.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: loadingIcon,\r\n\t\t}));\r\n\r\n\t\t// delete currentTopics from localstorage, when component is unmounted. \r\n\t\treturn () => {\r\n\t\t\tlocalStorage.removeItem('currentTopics');\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// this effect is entered twice when refreshing the page.\r\n\t\t// once on the value of allTopics is initilized to [].\r\n\t\t// the second when the other useEffect populates allTopics with fetched data\r\n\t\t// so this if statment servers as a gaurd for that.\r\n\t\t// note: if we found better way to handle this I'll change it, but for now i think it's working.\r\n\t\tif (allTopics.length != 0) {\r\n\t\t\t// store current fetched topics for if page is refresed.\r\n\t\t\tlocalStorage.setItem('currentTopics', JSON.stringify({ id: materialID, topics: allTopics }) as any)\r\n\r\n\t\t\t// guess what this line of code does, and you will win the \"I can read code\" grand prize.\r\n\t\t\tsetTopicsFound((Object.keys(allTopics).length != 0) ? true : false);\r\n\r\n\t\t\t// add the first n topics to be displied on the initial refresh,(where n=TOPIC_SEGEMENT_LENGTH).\r\n\t\t\taddNewSetOfTopicsToDisplay(allTopics);\r\n\r\n\t\t\tconsole.log('allTopics', allTopics);\r\n\t\t}\r\n\t}, [allTopics]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// loading animation for the loading more animation.\r\n\t\tsetLoadMoreAnimation(lottie.loadAnimation({\r\n\t\t\tcontainer: loadMoreDivRef.current!,\r\n\t\t\tautoplay: false,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: loadMoreIcon,\r\n\t\t}));\r\n\t}, [loadMoreDivRef.current])\r\n\r\n\tlet deleteTopicFun = async (cardID: any) => {\r\n\t\tconst requestParams = { materialID: materialID, topicID: cardID };\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Are you sure?',\r\n\t\t\ttext: \"You won't be able to revert this!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#d33',\r\n\t\t\tcancelButtonColor: '#3085d6',\r\n\t\t\tconfirmButtonText: 'Yes, delete it!',\r\n\t\t\tshowLoaderOnConfirm: true,\r\n\t\t}).then(async (result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: \"Deleting Topic\",\r\n\t\t\t\t\ttext: \"Please Wait...\",\r\n\t\t\t\t\tdidOpen: async () => {\r\n\t\t\t\t\t\tSwal.showLoading();\r\n\t\t\t\t\t\tlet res = await APIsCaller({ api: deleteTopic, requestParams });\r\n\t\t\t\t\t\tSwal.hideLoading();\r\n\t\t\t\t\t\tconsole.log('del-res', res);\r\n\t\t\t\t\t\tremoveFromAllTopics(cardID);\r\n\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t// after deleting completed\r\n\t\t\t\t\t\t\tSwal.fire(\r\n\t\t\t\t\t\t\t\t'Deleted!',\r\n\t\t\t\t\t\t\t\tres.data.message,\r\n\t\t\t\t\t\t\t\t'success'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\t\t\t\ttitle: 'Oops...',\r\n\t\t\t\t\t\t\t\ttext: 'Something went wrong!',\r\n\t\t\t\t\t\t\t\tfooter: '<a href>Please Try Agian</a>'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// \r\n\tlet removeFromAllTopics = (topicID: any) => {\r\n\t\tdelete allTopics[topicID];\r\n\t\tsetAllTopics(() => allTopics);\r\n\t\tlocalStorage.setItem('currentTopics', JSON.stringify({ id: materialID, topics: allTopics }) as any)\r\n\t\taddNewSetOfTopicsToDisplay(allTopics, nextTopicsIndex);\r\n\t}\r\n\r\n\tlet editTopicFun = (history:any, cardID: any, cardTitle:any, cardPhoto:any, topicDes:any) => {\r\n\t\thistory.push(updateTopic, { materialID: materialID, topicID: cardID, name: cardTitle, photo: cardPhoto, description: topicDes })\r\n\t}\r\n\r\n\tlet bodyTopicFun = (history:any, cardID:any, cardTitle: any, cardPhoto: any, cardRate: any, topicDes: any) => {\r\n\t\thistory.push(`${allTopicRes}/${materialID}/${cardID}`, { title: cardTitle, photo: cardPhoto, rate: cardRate, description: topicDes })\r\n\t}\r\n\r\n\tlet onClickHandlers = {\r\n\t\tdelete: deleteTopicFun,\r\n\t\tedit: editTopicFun,\r\n\t\tbody: bodyTopicFun\r\n\t}\r\n\r\n\t// disblay waiting for conext result\r\n\t// show spining circle, a moneky eating a banana or a cat photo anything.\r\n\tif (!material) {\r\n\t\t// show material not found or something.\r\n\t\treturn (\r\n\t\t\t<p>\r\n\t\t\t\tMaterial Not Found :)\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"materials-info-container\">\r\n\t\t\t<div id=\"material-card\">\r\n\t\t\t\t<MaterialCard cardTitle={material.materialName} cardPhoto={material.materialPhoto} cardRate={material.totalRate} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"desc\">\r\n\t\t\t\t<p id=\"desc-title\">Description: </p>\r\n\t\t\t\t<p id=\"desc-text\">{material.materialDesc || \"No Description\"}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"topics-section\">\r\n\t\t\t\t<div id=\"topics\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(loading) ?\r\n\t\t\t\t\t\t\t<div className=\"loading-div\" ref={loadingDivRef}></div>\r\n\t\t\t\t\t\t\t: (topicsFound) ?\r\n\t\t\t\t\t\t\t\ttopicsToDisplay.map((topic: any, index) => {\r\n\t\t\t\t\t\t\t\t\treturn <TopicCard key={index}IDs\r\n\t\t\t\t\t\t\t\t\t\tcardID = {Object.keys(allTopics)[index]}\r\n\t\t\t\t\t\t\t\t\t\tcardTitle={topic.topicName || material.materialName}\r\n\t\t\t\t\t\t\t\t\t\tcardPhoto={topic.topicPhoto || material.materialPhoto}\r\n\t\t\t\t\t\t\t\t\t\tcardRate={topic.topicRate || material.totalRate}\r\n\t\t\t\t\t\t\t\t\t\tdescription={topic.description || material.materialDesc || \"No Description\"}\r\n\t\t\t\t\t\t\t\t\t\tonClickHandlers={onClickHandlers}\r\n\t\t\t\t\t\t\t\t\t\trouteTo={allTopicRes} />\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t: <p>No Topics Found</p>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(nextTopicsIndex < Object.keys(allTopics).length) ?\r\n\t\t\t\t\t\t\t(<div ref={loadMoreDivRef} className=\"load-more-card\" onClick={() => addNewSetOfTopicsToDisplay(allTopics)} onMouseEnter={() => { loadMoreAnimation!.play() }} onMouseLeave={() => { loadMoreAnimation!.stop() }}>\r\n\t\t\t\t\t\t\t\t{/* not the best way but it works */}\r\n\t\t\t\t\t\t\t\t<p>Load More</p>\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\res-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\action-cods.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\material-requests\\mateirla.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx",["395"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport lottie from \"lottie-web\";\r\nimport Swal from \"sweetalert2\";\r\nimport uniManagerPic from \"../../../../assets/home/uni-manager/uni-manager.json\";\r\nimport DeleteUni from \"./delete-uni\";\r\ninterface SelectProtected {\r\n  readonly wrapperElement: HTMLDivElement;\r\n}\r\n\r\ntype uniNames = {\r\n  unisDataList: any;\r\n  setUnisDataList: any;\r\n  setLocations: any;\r\n  setMajors: any;\r\n  uniName: string;\r\n  setUniName: any;\r\n  uniID: string;\r\n  setUniID: any;\r\n  unisNames: string[];\r\n  setUnisNames: any;\r\n};\r\n\r\nexport default function UnisNames({\r\n  unisDataList,\r\n  setUnisDataList,\r\n  setLocations,\r\n  setMajors,\r\n  uniName,\r\n  setUniName,\r\n  uniID,\r\n  setUniID,\r\n  unisNames,\r\n  setUnisNames,\r\n}: uniNames) {\r\n  const [display, setDisplay] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // let unisNamess: string[] = unisDataList.map(({ doc }: any) => doc.name);\r\n  // const [unisNames, setUnisNames] = useState(unisNamess || []);\r\n\r\n  let index = 0;\r\n  const animated: any = useRef(null);\r\n  const [flag, setFlag] = useState(true); // to clear data (locations and majors) depending on the name\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const setUniDex = (uni: string) => { // set the uni index to fill data locations and majors if founds\r\n    if (unisNames.includes(uni)) {\r\n      // setSearch(uni);\r\n      // setDisplay(false);\r\n      const index = unisNames.indexOf(uni);\r\n      const item = unisDataList[index];\r\n      const { id } = item;\r\n      const { doc } = item;\r\n      const { name } = doc;\r\n      const { locations } = doc;\r\n      const { fields } = doc;\r\n      setLocations(locations);\r\n      setMajors(fields);\r\n      setUniName(name);\r\n      setUniID(id);\r\n      setFlag(true);\r\n    } else {\r\n      setUniName(uni);\r\n      setUniID(null);\r\n      if (flag === true) {\r\n        const empty: any = [];\r\n        setLocations(empty);\r\n        setMajors(empty);\r\n        setFlag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeUniName = async (oldName: string) => {\r\n    let newName = oldName;\r\n    Swal.fire({\r\n      title: \"change university name\",\r\n      input: \"text\",\r\n      inputValue: oldName,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: true,\r\n      allowEnterKey: true,\r\n      confirmButtonText: \"edit\",\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (result) => {\r\n        if (result) {\r\n          if (unisNames.includes(result)) {\r\n            Swal.showValidationMessage(\"this name already exists\");\r\n          } else return;\r\n        } else {\r\n          Swal.showValidationMessage(\"please enter a name\");\r\n        }\r\n      },\r\n    }).then((result: any) => {\r\n      newName = result.value;\r\n      if (result.isConfirmed) {\r\n        if (newName === \"\") {\r\n        }\r\n        if (newName !== null && newName !== \"\") {\r\n          const temp = [];\r\n          for (let i = 0; i < unisNames.length; i++) {\r\n            if (unisNames[i] === oldName) temp[i] = newName;\r\n            else temp[i] = unisNames[i];\r\n          }\r\n          setUnisNames(temp);\r\n          setSearch(newName);\r\n          setUniName(newName);\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: animated.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: uniManagerPic,\r\n    });\r\n\r\n    if (unisNames[0].length > 0) {\r\n      const temp = unisNames[0];\r\n      setUniDex(temp);\r\n      setSearch(temp);\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutSide);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutSide);\r\n    };\r\n  }, []);\r\n\r\n  const selectProtected: SelectProtected = {\r\n    wrapperElement: document.createElement(\"div\"),\r\n  };\r\n  const wrapperRef = useRef(selectProtected.wrapperElement);\r\n\r\n  const handleClickOutSide = (e: any) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(e.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uni-names-div \">\r\n      <label htmlFor=\"uni-name-input\" className=\"uni-name-label label\">\r\n        University name\r\n      </label>\r\n      <input\r\n        id=\"auto\"\r\n        className=\"auto-input input\"\r\n        onClick={() => setDisplay(true)}\r\n        value={search}\r\n        autoComplete=\"off\"\r\n        onChange={(event) => setSearch(event.target.value)}\r\n        onBlur={(event) => setUniDex(search)}\r\n      ></input>\r\n      {display && (\r\n        <div ref={wrapperRef} className=\"autoContainer\">\r\n          {unisNames\r\n            .filter((uniName: string) => uniName.indexOf(search) > -1)\r\n            .map((uniName: string) => {\r\n              return (\r\n                <div\r\n                  onClick={() => {\r\n                    setSearch(() => uniName);\r\n                    setUniDex(uniName);\r\n                    setDisplay(false);\r\n                  }}\r\n                  className=\"option\"\r\n                  key={index++}\r\n                >\r\n                  <span className=\"uni-name-option\">{uniName}</span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n      <div className=\"change-uni-name-div\">\r\n        <button\r\n          className=\"change-uni-name-btn\"\r\n          onClick={() => changeUniName(search)}\r\n        >\r\n          change name\r\n        </button>\r\n      </div>\r\n      <DeleteUni\r\n        {...{\r\n          unisDataList,\r\n          setUnisDataList,\r\n          unisNames,\r\n          setUnisNames,\r\n          uniID,\r\n          uniName,\r\n          setUniDex,\r\n          setSearch,\r\n        }}\r\n      />\r\n      <div className=\"animated\" ref={animated}></div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx",[],{"ruleId":"396","replacedBy":"397"},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","severity":1,"message":"401","line":4,"column":8,"nodeType":"402","messageId":"403","endLine":4,"endColumn":16},{"ruleId":"400","severity":1,"message":"404","line":3,"column":19,"nodeType":"402","messageId":"403","endLine":3,"endColumn":28},{"ruleId":"400","severity":1,"message":"405","line":1,"column":36,"nodeType":"402","messageId":"403","endLine":1,"endColumn":44},{"ruleId":"400","severity":1,"message":"406","line":4,"column":8,"nodeType":"402","messageId":"403","endLine":4,"endColumn":13},{"ruleId":"400","severity":1,"message":"407","line":5,"column":8,"nodeType":"402","messageId":"403","endLine":5,"endColumn":22},{"ruleId":"400","severity":1,"message":"408","line":6,"column":8,"nodeType":"402","messageId":"403","endLine":6,"endColumn":26},{"ruleId":"400","severity":1,"message":"409","line":7,"column":8,"nodeType":"402","messageId":"403","endLine":7,"endColumn":25},{"ruleId":"400","severity":1,"message":"410","line":8,"column":8,"nodeType":"402","messageId":"403","endLine":8,"endColumn":27},{"ruleId":"400","severity":1,"message":"411","line":14,"column":20,"nodeType":"402","messageId":"403","endLine":14,"endColumn":41},{"ruleId":"400","severity":1,"message":"412","line":14,"column":43,"nodeType":"402","messageId":"403","endLine":14,"endColumn":52},{"ruleId":"400","severity":1,"message":"413","line":14,"column":54,"nodeType":"402","messageId":"403","endLine":14,"endColumn":67},{"ruleId":"400","severity":1,"message":"414","line":14,"column":69,"nodeType":"402","messageId":"403","endLine":14,"endColumn":79},{"ruleId":"400","severity":1,"message":"415","line":17,"column":8,"nodeType":"402","messageId":"403","endLine":17,"endColumn":20},{"ruleId":"400","severity":1,"message":"416","line":18,"column":8,"nodeType":"402","messageId":"403","endLine":18,"endColumn":13},{"ruleId":"400","severity":1,"message":"417","line":24,"column":11,"nodeType":"402","messageId":"403","endLine":24,"endColumn":15},{"ruleId":"400","severity":1,"message":"418","line":24,"column":17,"nodeType":"402","messageId":"403","endLine":24,"endColumn":21},{"ruleId":"400","severity":1,"message":"419","line":24,"column":23,"nodeType":"402","messageId":"403","endLine":24,"endColumn":27},{"ruleId":"400","severity":1,"message":"420","line":24,"column":29,"nodeType":"402","messageId":"403","endLine":24,"endColumn":33},{"ruleId":"400","severity":1,"message":"421","line":24,"column":35,"nodeType":"402","messageId":"403","endLine":24,"endColumn":40},{"ruleId":"400","severity":1,"message":"422","line":24,"column":42,"nodeType":"402","messageId":"403","endLine":24,"endColumn":53},{"ruleId":"400","severity":1,"message":"423","line":25,"column":11,"nodeType":"402","messageId":"403","endLine":25,"endColumn":18},{"ruleId":"400","severity":1,"message":"424","line":1,"column":34,"nodeType":"402","messageId":"403","endLine":1,"endColumn":44},{"ruleId":"400","severity":1,"message":"425","line":30,"column":10,"nodeType":"402","messageId":"403","endLine":30,"endColumn":26},{"ruleId":"426","severity":1,"message":"427","line":50,"column":75,"nodeType":"428","messageId":"429","endLine":50,"endColumn":86,"fix":"430"},{"ruleId":"431","severity":1,"message":"432","line":58,"column":8,"nodeType":"433","endLine":58,"endColumn":10,"suggestions":"434"},{"ruleId":"435","severity":1,"message":"436","line":152,"column":74,"nodeType":"437","messageId":"438","endLine":152,"endColumn":76},{"ruleId":"439","severity":1,"message":"440","line":161,"column":61,"nodeType":"441","endLine":161,"endColumn":125},{"ruleId":"442","severity":1,"message":"443","line":172,"column":57,"nodeType":"444","messageId":"445","endLine":172,"endColumn":63},{"ruleId":"439","severity":1,"message":"440","line":181,"column":61,"nodeType":"441","endLine":181,"endColumn":105},{"ruleId":"442","severity":1,"message":"443","line":190,"column":57,"nodeType":"444","messageId":"445","endLine":190,"endColumn":63},{"ruleId":"442","severity":1,"message":"443","line":206,"column":57,"nodeType":"444","messageId":"445","endLine":206,"endColumn":63},{"ruleId":"439","severity":1,"message":"440","line":215,"column":61,"nodeType":"441","endLine":215,"endColumn":105},{"ruleId":"442","severity":1,"message":"443","line":224,"column":57,"nodeType":"444","messageId":"445","endLine":224,"endColumn":63},{"ruleId":"442","severity":1,"message":"443","line":240,"column":57,"nodeType":"444","messageId":"445","endLine":240,"endColumn":63},{"ruleId":"431","severity":1,"message":"446","line":70,"column":5,"nodeType":"433","endLine":70,"endColumn":19,"suggestions":"447"},{"ruleId":"448","severity":1,"message":"449","line":65,"column":13,"nodeType":"450","messageId":"451","endLine":65,"endColumn":15},{"ruleId":"448","severity":1,"message":"449","line":66,"column":21,"nodeType":"450","messageId":"451","endLine":66,"endColumn":23},{"ruleId":"400","severity":1,"message":"452","line":1,"column":17,"nodeType":"402","messageId":"403","endLine":1,"endColumn":28},{"ruleId":"400","severity":1,"message":"453","line":1,"column":53,"nodeType":"402","messageId":"403","endLine":1,"endColumn":68},{"ruleId":"400","severity":1,"message":"454","line":1,"column":70,"nodeType":"402","messageId":"403","endLine":1,"endColumn":77},{"ruleId":"400","severity":1,"message":"424","line":2,"column":34,"nodeType":"402","messageId":"403","endLine":2,"endColumn":44},{"ruleId":"400","severity":1,"message":"425","line":36,"column":7,"nodeType":"402","messageId":"403","endLine":36,"endColumn":23},{"ruleId":"448","severity":1,"message":"455","line":49,"column":24,"nodeType":"450","messageId":"451","endLine":49,"endColumn":26},{"ruleId":"448","severity":1,"message":"455","line":49,"column":42,"nodeType":"450","messageId":"451","endLine":49,"endColumn":44},{"ruleId":"448","severity":1,"message":"455","line":54,"column":19,"nodeType":"450","messageId":"451","endLine":54,"endColumn":21},{"ruleId":"448","severity":1,"message":"455","line":54,"column":31,"nodeType":"450","messageId":"451","endLine":54,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":54,"column":54,"nodeType":"450","messageId":"451","endLine":54,"endColumn":56},{"ruleId":"431","severity":1,"message":"456","line":84,"column":5,"nodeType":"433","endLine":84,"endColumn":7,"suggestions":"457"},{"ruleId":"448","severity":1,"message":"449","line":92,"column":24,"nodeType":"450","messageId":"451","endLine":92,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":97,"column":50,"nodeType":"450","messageId":"451","endLine":97,"endColumn":52},{"ruleId":"431","severity":1,"message":"458","line":104,"column":5,"nodeType":"433","endLine":104,"endColumn":16,"suggestions":"459"},{"ruleId":"431","severity":1,"message":"460","line":115,"column":5,"nodeType":"433","endLine":115,"endColumn":29,"suggestions":"461"},{"ruleId":"431","severity":1,"message":"462","line":133,"column":6,"nodeType":"433","endLine":133,"endColumn":8,"suggestions":"463"},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"@typescript-eslint/no-unused-vars","'homeIcon' is defined but never used.","Identifier","unusedVar","'matchType' is defined but never used.","'useState' is defined but never used.","'qAndA' is defined but never used.","'rulesAnimation' is defined but never used.","'usefulResAnimation' is defined but never used.","'videoAnimatedIcon' is defined but never used.","'defualtWebsiteImage' is defined but never used.","'questionAndAnswerType' is defined but never used.","'rulesType' is defined but never used.","'usefulResType' is defined but never used.","'videosType' is defined but never used.","'youtubeImage' is defined but never used.","'axios' is defined but never used.","'ign1' is assigned a value but never used.","'ign2' is assigned a value but never used.","'ign3' is assigned a value but never used.","'name' is assigned a value but never used.","'photo' is assigned a value but never used.","'description' is assigned a value but never used.","'resType' is assigned a value but never used.","'useHistory' is defined but never used.","'loadingAnimation' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"466","text":"467"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allTypes', 'matID', and 'topicID'. Either include them or remove the dependency array.","ArrayExpression",["468"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has missing dependencies: 'defualtValues' and 'user'. Either include them or remove the dependency array.",["469"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useCallback' is defined but never used.","'useLayoutEffect' is defined but never used.","'useMemo' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allTopics' and 'materialID'. Either include them or remove the dependency array.",["470"],"React Hook useEffect has missing dependencies: 'addNewSetOfTopicsToDisplay' and 'materialID'. Either include them or remove the dependency array.",["471"],"React Hook useEffect has an unnecessary dependency: 'loadMoreDivRef.current'. Either exclude it or remove the dependency array. Mutable values like 'loadMoreDivRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["472"],"React Hook useEffect has missing dependencies: 'setUniDex' and 'unisNames'. Either include them or remove the dependency array.",["473"],"no-global-assign","no-unsafe-negation",[2189,2200],"[]",{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},"Update the dependencies array to be: [allTypes, matID, topicID]",{"range":"486","text":"487"},"Update the dependencies array to be: [defualtValues, user, userSchedule]",{"range":"488","text":"489"},"Update the dependencies array to be: [allTopics, materialID]",{"range":"490","text":"491"},"Update the dependencies array to be: [addNewSetOfTopicsToDisplay, allTopics, materialID]",{"range":"492","text":"493"},"Update the dependencies array to be: []",{"range":"494","text":"467"},"Update the dependencies array to be: [setUniDex, unisNames]",{"range":"495","text":"496"},[2460,2462],"[allTypes, matID, topicID]",[2666,2680],"[defualtValues, user, userSchedule]",[3916,3918],"[allTopics, materialID]",[4862,4873],"[addNewSetOfTopicsToDisplay, allTopics, materialID]",[5145,5169],[3725,3727],"[setUniDex, unisNames]"]