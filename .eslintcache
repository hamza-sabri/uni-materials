[{"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\index.tsx":"1","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\App.tsx":"2","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\history\\credationls-history.ts":"3","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\home.tsx":"4","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signin.tsx":"5","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signup.tsx":"6","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\pages-route.ts":"7","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\uni-requests\\university.ts":"8","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\signup-context\\uni-data-context.ts":"9","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\apis-caller.ts":"10","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-container.tsx":"11","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\login-page.tsx":"12","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\home-page.tsx":"13","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\status-codes.ts":"14","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\urls.ts":"15","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\axios-creation.ts":"16","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\form-arrays.ts":"17","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts":"18","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-image.tsx":"19","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-forms.tsx":"20","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\signUpButton.tsx":"21","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\user-requestes\\user.ts":"22","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\forgotPassword.tsx":"23","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx":"24","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar.tsx":"25","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar.tsx":"26","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\utilities\\alearts.tsx":"27","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\local-storage-keys.ts":"28","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\messages.ts":"29","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-buttons.tsx":"30","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-inputs.tsx":"31","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\side-bar-section-cards.ts":"32","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\book-entry-page.tsx":"33","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\manual-entry.tsx":"34","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\material-info-page.tsx":"35","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\profile-page.tsx":"36","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\view-page.tsx":"37","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\guidance.tsx":"38","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\not-found-page.tsx":"39","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-entry-section.tsx":"40","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\schedule-page.tsx":"41","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\uni-manager-page.tsx":"42","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\logo.tsx":"43","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx":"44","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\search-area.tsx":"45","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx":"46","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\view-all-res.tsx":"47","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-res.tsx":"48","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\data-entry-page.tsx":"49","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx":"50","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx":"51","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\validation\\signup-validation.ts":"52","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-dropdown.tsx":"53","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\res-types.ts":"54","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx":"55","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx":"56","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\res-requests\\res.ts":"57","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx":"58","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar-card.tsx":"59","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx":"60","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\res-card.tsx":"61","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx":"62","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\404\\404-componant.tsx":"63","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx":"64","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx":"65","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx":"66","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx":"67","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx":"68","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\material-requests\\mateirla.ts":"69","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\action-cods.ts":"70","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx":"71","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx":"72","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx":"73","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx":"74","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx":"75","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx":"76","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx":"77","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx":"78","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx":"79","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx":"80","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx":"81","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx":"82","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx":"83"},{"size":246,"mtime":1617706800040,"results":"84","hashOfConfig":"85"},{"size":681,"mtime":1617706799980,"results":"86","hashOfConfig":"85"},{"size":86,"mtime":1617706800039,"results":"87","hashOfConfig":"85"},{"size":115,"mtime":1617706800042,"results":"88","hashOfConfig":"85"},{"size":208,"mtime":1617706800042,"results":"89","hashOfConfig":"85"},{"size":870,"mtime":1617706800043,"results":"90","hashOfConfig":"85"},{"size":1266,"mtime":1620390577734,"results":"91","hashOfConfig":"85"},{"size":2267,"mtime":1617706800045,"results":"92","hashOfConfig":"85"},{"size":97,"mtime":1617706800039,"results":"93","hashOfConfig":"85"},{"size":1336,"mtime":1619794564013,"results":"94","hashOfConfig":"85"},{"size":890,"mtime":1620127648774,"results":"95","hashOfConfig":"85"},{"size":2189,"mtime":1620206016196,"results":"96","hashOfConfig":"85"},{"size":2264,"mtime":1621505601008,"results":"97","hashOfConfig":"85"},{"size":724,"mtime":1619935711322,"results":"98","hashOfConfig":"85"},{"size":2151,"mtime":1621162959363,"results":"99","hashOfConfig":"85"},{"size":464,"mtime":1619794564014,"results":"100","hashOfConfig":"85"},{"size":1016,"mtime":1617706800036,"results":"101","hashOfConfig":"85"},{"size":109,"mtime":1617706800038,"results":"102","hashOfConfig":"85"},{"size":64538,"mtime":1617706800036,"results":"103","hashOfConfig":"85"},{"size":560,"mtime":1617706800035,"results":"104","hashOfConfig":"85"},{"size":326,"mtime":1617706800034,"results":"105","hashOfConfig":"85"},{"size":5045,"mtime":1621099852139,"results":"106","hashOfConfig":"85"},{"size":531,"mtime":1619794564007,"results":"107","hashOfConfig":"85"},{"size":3390,"mtime":1621505709761,"results":"108","hashOfConfig":"85"},{"size":284,"mtime":1617706800022,"results":"109","hashOfConfig":"85"},{"size":335,"mtime":1617706800021,"results":"110","hashOfConfig":"85"},{"size":1340,"mtime":1619794564034,"results":"111","hashOfConfig":"85"},{"size":159,"mtime":1619794564009,"results":"112","hashOfConfig":"85"},{"size":431,"mtime":1617706800036,"results":"113","hashOfConfig":"85"},{"size":2463,"mtime":1620206016196,"results":"114","hashOfConfig":"85"},{"size":1281,"mtime":1617706800034,"results":"115","hashOfConfig":"85"},{"size":2375,"mtime":1621099852137,"results":"116","hashOfConfig":"85"},{"size":319,"mtime":1617706800042,"results":"117","hashOfConfig":"85"},{"size":1709,"mtime":1619299756673,"results":"118","hashOfConfig":"85"},{"size":388,"mtime":1617803904992,"results":"119","hashOfConfig":"85"},{"size":223,"mtime":1619794564013,"results":"120","hashOfConfig":"85"},{"size":388,"mtime":1617706800043,"results":"121","hashOfConfig":"85"},{"size":302,"mtime":1619794564012,"results":"122","hashOfConfig":"85"},{"size":445,"mtime":1620127648776,"results":"123","hashOfConfig":"85"},{"size":626,"mtime":1619935711318,"results":"124","hashOfConfig":"85"},{"size":268,"mtime":1619935711323,"results":"125","hashOfConfig":"85"},{"size":256,"mtime":1617706800043,"results":"126","hashOfConfig":"85"},{"size":8781,"mtime":1617706800021,"results":"127","hashOfConfig":"85"},{"size":1000,"mtime":1619794563996,"results":"128","hashOfConfig":"85"},{"size":4975,"mtime":1621757061032,"results":"129","hashOfConfig":"85"},{"size":961,"mtime":1620032449666,"results":"130","hashOfConfig":"85"},{"size":17333,"mtime":1621763223281,"results":"131","hashOfConfig":"85"},{"size":17302,"mtime":1620810449055,"results":"132","hashOfConfig":"85"},{"size":472,"mtime":1621099852138,"results":"133","hashOfConfig":"85"},{"size":698,"mtime":1617706800026,"results":"134","hashOfConfig":"85"},{"size":561,"mtime":1617706800025,"results":"135","hashOfConfig":"85"},{"size":1434,"mtime":1617706800059,"results":"136","hashOfConfig":"85"},{"size":1312,"mtime":1617706800035,"results":"137","hashOfConfig":"85"},{"size":282,"mtime":1620031046759,"results":"138","hashOfConfig":"85"},{"size":7601,"mtime":1620392287273,"results":"139","hashOfConfig":"85"},{"size":4451,"mtime":1619794563998,"results":"140","hashOfConfig":"85"},{"size":1876,"mtime":1620583198598,"results":"141","hashOfConfig":"85"},{"size":10257,"mtime":1621593627311,"results":"142","hashOfConfig":"85"},{"size":609,"mtime":1619794563997,"results":"143","hashOfConfig":"85"},{"size":4421,"mtime":1619794564000,"results":"144","hashOfConfig":"85"},{"size":4482,"mtime":1620761185150,"results":"145","hashOfConfig":"85"},{"size":2617,"mtime":1619935711319,"results":"146","hashOfConfig":"85"},{"size":21249,"mtime":1619794563995,"results":"147","hashOfConfig":"85"},{"size":220,"mtime":1619794564003,"results":"148","hashOfConfig":"85"},{"size":3612,"mtime":1619794563999,"results":"149","hashOfConfig":"85"},{"size":696,"mtime":1617706800031,"results":"150","hashOfConfig":"85"},{"size":3862,"mtime":1621757029887,"results":"151","hashOfConfig":"85"},{"size":6781,"mtime":1621631893981,"results":"152","hashOfConfig":"85"},{"size":3101,"mtime":1619794564014,"results":"153","hashOfConfig":"85"},{"size":268,"mtime":1619794564008,"results":"154","hashOfConfig":"85"},{"size":5126,"mtime":1621754252337,"results":"155","hashOfConfig":"85"},{"size":535,"mtime":1617706800025,"results":"156","hashOfConfig":"85"},{"size":2149,"mtime":1619794564001,"results":"157","hashOfConfig":"85"},{"size":2009,"mtime":1619794564004,"results":"158","hashOfConfig":"85"},{"size":5484,"mtime":1620583059498,"results":"159","hashOfConfig":"85"},{"size":2540,"mtime":1620031750454,"results":"160","hashOfConfig":"85"},{"size":2549,"mtime":1620031750455,"results":"161","hashOfConfig":"85"},{"size":2346,"mtime":1619794564003,"results":"162","hashOfConfig":"85"},{"size":5753,"mtime":1619794564004,"results":"163","hashOfConfig":"85"},{"size":3050,"mtime":1619794564006,"results":"164","hashOfConfig":"85"},{"size":11111,"mtime":1620206016195,"results":"165","hashOfConfig":"85"},{"size":601,"mtime":1617706800029,"results":"166","hashOfConfig":"85"},{"size":2514,"mtime":1617706800029,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1tu7uso",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"170"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"170"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"170"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"170"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"170"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\index.tsx",[],["342","343"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\App.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\history\\credationls-history.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\home.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signin.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\signup.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\pages-route.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\uni-requests\\university.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\signup-context\\uni-data-context.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\apis-caller.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-container.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\login-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\home-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\status-codes.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\urls.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\axios-creation.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\form-arrays.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-image.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-forms.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\signUpButton.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\user-requestes\\user.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signin\\forgotPassword.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx",["344"],"import '../../../styles/dynamic-content/dynamic-content-section.css';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\n\r\n// routes\r\nimport {\r\n\tbookEntryRoute,\r\n\tcretateTopics,\r\n\tdataEntryRoute,\r\n\tmanualEntryRoute,\r\n\tupdatematerialsRoute,\r\n\tuniMangerRoute,\r\n\tprofileRoute,\r\n\tupdateTopic,\r\n\tallTopicRes,\r\n\tupdateTopicRes,\r\n\taddResMethods,\r\n\tmaterialInfoRoute,\r\n\tnotFoundRoute,\r\n\tscheduleRoute,\r\n\tguidanceRoute\r\n} from '../../../constants/pages-route';\r\n\r\n// components\r\nimport DataEntryPage from '../../../pages/data-entry-page';\r\nimport AddByBookPage from '../../../pages/book-entry-page';\r\nimport AddManuallyPage from '../../../pages/manual-entry';\r\nimport UniManagerPage from '../../../pages/uni-manager-page';\r\nimport ViewerPage from '../../../pages/view-page';\r\nimport ProfilePage from '../../../pages/profile-page';\r\nimport MaterialInfoPage from '../../../pages/material-info-page';\r\nimport SchedulePage from '../../../pages/schedule-page';\r\nimport GuidancePage from '../../../pages/guidance';\r\nimport UpdateTopic from '../../../components/home/subpages/data-entry/update-topic'\r\nimport NotFoundPage from '../../../pages/not-found-page';\r\nimport ViewAllTopicRes from '../subpages/data-entry/view-all-res'\r\nimport UpdateRes from '../subpages/data-entry/update-res';\r\nimport { useContext, useEffect } from 'react';\r\nimport { DynamicContentContext } from '../../../contexts/home-context/dynamic-content-state-context';\r\n\r\nexport default function DynamicContentSection() {\r\n\tlet { clearSearchBarBtnRef } = useContext<{clearSearchBarBtnRef: React.RefObject<HTMLButtonElement>}>(DynamicContentContext);\r\n\tlet history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\thistory.listen(() => {\r\n\t\t\tconsole.log(\"history sends you his regards\");\r\n\t\t\tconsole.log(\"DCS-searchInputRef\", clearSearchBarBtnRef);\r\n\t\t\tclearSearchBarBtnRef.current?.click();\r\n\t\t})\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"dynamic-content-section\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={dataEntryRoute} exact component={DataEntryPage} />\r\n\t\t\t\t<Route path={bookEntryRoute} exact component={AddByBookPage} />\r\n\t\t\t\t<Route path={manualEntryRoute} exact component={AddManuallyPage} />\r\n\t\t\t\t<Route path={uniMangerRoute} exact component={UniManagerPage} />\r\n\t\t\t\t<Route path={updatematerialsRoute} exact component={ViewerPage} />\r\n\t\t\t\t<Route path={materialInfoRoute} exact component={ViewerPage} />\r\n\t\t\t\t<Route path={notFoundRoute} exact component={NotFoundPage} />\r\n\t\t\t\t<Route path={`${materialInfoRoute}/:matID`} exact component={MaterialInfoPage} />\r\n\t\t\t\t<Route path={cretateTopics} exact component={ViewerPage} />\r\n\t\t\t\t<Route path={profileRoute} exact component={ProfilePage} />\r\n\t\t\t\t<Route path={scheduleRoute} exact component={SchedulePage} />\r\n\t\t\t\t<Route path={`${addResMethods}/:matID/:topicID`} exact component={DataEntryPage} />\r\n\t\t\t\t<Route path={`${updateTopic}`} exact component={UpdateTopic} />\r\n\t\t\t\t<Route path={`${updateTopic}/:id/`} exact component={AddManuallyPage} />\r\n\t\t\t\t<Route path={`${manualEntryRoute}/:id`} exact component={AddManuallyPage} />\r\n\t\t\t\t<Route path={guidanceRoute} exact component={GuidancePage} />\r\n\t\t\t\t<Route path={`${allTopicRes}/:matID/:topicID`} exact component={ViewAllTopicRes} />\r\n\t\t\t\t<Route path={`${updateTopicRes}/:resType/:matID/:topicID/:resID`} exact component={UpdateRes} />\r\n\r\n\t\t\t\t{/*if no route matches  */}\r\n\t\t\t\t<Route component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\utilities\\alearts.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\local-storage-keys.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\messages.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-buttons.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\form-inputs.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\side-bar-section-cards.ts",["345"],"import { sideBarSectionInterface } from '../interfaces/side-bar/side-bar-section-interface';\r\n\r\n// icons\r\nimport homeIcon from '../assets/home/side-bar/home.svg';\r\nimport createIcon from '../assets/home/side-bar/create.svg';\r\nimport editIcon from '../assets/home/side-bar/edit.svg';\r\nimport createTopicIcon from '../assets/home/side-bar/create-topic.svg';\r\nimport infoIcon from '../assets/home/side-bar/info.svg';\r\nimport managerIcon from '../assets/home/side-bar/teamwork.svg';\r\nimport profileIcon from '../assets/home/side-bar/profile.svg';\r\nimport examsIcon from '../assets/home/side-bar/online-test.svg';\r\nimport rulesIcon from '../assets/home/side-bar/regulation.svg';\r\nimport settingsIcon from '../assets/home/side-bar/settings.svg';\r\nimport tableIcon from '../assets/home/side-bar/table.svg';\r\nimport feedbackIcon from '../assets/home/side-bar/feedback.svg';\r\nimport logOutIcon from '../assets/home/side-bar/logout.svg';\r\nimport guideIcon from '../assets/home/side-bar/guide.svg';\r\n\r\n// pages\r\nimport { cretateTopics, dataEntryRoute, scheduleRoute, updatematerialsRoute, uniMangerRoute, materialInfoRoute, singinPageRoute, notFoundRoute, profileRoute, guidanceRoute } from './pages-route';\r\n\r\nconst dataEntrySectionCards: sideBarSectionInterface = {\r\n\tsectionTitle: 'Data Entry',\r\n\tsectionCards: [\r\n\t\t{ cardName: 'Profile', routeTo: profileRoute, cardIcon: profileIcon },\r\n\t\t{ cardName: 'Create Material', routeTo: dataEntryRoute, cardIcon: createIcon },\r\n\t\t{ cardName: 'Update Materials', routeTo: updatematerialsRoute, cardIcon: editIcon },\r\n\t\t{ cardName: 'Create Topic', routeTo: cretateTopics, cardIcon: createTopicIcon },\r\n\t\t{ cardName: 'Materials info', routeTo: materialInfoRoute, cardIcon: infoIcon },\r\n\t\t{ cardName: 'Schedule', routeTo: scheduleRoute, cardIcon: tableIcon },\r\n\t\t{ cardName: 'Settings', routeTo: notFoundRoute, cardIcon: settingsIcon },\r\n\t\t{ cardName: 'Uni managers', routeTo: uniMangerRoute, cardIcon: managerIcon },\r\n\t\t{ cardName: 'Exams', routeTo: notFoundRoute, cardIcon: examsIcon },\r\n\t\t{ cardName: 'Facts & Rules', routeTo: notFoundRoute, cardIcon: rulesIcon },\r\n\t\t{ cardName: 'Feedback', routeTo: notFoundRoute, cardIcon: feedbackIcon },\r\n\t\t{ cardName: 'Guidance', routeTo: guidanceRoute, cardIcon: guideIcon }, \r\n\t\t{ cardName: 'Log out', routeTo: singinPageRoute, cardIcon: logOutIcon },\r\n\r\n\t]\r\n};\r\n\r\nexport { dataEntrySectionCards };\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\book-entry-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\manual-entry.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\material-info-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\profile-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\view-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\guidance.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\not-found-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-entry-section.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\schedule-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\uni-manager-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\logo.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\nav-bar\\search-area.tsx",["346","347","348","349","350","351"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx",["352"],"import { useState } from 'react';\r\nimport CardCreateor from '../../../../components/home/subpages/data-entry/add-manually';\r\nimport { match as matchType, useLocation } from 'react-router-dom';\r\nimport { addResMethods } from '../../../../constants/pages-route';\r\n\r\nexport default function UpdateTopic() {\r\n    let loc = useLocation();\r\n\r\n    let { materialID, topicID, name, photo, description }: any = loc.state;\r\n    const basicTopicRoute: string = `${addResMethods}/${materialID}/${topicID}`;\r\n    const [resRoute, setResRoute] = useState<string>(basicTopicRoute);\r\n\r\n    let inputs = [\"Topic Name\", \"Topic Image URL\"];\r\n    let descriptionInput = description;\r\n    let values = [name, photo];\r\n    let id = materialID;\r\n    let rate = 5;\r\n\r\n\r\n    return (\r\n        <div className=\"dynamic-subpage\">\r\n            <CardCreateor {...{ inputs, descriptionInput, values, localMaterialID: id, topicID, rate, resRoute, setResRoute }} />\r\n        </div>\r\n    );\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\view-all-res.tsx",["353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\update-res.tsx",["367","368","369","370","371","372","373","374","375","376"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport '../../../../styles/data-entry-styles/res/res-adders.css';\r\nimport pdfAnimation from '../../../../assets/data-entry-assets/pdf-animation.json';\r\nimport qAndA from '../../../../assets/data-entry-assets/Q-and-A.json';\r\nimport rulesAnimation from '../../../../assets/data-entry-assets/rules.json';\r\nimport usefulResAnimation from '../../../../assets/data-entry-assets/useful-resources.json';\r\nimport videoAnimatedIcon from '../../../../assets/data-entry-assets/video-animated-icon.json';\r\nimport defualtWebsiteImage from \"../../../../assets/data-entry-assets/website.webp\";\r\nimport DropZone from './drop-zone';\r\nimport lottie from 'lottie-web';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { updateRes } from '../../../../requestes/res-requests/res';\r\nimport { pdfsType, questionAndAnswerType, rulesType, usefulResType, videosType } from '../../../../constants/res-types';\r\nimport { showLoading } from '../../../../utilities/alearts';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport youtubeImage from \"../../../../assets/data-entry-assets/youtube.jpg\";\r\nimport axios from 'axios';\r\nimport { match as infoPageMatch, useLocation } from 'react-router';\r\n\r\n\r\nexport default function UpdateRes({ match }: { match: infoPageMatch<{ resType: string; matID: string; topicID: string; resID: string }> }) {\r\n    let loc = useLocation();\r\n    let { ign1, ign2, ign3, name, photo, description, info }: any = loc.state;\r\n    let { resType, matID, topicID, resID } = match.params;\r\n\r\n    switch (info.resType) {\r\n        case \"PDFs\":\r\n            return <PDF matID={matID} topicID={topicID} resID={resID} fileName={info.fileName || name} bookRefrence={info.bookRefrence} />\r\n        // break;\r\n        case \"Videos\":\r\n            return <Video matID={matID} topicID={topicID} resID={resID} videoName={info.videoName} VideoLink={info.link} videoImgURl={info.videoImage} />\r\n            break;\r\n        case \"Q&A\":\r\n            return <QA matID={matID} topicID={topicID} resID={resID} question={info.question} answer={info.answer} QName={info.QName} isReadOnly={info.readOnly || false} />\r\n            break;\r\n        case \"Resources\":\r\n            return <UsefulRes matID={matID} topicID={topicID} resID={resID} linkName={info.link} linkImgURl={info.websiteImage} />\r\n            break;\r\n        case \"Laws\":\r\n            return <Rules matID={matID} topicID={topicID} resID={resID} lawName={info.lawName} lawConent={info.lawConent} lawExample={info.lawExample} isReadOnly={info.readOnly || false} />\r\n            break;\r\n        default:\r\n            console.log(\"Something worng have happend\");\r\n            return <p>Error Talk with Hamza</p>\r\n    }\r\n}\r\n\r\nfunction PDF({ matID, topicID, resID, fileName, bookRefrence }: any) {\r\n    // fileName\r\n    // bookRefrence\r\n    const results: string[] = ['', '', ''];\r\n    const bookLinkInput = useRef<HTMLInputElement>(null);\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const pdfNameInput = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: pdfAnimation\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n\r\n    const submitHandler = async () => {\r\n        const pdfName: string = pdfNameInput.current!.value;\r\n        const pdfLink: string = bookLinkInput.current!.value;\r\n        if (pdfName === '' || pdfLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: pdfsType,\r\n                fileName: pdfName,\r\n                bookRefrence: pdfLink\r\n            };\r\n\r\n\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input type=\"text\" className=\"res-input\" placeholder=\"PDF Name\" ref={pdfNameInput} defaultValue={fileName || \"temp name\"} onChange={e => { results[0] = e.target.value }} />\r\n            <input type=\"url\" className=\"res-input\" id=\"pdf-link\" placeholder=\"PDF link\" ref={bookLinkInput} defaultValue={bookRefrence} onChange={e => { results[1] = e.target.value }} />\r\n            <DropZone {...{ bookLinkInput, results, pdfNameInput }} />\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// TODO add loading after when the user adds the link\r\nfunction Video({ matID, topicID, resID, videoName, VideoLink, videoImgURl }: any) {\r\n    // link: \"youtube-link-test\"\r\n    // resType: \"Videos\"\r\n    // rate: 0\r\n    // videoImage: \"/static/media/youtube.2044ed05.jpg\"\r\n    // videoName: \"???????\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const videoRef = useRef<HTMLInputElement>(null);\r\n    const [name, setName] = useState<string>(videoName);\r\n    const [imgURl, setImgURL] = useState<string>(videoImgURl);\r\n    const submitHandler = async () => {\r\n        const VideoLink: string = videoRef.current!.value;\r\n        if (VideoLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: videosType,\r\n                videoName: name, //TODO get the title of the video some how\r\n                link: VideoLink,\r\n                videoImage: imgURl\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n\r\n    const changeVideCard = async () => {\r\n        const url: string = videoRef.current!.value || '';\r\n        const { data } = await axios.get(`https://api.linkpreview.net/?key=d71742f9c4c457e68276f6288fdfc4d0&q=${url}`);\r\n        const { image, title } = data;\r\n        if (image) {\r\n            setImgURL(image);\r\n            setName(title);\r\n        } else {\r\n            setImgURL(youtubeImage);\r\n            setName('???????');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: videoAnimatedIcon\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input\r\n                type=\"text\"\r\n                className=\"res-input\"\r\n                placeholder=\"video link\"\r\n                defaultValue={VideoLink}\r\n                ref={videoRef}\r\n                onChange={changeVideCard}\r\n                onBlur={changeVideCard}\r\n            />\r\n            <div className=\"video-previewer\">\r\n                <img src={imgURl} alt=\"youtube\" />\r\n                <div className=\"name-wrapper\">\r\n                    <div className=\"name\">{name}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UsefulRes({ matID, topicID, resID, linkName, linkImgURl }: any) {\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const urlRef = useRef<HTMLInputElement>(null);\r\n    const [name, setName] = useState<string>(linkName);\r\n    const [imgURl, setImgURL] = useState<string>(linkImgURl);\r\n\r\n    const changeVideCard = async () => {\r\n        const url: string = urlRef.current!.value || '';\r\n        const { data } = await axios.get(`https://api.linkpreview.net/?key=d71742f9c4c457e68276f6288fdfc4d0&q=${url}`);\r\n        const { image, title } = data;\r\n        if (image) {\r\n            setImgURL(image);\r\n            setName(title);\r\n        } else {\r\n            setImgURL(defualtWebsiteImage);\r\n            setName('???????');\r\n        }\r\n    };\r\n\r\n    const submitHandler = async () => {\r\n        const websiteLink: string = urlRef.current!.value;\r\n        if (websiteLink === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: usefulResType,\r\n                websiteName: name, //TODO get the title of the video some how\r\n                link: websiteLink,\r\n                websiteImage: imgURl\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        lottie.loadAnimation({\r\n            container: divRef.current!,\r\n            autoplay: true,\r\n            renderer: 'svg',\r\n            loop: true,\r\n            animationData: usefulResAnimation\r\n        }).setSpeed(0.8);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            <input\r\n                type=\"text\"\r\n                className=\"res-input\"\r\n                placeholder=\"Resource link\"\r\n                defaultValue={linkName}\r\n                ref={urlRef}\r\n                onChange={changeVideCard}\r\n                onBlur={changeVideCard}\r\n            />\r\n            <div className=\"video-previewer\">\r\n                <img src={imgURl} alt=\"youtube\" />\r\n                <div className=\"name-wrapper\">\r\n                    <div className=\"name\">{name}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"res-submit-btn\" onClick={submitHandler}>\r\n                submit\r\n\t\t\t</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction QA({ matID, topicID, resID, question, answer, QName, isReadOnly = false }: any) {\r\n    let [selectable, setSelectable] = useState(false);\r\n    let [answerTextAreaClasses, setAnswerTextAreaClasses] = useState(\"res-text-area blurry-text\")\r\n\r\n    const divRef = useRef<HTMLInputElement>(null);\r\n    const qNameRef = useRef<HTMLInputElement>(null);\r\n    const questionRef = useRef<HTMLTextAreaElement>(null);\r\n    const answerRef = useRef<HTMLTextAreaElement>(null);\r\n    const submitHandler = async () => {\r\n        const question: string = questionRef.current!.value;\r\n        const answer: string = answerRef.current!.value;\r\n        const QName: string = qNameRef.current!.value;\r\n        if (question === '' || answer === '' || QName === '') Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: questionAndAnswerType,\r\n                question,\r\n                answer,\r\n                QName,\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: qAndA\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n\r\n    let showAnswer = () => {\r\n        setSelectable(true);\r\n        setAnswerTextAreaClasses(\"res-text-area show-text\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            {\r\n                isReadOnly ?\r\n                    <>\r\n                        <input className=\"q-name-input\" defaultValue={QName} type=\"text\" ref={qNameRef} placeholder=\"Question Name\" readOnly />\r\n                        <textarea className=\"res-text-area\" defaultValue={question} placeholder=\"Question\" ref={questionRef} readOnly />\r\n                        <textarea onMouseDown={() => selectable} onSelect={() => selectable} className={answerTextAreaClasses} defaultValue={answer} placeholder=\"Answer\" ref={answerRef} readOnly />\r\n                        <button className=\"res-submit-btn\" onClick={showAnswer}>Show Answer</button>\r\n                    </>\r\n                    : <>\r\n                        <input className=\"q-name-input\" defaultValue={QName} type=\"text\" ref={qNameRef} placeholder=\"Question Name\" />\r\n                        <textarea className=\"res-text-area\" defaultValue={question} placeholder=\"Question\" ref={questionRef} />\r\n                        <textarea className=\"res-text-area\" defaultValue={answer} placeholder=\"Answer\" ref={answerRef} />\r\n                        <div className=\"res-submit-btn\" onClick={submitHandler}>submit</div>\r\n                    </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Rules({ matID, topicID, resID, lawName, lawConent, lawExample, isReadOnly = false }: any) {\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n    const lawNameRef = useRef<HTMLInputElement>(null);\r\n    const lawConentRef = useRef<HTMLTextAreaElement>(null);\r\n    const lawExampleRef = useRef<HTMLTextAreaElement>(null);\r\n    const submitHandler = async () => {\r\n        const lawName: string = lawNameRef.current!.value;\r\n        const lawConent: string = lawConentRef.current!.value;\r\n        const lawExample: string = lawExampleRef.current!.value;\r\n        if (lawName === '' || lawConent === '' || lawExample === '')\r\n            Swal.fire('Ops!', 'Sorry but all fields must not be empty', 'error');\r\n        else {\r\n            const requestParams = {\r\n                materialID: matID,\r\n                topicID: topicID,\r\n                resorseID: resID\r\n            };\r\n            const requestBody = {\r\n                resType: rulesType,\r\n                lawName,\r\n                lawConent,\r\n                lawExample\r\n            };\r\n            showLoading(0);\r\n            const { status, data } = await APIsCaller({ api: updateRes, requestParams, requestBody });\r\n            console.log(status, data);\r\n            if (status === OK || status === CREATED) Swal.fire('Congrats', data.message, 'success');\r\n            else Swal.fire('Ops!', data.message, 'error');\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        lottie\r\n            .loadAnimation({\r\n                container: divRef.current!,\r\n                autoplay: true,\r\n                renderer: 'svg',\r\n                loop: true,\r\n                animationData: rulesAnimation\r\n            })\r\n            .setSpeed(0.8);\r\n    }, []);\r\n    return (\r\n        <div className=\"adder\">\r\n            <div className=\"res-animation-container\" ref={divRef} />\r\n            {\r\n                isReadOnly ?\r\n                    <>\r\n                        <input type=\"text\" className=\"res-input\" placeholder=\"Law name\" defaultValue={lawName} ref={lawNameRef} readOnly />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Law content\" defaultValue={lawConent} ref={lawConentRef} readOnly />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Example\" defaultValue={lawExample} ref={lawExampleRef} readOnly />\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <input type=\"text\" className=\"res-input\" placeholder=\"Law name\" defaultValue={lawName} ref={lawNameRef} />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Law content\" defaultValue={lawConent} ref={lawConentRef} />\r\n                        <textarea className=\"res-text-area\" placeholder=\"Example\" defaultValue={lawExample} ref={lawExampleRef} />\r\n                        <div className=\"res-submit-btn\" onClick={submitHandler}> submit </div>\r\n                    </>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\pages\\data-entry-page.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\validation\\signup-validation.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\signup\\signup-dropdown.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\res-types.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx",["377","378"],"import React, { useContext, useEffect, useRef } from 'react';\r\nimport '../../../../styles/data-entry-styles/manual/manual-entry.css';\r\nimport lottie from 'lottie-web';\r\nimport floattingLaptop from '../../../../assets/data-entry-assets/floatting-laptop.json';\r\nimport emptySVG from '../../../../assets/data-entry-assets/empty.svg';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { createNewMaerial, createTopic, updateMaterial, updateTopic } from '../../../../requestes/material-requests/mateirla';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport { DynamicContentContext } from '../../../../contexts/home-context/dynamic-content-state-context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype cardCreateorInterface = {\r\n\tinputs: string[];\r\n\tdescriptionInput?: string;\r\n\tvalues: string[];\r\n\tlocalMaterialID?: string;\r\n\trate?: number;\r\n\tresRoute: string;\r\n\ttopicID?: string;\r\n\tResID?: string;\r\n\tsetResRoute: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function CardCreateor({ inputs, descriptionInput, values, localMaterialID, topicID, ResID, rate, resRoute, setResRoute }: cardCreateorInterface) {\r\n\tconst inputLottie = useRef(null);\r\n\tconst materialName = useRef<HTMLPreElement>(null);\r\n\tconst previewer = useRef<HTMLImageElement>(null);\r\n\tconst emptyName: string = '???? ????';\r\n\tconst results: string[] = (values.length === inputs.length) ? values : new Array(inputs.length).fill('');\r\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\tconst addResButtonRef = useRef<HTMLDivElement>(null);\r\n\tconst { materialsTable, setMaterialsTable } = useContext(DynamicContentContext);\r\n\r\n\tuseEffect (() => {\r\n\t\tif(topicID) {\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlottie.loadAnimation({\r\n\t\t\tcontainer: inputLottie.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: floattingLaptop\r\n\t\t});\r\n\t}, [materialsTable, resRoute]);\r\n\r\n\tconst inputHandler = (e: any, index: number) => {\r\n\t\tconst value: string = e.target.value || '';\r\n\t\tif (index === 0) materialName.current!.innerHTML = value !== '' ? value : emptyName;\r\n\t\telse if (index === 1) {\r\n\t\t\tpreviewer.current!.src = (value !== '' ? value : emptySVG)\r\n\t\t}\r\n\t\tresults[index] = value;\r\n\t};\r\n\r\n\tconst submitHandler = () => {\r\n\t\tlet emptyIndex: number = -1;\r\n\t\tresults.forEach((result, index) => (result === '' || !result) ? emptyIndex = index : '')\r\n\t\tif (emptyIndex !== -1) Swal.fire('Ops!', `Sorry but the \"${inputs[emptyIndex]}\" is required`, 'error');\r\n\t\telse {\r\n\t\t\tif(ResID != undefined) {}\r\n\t\t\telse if (topicID != undefined) { updateTopicDocument(); }\r\n\t\t\telse if (inputs[0].includes('Topic')) submitTopic();\r\n\t\t\telse if (values.length !== 0) updateDocument();\r\n\t\t\telse if (descriptionInput) submitMaterial();\r\n\t\t\t// to add the topic later\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody: any = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: rate\r\n\t\t}\r\n\t\tconst requestParams = {\r\n\t\t\tmaterialID: localMaterialID!\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: updateMaterial, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === OK) {\r\n\t\t\tupdateMaterialLocally(localMaterialID!, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitMaterial = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: 5,\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: createNewMaerial, requestBody });\r\n\t\tconst { message, materialID } = data;\r\n\r\n\t\tif (status === CREATED) {\r\n\t\t\tupdateMaterialLocally(materialID, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', message || 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitTopic = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID }\r\n\t\tconst { data, status } = await APIsCaller({ api: createTopic, requestBody, requestParams });\r\n\t\tconst { message, topicID } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\tconsole.log(addResButtonRef.current)\r\n\t\t\tsetResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\tawait Swal.fire('Thanks', message, 'success');\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateTopicDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID, topicID: topicID }\r\n\t\tconst { data, status } = await APIsCaller({ api: updateTopic, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\t// setResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\t// addResButtonRef.current!.style.display = 'flex';\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateMaterialLocally = (matID: string, newMat: any) => {\r\n\t\tconst newData = {\r\n\t\t\t...materialsTable,\r\n\t\t\t[matID]: newMat\r\n\t\t}\r\n\t\tsetMaterialsTable(() => newData);\r\n\t}\r\n\r\n\tconst MaterialInputs = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"inputs-container\">\r\n\t\t\t\t{inputs.map((hint, index) => {\r\n\t\t\t\t\tif (values!.length > index) return <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} defaultValue={values[index]} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t\treturn <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t})}\r\n\t\t\t\t{\r\n\t\t\t\t\tdescriptionInput ? <textarea placeholder={descriptionInput} ref={textAreaRef}\r\n\t\t\t\t\t\tdefaultValue={(localMaterialID) ? materialsTable[localMaterialID].materialDesc : ''}\r\n\t\t\t\t\t\tonFocus={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflowY = 'scroll';\r\n\t\t\t\t\t\t}} onBlur={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflow = 'hidden';\r\n\t\t\t\t\t\t}} /> : <div />\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"lottie-input-container\" ref={inputLottie} />\r\n\t\t\t\t<div className=\"submit-material-button\" onClick={submitHandler}>\r\n\t\t\t\t\t{(values.length !== 0) ? \"Update\" : \"Submit\"}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Materialpreviewer = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"material-previewer-container\">\r\n\t\t\t\t<div className=\"material-previewer\" >\r\n\t\t\t\t\t<img src={(values.length >= 2) ? values[1] : emptySVG} alt=\"card-img\" ref={previewer} />\r\n\t\t\t\t\t<pre className=\"material-name-container\" ref={materialName}>\r\n\t\t\t\t\t\t{(values.length >= 2) ? values[0] : emptyName}\r\n\t\t\t\t\t</pre>\r\n\t\t\t\t</div>\r\n\t\t\t\t{addResButton()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\t// TODO if I recived the topic ID then the button should be display flex by defualt\r\n\tconst addResButton = () => {\r\n\t\treturn <NavLink to={resRoute}>\r\n\t\t\t<div className=\"add-res-button\" ref={addResButtonRef}>Add resources</div>\r\n\t\t</NavLink>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"manual-entry-method\">\r\n\t\t\t<MaterialInputs />\r\n\t\t\t<Materialpreviewer />\r\n\t\t</div>\r\n\t);\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\res-requests\\res.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"import { useContext, useEffect, useRef, useState } from 'react';\r\nimport { match as infoPageMatch } from 'react-router-dom';\r\nimport MaterialCard from \"./../viewer/material-card\";\r\nimport TopicCard from \"./../viewer/topic-card\";\r\nimport { APIsCaller } from './../../../../requestes/apis-caller'\r\nimport { deleteTopic, getAllTopics } from './../../../../requestes/material-requests/mateirla';\r\nimport { DynamicContentContext } from './../../../../contexts/home-context/dynamic-content-state-context';\r\nimport loadMoreIcon from '../../../../assets/material-info-assets/load-more-icon.json';\r\nimport loadingIcon from '../../../../assets/material-info-assets/loading_icon.json';\r\nimport lottie, { AnimationItem } from 'lottie-web';\r\nimport { allTopicRes, updateTopic } from '../../../../constants/pages-route';\r\n\r\n\r\nimport './../../../../styles/materials-info/materials-info.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function MaterialInfo({ match }: { match: infoPageMatch<{ matID: string }> }) {\r\n\tconst materialID = match.params.matID;\r\n\tconst TOPIC_SEGEMENT_LENGTH = 11; // how many topic in each page (initial viwed topics count and how many to add each load more click).\r\n\r\n\tconst { materialsTable, setDtaToSearchIn, searchResult } = useContext(DynamicContentContext);\r\n\r\n\tconst [allTopics, setAllTopics] = useState([]);\r\n\tconst [topicsToDisplay, setTopicsToDisplay] = useState<any[]>([]);\r\n\tconst [nextTopicsIndex, setNextTopicsIndex] = useState(0);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [topicsFound, setTopicsFound] = useState(true);\r\n\tconst [maxNumToDisplay, setMaxNumToDisplay] = useState(-1)\r\n\r\n\tconst loadMoreDivRef = useRef(null);\r\n\tconst loadingDivRef = useRef(null);\r\n\r\n\tlet material = materialsTable[materialID];\r\n\tlet [loadMoreAnimation, setLoadMoreAnimation] = useState<AnimationItem>();\r\n\tlet [loadingAnimation, setLoadingAnimation] = useState<AnimationItem>();\r\n\r\n\t// helllllllllllllllllllllllllllllo, plz rename\r\n\tlet addNewSetOfTopicsToDisplay = (allTopics: any, length: number = TOPIC_SEGEMENT_LENGTH) => {\r\n\t\tconsole.log(\"addnewItems\", nextTopicsIndex + length);\r\n\r\n\t\tlet newTopics: any[] = [];\r\n\t\t// loop for either what the pagenation allows detrmianed by the value of [nextTopicsIndex + length]\r\n\t\t// or for the length of the data you can show detrminded by the value of [maxNumToDisplay]\r\n\t\t// maxNumToDisplay: can take the value of allTopics.length if there is no search operation is done(empty search bar)\r\n\t\t// otherwise it will take the value of the length of the search result length.\r\n\t\tfor (var i = 0; newTopics.length < (nextTopicsIndex + length) && newTopics.length < maxNumToDisplay; i++) {\r\n\t\t\tif (searchResult && searchResult.includes(Object.entries(allTopics)[i][0])) {\r\n\t\t\t\tnewTopics.push(Object.entries(allTopics)[i][1]);\r\n\t\t\t} else if (!searchResult) {\r\n\t\t\t\tnewTopics.push(Object.entries(allTopics)[i][1])\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetTopicsToDisplay(newTopics);\r\n\t\tsetNextTopicsIndex(nextTopicsIndex + length);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// I think this is a bit overkill but why not :).\r\n\t\t// this is to retrieve suitable[topics for the current opened material] topics from local storage.\r\n\t\t// if the retrived topics are valid then update \"allTopics\" with its value.\r\n\t\t// else send a request to retrieve them from the database.\r\n\t\tif (allTopics.length == 0 || allTopics == undefined) {\r\n\t\t\t// get topics form localStorage\r\n\t\t\tlet res = JSON.parse(localStorage.getItem('currentTopics') as any) || [];\r\n\t\t\t// is there is any data stored in localStorage [checked by res.length==0]\r\n\t\t\t// see if it belongs to the current opend data by comperaint materialId.\r\n\t\t\tif (res.length == 0 || res == undefined || res.id != materialID) {\r\n\t\t\t\t// no data or incorrecnt strored, send request.\r\n\t\t\t\tconst getData = async () => {\r\n\t\t\t\t\tconst requestParams = { materialID: materialID };\r\n\t\t\t\t\tconst { data: topicsTable } = await APIsCaller({ api: getAllTopics, requestParams });\r\n\t\t\t\t\tif (topicsTable) setAllTopics(topicsTable.topicsTable);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t};\r\n\t\t\t\tgetData();\r\n\t\t\t} else {\r\n\t\t\t\t// correct data stored.\r\n\t\t\t\tsetAllTopics(res.topics);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// loading animation for the loading animation.\r\n\t\t// this comment is intended to be confusing :);\r\n\t\tsetLoadingAnimation(lottie.loadAnimation({\r\n\t\t\tcontainer: loadingDivRef.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: loadingIcon,\r\n\t\t}));\r\n\r\n\t\t// delete currentTopics from localstorage, when component is unmounted. \r\n\t\treturn () => {\r\n\t\t\tlocalStorage.removeItem('currentTopics');\r\n\t\t}\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// this effect is entered twice when refreshing the page.\r\n\t\t// once on the value of allTopics is initilized to [].\r\n\t\t// the second when the other useEffect populates allTopics with fetched data\r\n\t\t// so this if statment servers as a gaurd for that.\r\n\t\t// note: if we found better way to handle this I'll change it, but for now i think it's working.\r\n\t\tif (allTopics.length != 0) {\r\n\t\t\t// store current fetched topics for if page is refresed.\r\n\t\t\tlocalStorage.setItem('currentTopics', JSON.stringify({ id: materialID, topics: allTopics }) as any)\r\n\r\n\t\t\t// guess what this line of code does, and you will win the \"I can read code\" grand prize.\r\n\t\t\tsetTopicsFound((Object.keys(allTopics).length != 0) ? true : false);\r\n\r\n\t\t\t// guess what this line of code does, and you will win the \"I can read code\" grand prize.\r\n\t\t\tsetMaxNumToDisplay(Object.keys(allTopics).length);\r\n\r\n\t\t\t// set search bar context.\r\n\t\t\tsetDtaToSearchIn(Object.entries(allTopics).map((item: any) => {\r\n\t\t\t\treturn { key: item[1].topicName.replace(' ', ''), value: item[0] }\r\n\t\t\t}));\r\n\t\t}\r\n\t}, [allTopics]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// loading animation for the loading more animation.\r\n\t\tsetLoadMoreAnimation(lottie.loadAnimation({\r\n\t\t\tcontainer: loadMoreDivRef.current!,\r\n\t\t\tautoplay: false,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: loadMoreIcon,\r\n\t\t}));\r\n\t}, [loadMoreDivRef.current])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allTopics.length != 0) {\r\n\t\t\tif (searchResult != undefined) {\r\n\t\t\t\tsetMaxNumToDisplay(() => searchResult.length);\r\n\t\t\t} else {\r\n\t\t\t\tsetNextTopicsIndex(0);\r\n\t\t\t\tsetMaxNumToDisplay(() => Object.entries(allTopics).length);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [searchResult])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allTopics.length != 0) {\r\n\t\t\taddNewSetOfTopicsToDisplay(allTopics);\r\n\t\t} else {\r\n\t\t\tsetNextTopicsIndex(0);\r\n\t\t}\r\n\t}, [maxNumToDisplay])\r\n\r\n\tlet deleteTopicFun = async (cardID: any) => {\r\n\t\tconst requestParams = { materialID: materialID, topicID: cardID };\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Are you sure?',\r\n\t\t\ttext: \"You won't be able to revert this!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#d33',\r\n\t\t\tcancelButtonColor: '#3085d6',\r\n\t\t\tconfirmButtonText: 'Yes, delete it!',\r\n\t\t\tshowLoaderOnConfirm: true,\r\n\t\t}).then(async (result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: \"Deleting Topic\",\r\n\t\t\t\t\ttext: \"Please Wait...\",\r\n\t\t\t\t\tdidOpen: async () => {\r\n\t\t\t\t\t\tSwal.showLoading();\r\n\t\t\t\t\t\tlet res = await APIsCaller({ api: deleteTopic, requestParams });\r\n\t\t\t\t\t\tSwal.hideLoading();\r\n\t\t\t\t\t\tremoveFromAllTopics(cardID);\r\n\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t// after deleting completed\r\n\t\t\t\t\t\t\tSwal.fire(\r\n\t\t\t\t\t\t\t\t'Deleted!',\r\n\t\t\t\t\t\t\t\tres.data.message,\r\n\t\t\t\t\t\t\t\t'success'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\t\t\t\ttitle: 'Oops...',\r\n\t\t\t\t\t\t\t\ttext: 'Something went wrong!',\r\n\t\t\t\t\t\t\t\tfooter: '<a href>Please Try Agian</a>'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// \r\n\tlet removeFromAllTopics = (topicID: any) => {\r\n\t\tdelete allTopics[topicID];\r\n\t\tsetAllTopics(() => allTopics);\r\n\t\tlocalStorage.setItem('currentTopics', JSON.stringify({ id: materialID, topics: allTopics }) as any)\r\n\t\taddNewSetOfTopicsToDisplay(allTopics, nextTopicsIndex);\r\n\t}\r\n\r\n\tlet editTopicFun = (history: any, cardID: any, cardTitle: any, cardPhoto: any, topicDes: any) => {\r\n\t\thistory.push(updateTopic, { materialID: materialID, topicID: cardID, name: cardTitle, photo: cardPhoto, description: topicDes })\r\n\t}\r\n\r\n\tlet bodyTopicFun = (history: any, cardID: any, cardTitle: any, cardPhoto: any, cardRate: any, topicDes: any) => {\r\n\t\thistory.push(`${allTopicRes}/${materialID}/${cardID}`, { title: cardTitle, photo: cardPhoto, rate: cardRate, description: topicDes })\r\n\t}\r\n\r\n\tlet onClickHandlers = {\r\n\t\tdelete: deleteTopicFun,\r\n\t\tedit: editTopicFun,\r\n\t\tbody: bodyTopicFun\r\n\t}\r\n\r\n\tlet allCards = () => {\r\n\t\treturn (\r\n\t\t\t(searchResult?.length !== 0 && topicsFound) ?\r\n\t\t\t\ttopicsToDisplay.map((topic: any, index) => {\r\n\t\t\t\t\treturn <TopicCard key={index} IDs\r\n\t\t\t\t\t\tcardID={Object.keys(allTopics)[index]}\r\n\t\t\t\t\t\tcardTitle={topic.topicName || material.materialName}\r\n\t\t\t\t\t\tcardPhoto={topic.topicPhoto || material.materialPhoto}\r\n\t\t\t\t\t\tcardRate={topic.topicRate || material.totalRate}\r\n\t\t\t\t\t\tdescription={topic.description || material.materialDesc || \"No Description\"}\r\n\t\t\t\t\t\tonClickHandlers={onClickHandlers}\r\n\t\t\t\t\t\trouteTo={allTopicRes} />\r\n\t\t\t\t})\r\n\t\t\t\t: <p>No Topics Found</p>\r\n\t\t)\r\n\t}\r\n\r\n\t// disblay waiting for conext result\r\n\t// show spining circle, a moneky eating a banana or a cat photo anything.\r\n\tif (!material) {\r\n\t\t// show material not found or something.\r\n\t\treturn (\r\n\t\t\t<p>\r\n\t\t\t\tMaterial Not Found :)\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"materials-info-container\">\r\n\t\t\t<div id=\"material-card\">\r\n\t\t\t\t<MaterialCard cardTitle={material.materialName} cardPhoto={material.materialPhoto} cardRate={material.totalRate} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"desc\">\r\n\t\t\t\t<p id=\"desc-title\">Description: </p>\r\n\t\t\t\t<p id=\"desc-text\">{material.materialDesc || \"No Description\"}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"topics-section\">\r\n\t\t\t\t<div id=\"topics\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(loading) ?\r\n\t\t\t\t\t\t\t<div className=\"loading-div\" ref={loadingDivRef}></div>\r\n\t\t\t\t\t\t\t: allCards()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(nextTopicsIndex < maxNumToDisplay) ?\r\n\t\t\t\t\t\t\t(<div ref={loadMoreDivRef} className=\"load-more-card\" onClick={() => addNewSetOfTopicsToDisplay(allTopics)} onMouseEnter={() => { loadMoreAnimation!.play() }} onMouseLeave={() => { loadMoreAnimation!.stop() }}>\r\n\t\t\t\t\t\t\t\t{/* not the best way but it works */}\r\n\t\t\t\t\t\t\t\t<p>Load More</p>\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\side-bar\\side-bar-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\res-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\404\\404-componant.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx",["395","396"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx",["397","398","399","400","401","402"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\requestes\\material-requests\\mateirla.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\constants\\action-cods.ts",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx",["403"],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx",["404"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport lottie from \"lottie-web\";\r\nimport Swal from \"sweetalert2\";\r\nimport uniManagerPic from \"../../../../assets/home/uni-manager/uni-manager.json\";\r\nimport DeleteUni from \"./delete-uni\";\r\ninterface SelectProtected {\r\n  readonly wrapperElement: HTMLDivElement;\r\n}\r\n\r\ntype uniNames = {\r\n  unisDataList: any;\r\n  setUnisDataList: any;\r\n  setLocations: any;\r\n  setMajors: any;\r\n  uniName: string;\r\n  setUniName: any;\r\n  uniID: string;\r\n  setUniID: any;\r\n  unisNames: string[];\r\n  setUnisNames: any;\r\n};\r\n\r\nexport default function UnisNames({\r\n  unisDataList,\r\n  setUnisDataList,\r\n  setLocations,\r\n  setMajors,\r\n  uniName,\r\n  setUniName,\r\n  uniID,\r\n  setUniID,\r\n  unisNames,\r\n  setUnisNames,\r\n}: uniNames) {\r\n  const [display, setDisplay] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // let unisNamess: string[] = unisDataList.map(({ doc }: any) => doc.name);\r\n  // const [unisNames, setUnisNames] = useState(unisNamess || []);\r\n\r\n  let index = 0;\r\n  const animated: any = useRef(null);\r\n  const [flag, setFlag] = useState(true); // to clear data (locations and majors) depending on the name\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const setUniDex = (uni: string) => { // set the uni index to fill data locations and majors if founds\r\n    if (unisNames.includes(uni)) {\r\n      // setSearch(uni);\r\n      // setDisplay(false);\r\n      const index = unisNames.indexOf(uni);\r\n      const item = unisDataList[index];\r\n      const { id } = item;\r\n      const { doc } = item;\r\n      const { name } = doc;\r\n      const { locations } = doc;\r\n      const { fields } = doc;\r\n      setLocations(locations);\r\n      setMajors(fields);\r\n      setUniName(name);\r\n      setUniID(id);\r\n      setFlag(true);\r\n    } else {\r\n      setUniName(uni);\r\n      setUniID(null);\r\n      if (flag === true) {\r\n        const empty: any = [];\r\n        setLocations(empty);\r\n        setMajors(empty);\r\n        setFlag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeUniName = async (oldName: string) => {\r\n    let newName = oldName;\r\n    Swal.fire({\r\n      title: \"change university name\",\r\n      input: \"text\",\r\n      inputValue: oldName,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: true,\r\n      allowEnterKey: true,\r\n      confirmButtonText: \"edit\",\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (result) => {\r\n        if (result) {\r\n          if (unisNames.includes(result)) {\r\n            Swal.showValidationMessage(\"this name already exists\");\r\n          } else return;\r\n        } else {\r\n          Swal.showValidationMessage(\"please enter a name\");\r\n        }\r\n      },\r\n    }).then((result: any) => {\r\n      newName = result.value;\r\n      if (result.isConfirmed) {\r\n        if (newName === \"\") {\r\n        }\r\n        if (newName !== null && newName !== \"\") {\r\n          const temp = [];\r\n          for (let i = 0; i < unisNames.length; i++) {\r\n            if (unisNames[i] === oldName) temp[i] = newName;\r\n            else temp[i] = unisNames[i];\r\n          }\r\n          setUnisNames(temp);\r\n          setSearch(newName);\r\n          setUniName(newName);\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: animated.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: uniManagerPic,\r\n    });\r\n\r\n    if (unisNames[0].length > 0) {\r\n      const temp = unisNames[0];\r\n      setUniDex(temp);\r\n      setSearch(temp);\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutSide);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutSide);\r\n    };\r\n  }, []);\r\n\r\n  const selectProtected: SelectProtected = {\r\n    wrapperElement: document.createElement(\"div\"),\r\n  };\r\n  const wrapperRef = useRef(selectProtected.wrapperElement);\r\n\r\n  const handleClickOutSide = (e: any) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(e.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uni-names-div \">\r\n      <label htmlFor=\"uni-name-input\" className=\"uni-name-label label\">\r\n        University name\r\n      </label>\r\n      <input\r\n        id=\"auto\"\r\n        className=\"auto-input input\"\r\n        onClick={() => setDisplay(true)}\r\n        value={search}\r\n        autoComplete=\"off\"\r\n        onChange={(event) => setSearch(event.target.value)}\r\n        onBlur={(event) => setUniDex(search)}\r\n      ></input>\r\n      {display && (\r\n        <div ref={wrapperRef} className=\"autoContainer\">\r\n          {unisNames\r\n            .filter((uniName: string) => uniName.indexOf(search) > -1)\r\n            .map((uniName: string) => {\r\n              return (\r\n                <div\r\n                  onClick={() => {\r\n                    setSearch(() => uniName);\r\n                    setUniDex(uniName);\r\n                    setDisplay(false);\r\n                  }}\r\n                  className=\"option\"\r\n                  key={index++}\r\n                >\r\n                  <span className=\"uni-name-option\">{uniName}</span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n      <div className=\"change-uni-name-div\">\r\n        <button\r\n          className=\"change-uni-name-btn\"\r\n          onClick={() => changeUniName(search)}\r\n        >\r\n          change name\r\n        </button>\r\n      </div>\r\n      <DeleteUni\r\n        {...{\r\n          unisDataList,\r\n          setUnisDataList,\r\n          unisNames,\r\n          setUnisNames,\r\n          uniID,\r\n          uniName,\r\n          setUniDex,\r\n          setSearch,\r\n        }}\r\n      />\r\n      <div className=\"animated\" ref={animated}></div>\r\n    </div>\r\n  );\r\n}\r\n","F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx",[],"F:\\Uni_Mat\\metials-metadata-viweing-page\\uni-materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx",[],{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":50,"column":5,"nodeType":"411","endLine":50,"endColumn":7,"suggestions":"412"},{"ruleId":"413","severity":1,"message":"414","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":25,"column":20,"nodeType":"419","messageId":"420","endLine":25,"endColumn":22},{"ruleId":"409","severity":1,"message":"421","line":37,"column":5,"nodeType":"411","endLine":37,"endColumn":17,"suggestions":"422"},{"ruleId":"409","severity":1,"message":"423","line":47,"column":5,"nodeType":"411","endLine":47,"endColumn":32,"suggestions":"424"},{"ruleId":"409","severity":1,"message":"425","line":51,"column":5,"nodeType":"411","endLine":51,"endColumn":35,"suggestions":"426"},{"ruleId":"417","severity":1,"message":"418","line":109,"column":17,"nodeType":"419","messageId":"420","endLine":109,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":110,"column":141,"nodeType":"429","endLine":110,"endColumn":164},{"ruleId":"413","severity":1,"message":"430","line":3,"column":19,"nodeType":"415","messageId":"416","endLine":3,"endColumn":28},{"ruleId":"413","severity":1,"message":"431","line":1,"column":34,"nodeType":"415","messageId":"416","endLine":1,"endColumn":44},{"ruleId":"413","severity":1,"message":"432","line":31,"column":10,"nodeType":"415","messageId":"416","endLine":31,"endColumn":26},{"ruleId":"433","severity":1,"message":"434","line":54,"column":75,"nodeType":"435","messageId":"436","endLine":54,"endColumn":86,"fix":"437"},{"ruleId":"409","severity":1,"message":"438","line":69,"column":8,"nodeType":"411","endLine":69,"endColumn":10,"suggestions":"439"},{"ruleId":"440","severity":1,"message":"441","line":167,"column":78,"nodeType":"442","messageId":"443","endLine":167,"endColumn":80},{"ruleId":"417","severity":1,"message":"418","line":168,"column":117,"nodeType":"419","messageId":"420","endLine":168,"endColumn":119},{"ruleId":"444","severity":1,"message":"445","line":177,"column":69,"nodeType":"429","endLine":177,"endColumn":216},{"ruleId":"446","severity":1,"message":"447","line":189,"column":65,"nodeType":"448","messageId":"449","endLine":189,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":198,"column":69,"nodeType":"429","endLine":198,"endColumn":196},{"ruleId":"446","severity":1,"message":"447","line":208,"column":65,"nodeType":"448","messageId":"449","endLine":208,"endColumn":71},{"ruleId":"446","severity":1,"message":"447","line":226,"column":65,"nodeType":"448","messageId":"449","endLine":226,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":235,"column":69,"nodeType":"429","endLine":235,"endColumn":113},{"ruleId":"446","severity":1,"message":"447","line":246,"column":65,"nodeType":"448","messageId":"449","endLine":246,"endColumn":71},{"ruleId":"446","severity":1,"message":"447","line":264,"column":65,"nodeType":"448","messageId":"449","endLine":264,"endColumn":71},{"ruleId":"413","severity":1,"message":"450","line":24,"column":11,"nodeType":"415","messageId":"416","endLine":24,"endColumn":15},{"ruleId":"413","severity":1,"message":"451","line":24,"column":17,"nodeType":"415","messageId":"416","endLine":24,"endColumn":21},{"ruleId":"413","severity":1,"message":"452","line":24,"column":23,"nodeType":"415","messageId":"416","endLine":24,"endColumn":27},{"ruleId":"413","severity":1,"message":"453","line":24,"column":35,"nodeType":"415","messageId":"416","endLine":24,"endColumn":40},{"ruleId":"413","severity":1,"message":"454","line":24,"column":42,"nodeType":"415","messageId":"416","endLine":24,"endColumn":53},{"ruleId":"413","severity":1,"message":"455","line":25,"column":11,"nodeType":"415","messageId":"416","endLine":25,"endColumn":18},{"ruleId":"446","severity":1,"message":"447","line":33,"column":13,"nodeType":"448","messageId":"449","endLine":33,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":36,"column":13,"nodeType":"448","messageId":"449","endLine":36,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":39,"column":13,"nodeType":"448","messageId":"449","endLine":39,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":42,"column":13,"nodeType":"448","messageId":"449","endLine":42,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":65,"column":13,"nodeType":"419","messageId":"420","endLine":65,"endColumn":15},{"ruleId":"417","severity":1,"message":"418","line":66,"column":21,"nodeType":"419","messageId":"420","endLine":66,"endColumn":23},{"ruleId":"413","severity":1,"message":"432","line":35,"column":7,"nodeType":"415","messageId":"416","endLine":35,"endColumn":23},{"ruleId":"417","severity":1,"message":"456","line":62,"column":24,"nodeType":"419","messageId":"420","endLine":62,"endColumn":26},{"ruleId":"417","severity":1,"message":"456","line":62,"column":42,"nodeType":"419","messageId":"420","endLine":62,"endColumn":44},{"ruleId":"417","severity":1,"message":"456","line":67,"column":19,"nodeType":"419","messageId":"420","endLine":67,"endColumn":21},{"ruleId":"417","severity":1,"message":"456","line":67,"column":31,"nodeType":"419","messageId":"420","endLine":67,"endColumn":33},{"ruleId":"417","severity":1,"message":"418","line":67,"column":54,"nodeType":"419","messageId":"420","endLine":67,"endColumn":56},{"ruleId":"409","severity":1,"message":"457","line":97,"column":5,"nodeType":"411","endLine":97,"endColumn":7,"suggestions":"458"},{"ruleId":"417","severity":1,"message":"418","line":106,"column":24,"nodeType":"419","messageId":"420","endLine":106,"endColumn":26},{"ruleId":"417","severity":1,"message":"418","line":111,"column":50,"nodeType":"419","messageId":"420","endLine":111,"endColumn":52},{"ruleId":"409","severity":1,"message":"459","line":121,"column":5,"nodeType":"411","endLine":121,"endColumn":16,"suggestions":"460"},{"ruleId":"409","severity":1,"message":"461","line":132,"column":5,"nodeType":"411","endLine":132,"endColumn":29,"suggestions":"462"},{"ruleId":"417","severity":1,"message":"418","line":135,"column":24,"nodeType":"419","messageId":"420","endLine":135,"endColumn":26},{"ruleId":"417","severity":1,"message":"418","line":136,"column":21,"nodeType":"419","messageId":"420","endLine":136,"endColumn":23},{"ruleId":"409","severity":1,"message":"463","line":143,"column":5,"nodeType":"411","endLine":143,"endColumn":19,"suggestions":"464"},{"ruleId":"417","severity":1,"message":"418","line":146,"column":24,"nodeType":"419","messageId":"420","endLine":146,"endColumn":26},{"ruleId":"409","severity":1,"message":"465","line":151,"column":5,"nodeType":"411","endLine":151,"endColumn":22,"suggestions":"466"},{"ruleId":"409","severity":1,"message":"467","line":104,"column":5,"nodeType":"411","endLine":104,"endColumn":35,"suggestions":"468"},{"ruleId":"409","severity":1,"message":"469","line":104,"column":6,"nodeType":"470","endLine":104,"endColumn":34},{"ruleId":"409","severity":1,"message":"471","line":69,"column":5,"nodeType":"411","endLine":69,"endColumn":19,"suggestions":"472"},{"ruleId":"417","severity":1,"message":"418","line":75,"column":19,"nodeType":"419","messageId":"420","endLine":75,"endColumn":21},{"ruleId":"409","severity":1,"message":"473","line":81,"column":5,"nodeType":"411","endLine":81,"endColumn":11,"suggestions":"474"},{"ruleId":"409","severity":1,"message":"475","line":90,"column":5,"nodeType":"411","endLine":90,"endColumn":7,"suggestions":"476"},{"ruleId":"440","severity":1,"message":"441","line":201,"column":29,"nodeType":"442","messageId":"443","endLine":201,"endColumn":31},{"ruleId":"417","severity":1,"message":"456","line":203,"column":23,"nodeType":"419","messageId":"420","endLine":203,"endColumn":25},{"ruleId":"413","severity":1,"message":"477","line":10,"column":10,"nodeType":"415","messageId":"416","endLine":10,"endColumn":12},{"ruleId":"409","severity":1,"message":"478","line":133,"column":6,"nodeType":"411","endLine":133,"endColumn":8,"suggestions":"479"},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearSearchBarBtnRef' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["482"],"@typescript-eslint/no-unused-vars","'homeIcon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["483"],"React Hook useEffect has missing dependencies: 'buildTrieTree' and 'setSearchResult'. Either include them or remove the dependency array. Outer scope values like 'undefined' aren't valid dependencies because mutating them doesn't re-render the component.",["484"],"React Hook useEffect has missing dependencies: 'clearSearchBarBtnRef' and 'setClearSearchBarBtnRef'. Either include them or remove the dependency array. Mutable values like 'clearSearchBarBtnRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["485"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'matchType' is defined but never used.","'useHistory' is defined but never used.","'loadingAnimation' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"486","text":"487"},"React Hook useEffect has missing dependencies: 'allTypes', 'matID', 'setDtaToSearchIn', 'title', and 'topicID'. Either include them or remove the dependency array.",["488"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'ign1' is assigned a value but never used.","'ign2' is assigned a value but never used.","'ign3' is assigned a value but never used.","'photo' is assigned a value but never used.","'description' is assigned a value but never used.","'resType' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allTopics' and 'materialID'. Either include them or remove the dependency array.",["489"],"React Hook useEffect has missing dependencies: 'materialID' and 'setDtaToSearchIn'. Either include them or remove the dependency array.",["490"],"React Hook useEffect has an unnecessary dependency: 'loadMoreDivRef.current'. Either exclude it or remove the dependency array. Mutable values like 'loadMoreDivRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["491"],"React Hook useEffect has a missing dependency: 'allTopics'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMaxNumToDisplay' needs the current value of 'allTopics'.",["492"],"React Hook useEffect has missing dependencies: 'addNewSetOfTopicsToDisplay' and 'allTopics'. Either include them or remove the dependency array.",["493"],"React Hook useEffect has missing dependencies: 'dataToSearch' and 'setDtaToSearchIn'. Either include them or remove the dependency array.",["494"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'defualtValues'. Either include it or remove the dependency array.",["495"],"React Hook useEffect has missing dependencies: 'materialsTable' and 'setDtaToSearchIn'. Either include them or remove the dependency array.",["496"],"React Hook useEffect has missing dependencies: 'setDtaToSearchIn' and 'urlHandler'. Either include them or remove the dependency array.",["497"],"'on' is defined but never used.","React Hook useEffect has missing dependencies: 'setUniDex' and 'unisNames'. Either include them or remove the dependency array.",["498"],"no-global-assign","no-unsafe-negation",{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},[2632,2643],"[]",{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},"Update the dependencies array to be: [clearSearchBarBtnRef, history]",{"range":"529","text":"530"},"Update the dependencies array to be: [search, searchTerm]",{"range":"531","text":"532"},"Update the dependencies array to be: [dataToSearchIn, buildTrieTree, setSearchResult]",{"range":"533","text":"534"},"Update the dependencies array to be: [clearSearchBarBtnRef, setClearSearchBarBtnRef]",{"range":"535","text":"536"},"Update the dependencies array to be: [allTypes, matID, setDtaToSearchIn, title, topicID]",{"range":"537","text":"538"},"Update the dependencies array to be: [allTopics, materialID]",{"range":"539","text":"540"},"Update the dependencies array to be: [allTopics, materialID, setDtaToSearchIn]",{"range":"541","text":"542"},"Update the dependencies array to be: []",{"range":"543","text":"487"},"Update the dependencies array to be: [allTopics, searchResult]",{"range":"544","text":"545"},"Update the dependencies array to be: [addNewSetOfTopicsToDisplay, allTopics, maxNumToDisplay]",{"range":"546","text":"547"},"Update the dependencies array to be: [dataToSearch, setDtaToSearchIn]",{"range":"548","text":"549"},"Update the dependencies array to be: [defualtValues, userSchedule]",{"range":"550","text":"551"},"Update the dependencies array to be: [data, materialsTable, setDtaToSearchIn]",{"range":"552","text":"553"},"Update the dependencies array to be: [setDtaToSearchIn, urlHandler]",{"range":"554","text":"555"},"Update the dependencies array to be: [setUniDex, unisNames]",{"range":"556","text":"557"},[1859,1861],"[clearSearchBarBtnRef, history]",[1266,1278],"[search, searchTerm]",[1481,1508],"[dataToSearchIn, buildTrieTree, setSearchResult]",[1587,1617],"[clearSearchBarBtnRef, setClearSearchBarBtnRef]",[3258,3260],"[allTypes, matID, setDtaToSearchIn, title, topicID]",[4586,4588],"[allTopics, materialID]",[5678,5689],"[allTopics, materialID, setDtaToSearchIn]",[5961,5985],[6252,6266],"[allTopics, searchResult]",[6414,6431],"[addNewSetOfTopicsToDisplay, allTopics, maxNumToDisplay]",[3385,3415],"[dataToSearch, setDtaToSearchIn]",[2684,2698],"[defualtValues, userSchedule]",[3159,3165],"[data, materialsTable, setDtaToSearchIn]",[3301,3303],"[setDtaToSearchIn, urlHandler]",[3725,3727],"[setUniDex, unisNames]"]