[{"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\index.tsx":"1","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\App.tsx":"2","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\history\\credationls-history.ts":"3","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\pages-route.ts":"4","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signup.tsx":"5","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signin.tsx":"6","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\home.tsx":"7","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\apis-caller.ts":"8","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\uni-requests\\university.ts":"9","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\signup-context\\uni-data-context.ts":"10","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\home-page.tsx":"11","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-container.tsx":"12","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\login-page.tsx":"13","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\status-codes.ts":"14","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\axios-creation.ts":"15","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\user-requestes\\user.ts":"16","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\urls.ts":"17","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\form-arrays.ts":"18","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-forms.tsx":"19","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-image.tsx":"20","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\signUpButton.tsx":"21","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\forgotPassword.tsx":"22","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar.tsx":"23","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx":"24","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar.tsx":"25","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\local-storage-keys.ts":"26","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\messages.ts":"27","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\side-bar-section-cards.ts":"28","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-buttons.tsx":"29","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-inputs.tsx":"30","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx":"31","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\logo.tsx":"32","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\search-area.tsx":"33","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\data-entry-page.tsx":"34","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\manual-entry.tsx":"35","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-entry-section.tsx":"36","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\book-entry-page.tsx":"37","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\uni-manager-page.tsx":"38","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-dropdown.tsx":"39","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\validation\\signup-validation.ts":"40","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar-card.tsx":"41","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx":"42","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx":"43","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx":"44","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx":"45","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx":"46","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx":"47","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx":"48","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx":"49","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx":"50","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx":"51","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx":"52","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx":"53","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts":"54","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\view-page.tsx":"55","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx":"56","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\material-requests\\mateirla.ts":"57","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx":"58","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx":"59","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx":"60","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx":"61","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\material-info-page.tsx":"62","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx":"63","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx":"64","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx":"65","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\utilities\\alearts.tsx":"66","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\action-cods.ts":"67","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx":"68","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\res-types.ts":"69","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\res-requests\\res.ts":"70","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\404\\404-componant.tsx":"71","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx":"72","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\profile-page.tsx":"73","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx":"74","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx":"75","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\schedule-page.tsx":"76","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\guidance.tsx":"77","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx":"78","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx":"79","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\not-found-page.tsx":"80"},{"size":246,"mtime":1619576879054,"results":"81","hashOfConfig":"82"},{"size":681,"mtime":1615585899746,"results":"83","hashOfConfig":"82"},{"size":86,"mtime":1613137362652,"results":"84","hashOfConfig":"82"},{"size":1135,"mtime":1619947953660,"results":"85","hashOfConfig":"82"},{"size":870,"mtime":1615583337322,"results":"86","hashOfConfig":"82"},{"size":208,"mtime":1613751668602,"results":"87","hashOfConfig":"82"},{"size":115,"mtime":1613751668600,"results":"88","hashOfConfig":"82"},{"size":1336,"mtime":1619648462556,"results":"89","hashOfConfig":"82"},{"size":2267,"mtime":1619606035178,"results":"90","hashOfConfig":"82"},{"size":97,"mtime":1613137362633,"results":"91","hashOfConfig":"82"},{"size":1921,"mtime":1620051398279,"results":"92","hashOfConfig":"82"},{"size":890,"mtime":1620051398288,"results":"93","hashOfConfig":"82"},{"size":2148,"mtime":1620053498785,"results":"94","hashOfConfig":"82"},{"size":724,"mtime":1619947953663,"results":"95","hashOfConfig":"82"},{"size":464,"mtime":1619536487276,"results":"96","hashOfConfig":"82"},{"size":4949,"mtime":1620052775400,"results":"97","hashOfConfig":"82"},{"size":1913,"mtime":1619734452749,"results":"98","hashOfConfig":"82"},{"size":1016,"mtime":1613137362628,"results":"99","hashOfConfig":"82"},{"size":560,"mtime":1613137362625,"results":"100","hashOfConfig":"82"},{"size":64538,"mtime":1613751668596,"results":"101","hashOfConfig":"82"},{"size":326,"mtime":1613751668593,"results":"102","hashOfConfig":"82"},{"size":531,"mtime":1619648462548,"results":"103","hashOfConfig":"82"},{"size":335,"mtime":1613751668559,"results":"104","hashOfConfig":"82"},{"size":2500,"mtime":1620051398281,"results":"105","hashOfConfig":"82"},{"size":284,"mtime":1619020577987,"results":"106","hashOfConfig":"82"},{"size":159,"mtime":1619648462552,"results":"107","hashOfConfig":"82"},{"size":431,"mtime":1613140606899,"results":"108","hashOfConfig":"82"},{"size":2443,"mtime":1619947953661,"results":"109","hashOfConfig":"82"},{"size":2423,"mtime":1618160601579,"results":"110","hashOfConfig":"82"},{"size":1281,"mtime":1615583251390,"results":"111","hashOfConfig":"82"},{"size":1000,"mtime":1619947887259,"results":"112","hashOfConfig":"82"},{"size":8781,"mtime":1616452072548,"results":"113","hashOfConfig":"82"},{"size":2982,"mtime":1613751668561,"results":"114","hashOfConfig":"82"},{"size":471,"mtime":1617740974308,"results":"115","hashOfConfig":"82"},{"size":1709,"mtime":1619536487274,"results":"116","hashOfConfig":"82"},{"size":626,"mtime":1619947953644,"results":"117","hashOfConfig":"82"},{"size":319,"mtime":1616452072600,"results":"118","hashOfConfig":"82"},{"size":256,"mtime":1615585899883,"results":"119","hashOfConfig":"82"},{"size":1312,"mtime":1615583251395,"results":"120","hashOfConfig":"82"},{"size":1434,"mtime":1615583251441,"results":"121","hashOfConfig":"82"},{"size":609,"mtime":1619885977436,"results":"122","hashOfConfig":"82"},{"size":7543,"mtime":1619999432411,"results":"123","hashOfConfig":"82"},{"size":3612,"mtime":1619390181046,"results":"124","hashOfConfig":"82"},{"size":696,"mtime":1617724230985,"results":"125","hashOfConfig":"82"},{"size":4451,"mtime":1619305831164,"results":"126","hashOfConfig":"82"},{"size":535,"mtime":1615583251385,"results":"127","hashOfConfig":"82"},{"size":2009,"mtime":1619305831193,"results":"128","hashOfConfig":"82"},{"size":2540,"mtime":1619951807616,"results":"129","hashOfConfig":"82"},{"size":2346,"mtime":1619305831189,"results":"130","hashOfConfig":"82"},{"size":5753,"mtime":1619536487252,"results":"131","hashOfConfig":"82"},{"size":2549,"mtime":1619951807618,"results":"132","hashOfConfig":"82"},{"size":601,"mtime":1615585899809,"results":"133","hashOfConfig":"82"},{"size":2514,"mtime":1615585899803,"results":"134","hashOfConfig":"82"},{"size":109,"mtime":1616452072580,"results":"135","hashOfConfig":"82"},{"size":388,"mtime":1616452072605,"results":"136","hashOfConfig":"82"},{"size":5315,"mtime":1619999770023,"results":"137","hashOfConfig":"82"},{"size":3101,"mtime":1619305831213,"results":"138","hashOfConfig":"82"},{"size":4421,"mtime":1619305831169,"results":"139","hashOfConfig":"82"},{"size":2617,"mtime":1619947953654,"results":"140","hashOfConfig":"82"},{"size":698,"mtime":1616452072560,"results":"141","hashOfConfig":"82"},{"size":561,"mtime":1616452072558,"results":"142","hashOfConfig":"82"},{"size":388,"mtime":1617740974311,"results":"143","hashOfConfig":"82"},{"size":2149,"mtime":1619536487246,"results":"144","hashOfConfig":"82"},{"size":8344,"mtime":1620051398283,"results":"145","hashOfConfig":"82"},{"size":5449,"mtime":1619951807623,"results":"146","hashOfConfig":"82"},{"size":1340,"mtime":1619305831281,"results":"147","hashOfConfig":"82"},{"size":268,"mtime":1619305831198,"results":"148","hashOfConfig":"82"},{"size":10880,"mtime":1619999432414,"results":"149","hashOfConfig":"82"},{"size":281,"mtime":1619305831201,"results":"150","hashOfConfig":"82"},{"size":648,"mtime":1619305831215,"results":"151","hashOfConfig":"82"},{"size":21249,"mtime":1620051426168,"results":"152","hashOfConfig":"82"},{"size":3652,"mtime":1619951807625,"results":"153","hashOfConfig":"82"},{"size":223,"mtime":1619734452750,"results":"154","hashOfConfig":"82"},{"size":2278,"mtime":1620051398284,"results":"155","hashOfConfig":"82"},{"size":3050,"mtime":1619734452715,"results":"156","hashOfConfig":"82"},{"size":268,"mtime":1619947953676,"results":"157","hashOfConfig":"82"},{"size":302,"mtime":1619947953667,"results":"158","hashOfConfig":"82"},{"size":220,"mtime":1619947953648,"results":"159","hashOfConfig":"82"},{"size":961,"mtime":1619951807610,"results":"160","hashOfConfig":"82"},{"size":445,"mtime":1620051398292,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"uken32",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"164"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"164"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"164"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"164"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\index.tsx",[],["328","329"],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\App.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\history\\credationls-history.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\pages-route.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signup.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\signin.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\home.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\apis-caller.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\uni-requests\\university.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\signup-context\\uni-data-context.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\home-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-container.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\login-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\status-codes.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\axios-creation.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\user-requestes\\user.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\urls.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\form-arrays.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-forms.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-image.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\signUpButton.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signin\\forgotPassword.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\dynamic-content-section.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\local-storage-keys.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\messages.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\side-bar-section-cards.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-buttons.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\form-inputs.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\nav-bar-options.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\logo.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\nav-bar\\search-area.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\data-entry-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\manual-entry.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-entry-section.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\book-entry-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\uni-manager-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\signup\\signup-dropdown.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\validation\\signup-validation.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\side-bar\\side-bar-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-manually.tsx",["330"],"import React, { useContext, useEffect, useRef } from 'react';\r\nimport '../../../../styles/data-entry-styles/manual/manual-entry.css';\r\nimport lottie from 'lottie-web';\r\nimport floattingLaptop from '../../../../assets/data-entry-assets/floatting-laptop.json';\r\nimport emptySVG from '../../../../assets/data-entry-assets/empty.svg';\r\nimport Swal from 'sweetalert2';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { createNewMaerial, createTopic, updateMaterial, updateTopic } from '../../../../requestes/material-requests/mateirla';\r\nimport { CREATED, OK } from '../../../../constants/status-codes';\r\nimport { DynamicContentContext } from '../../../../contexts/home-context/dynamic-content-state-context';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype cardCreateorInterface = {\r\n\tinputs: string[];\r\n\tdescriptionInput?: string;\r\n\tvalues: string[];\r\n\tlocalMaterialID?: string;\r\n\trate?: number;\r\n\tresRoute: string;\r\n\ttopicID?: string;\r\n\tsetResRoute: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function CardCreateor({ inputs, descriptionInput, values, localMaterialID, topicID, rate, resRoute, setResRoute }: cardCreateorInterface) {\r\n\tconst inputLottie = useRef(null);\r\n\tconst materialName = useRef<HTMLPreElement>(null);\r\n\tconst previewer = useRef<HTMLImageElement>(null);\r\n\tconst emptyName: string = '???? ????';\r\n\tconst results: string[] = (values.length === inputs.length) ? values : new Array(inputs.length).fill('');\r\n\tconst textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\tconst addResButtonRef = useRef<HTMLDivElement>(null);\r\n\tconst { materialsTable, setMaterialsTable } = useContext(DynamicContentContext);\r\n\r\n\tuseEffect (() => {\r\n\t\tif(topicID) {\r\n\t\t\taddResButtonRef.current!.style.display = 'flex';\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlottie.loadAnimation({\r\n\t\t\tcontainer: inputLottie.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: floattingLaptop\r\n\t\t});\r\n\t}, [materialsTable, resRoute]);\r\n\r\n\tconst inputHandler = (e: any, index: number) => {\r\n\t\tconst value: string = e.target.value || '';\r\n\t\tif (index === 0) materialName.current!.innerHTML = value !== '' ? value : emptyName;\r\n\t\telse if (index === 1) {\r\n\t\t\tpreviewer.current!.src = (value !== '' ? value : emptySVG)\r\n\t\t}\r\n\t\tresults[index] = value;\r\n\t};\r\n\r\n\tconst submitHandler = () => {\r\n\t\tlet emptyIndex: number = -1;\r\n\t\tresults.forEach((result, index) => (result === '' || !result) ? emptyIndex = index : '')\r\n\t\tif (emptyIndex !== -1) Swal.fire('Ops!', `Sorry but the \"${inputs[emptyIndex]}\" is required`, 'error');\r\n\t\telse {\r\n\t\t\tif (topicID != undefined) { updateTopicDocument(); }\r\n\t\t\telse if (inputs[0].includes('Topic')) submitTopic();\r\n\t\t\telse if (values.length !== 0) updateDocument();\r\n\t\t\telse if (descriptionInput) submitMaterial();\r\n\t\t\t// to add the topic later\r\n\t\t}\r\n\t}\r\n\r\n\tconst updateDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody: any = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: rate\r\n\t\t}\r\n\t\tconst requestParams = {\r\n\t\t\tmaterialID: localMaterialID!\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: updateMaterial, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === OK) {\r\n\t\t\tupdateMaterialLocally(localMaterialID!, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitMaterial = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\tmaterialName: results[0],\r\n\t\t\tmaterialPhoto: results[1],\r\n\t\t\tmaterialNumber: results[2],\r\n\t\t\tmaterialDesc: textAreaRef?.current?.value || '',\r\n\t\t\ttotalRate: 5,\r\n\t\t}\r\n\t\tconst { data, status } = await APIsCaller({ api: createNewMaerial, requestBody });\r\n\t\tconst { message, materialID } = data;\r\n\r\n\t\tif (status === CREATED) {\r\n\t\t\tupdateMaterialLocally(materialID, requestBody);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', message || 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst submitTopic = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID }\r\n\t\tconst { data, status } = await APIsCaller({ api: createTopic, requestBody, requestParams });\r\n\t\tconst { message, topicID } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\t// setResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\r\n\t}\r\n\r\n\tconst updateTopicDocument = async () => {\r\n\t\tSwal.showLoading();\r\n\t\tconst requestBody = {\r\n\t\t\ttopicName: results[0],\r\n\t\t\ttopicPhoto: results[1],\r\n\t\t\ttopicDes: textAreaRef?.current?.value || ''\r\n\t\t}\r\n\t\tconst requestParams = { materialID: localMaterialID, topicID: topicID }\r\n\t\tconst { data, status } = await APIsCaller({ api: updateTopic, requestBody, requestParams });\r\n\t\tconst { message } = data;\r\n\t\tif (status === CREATED || status === OK) {\r\n\t\t\t// setResRoute((currentRoute) => `${currentRoute}/${topicID}`);\r\n\t\t\t// addResButtonRef.current!.style.display = 'flex';\r\n\t\t\tSwal.fire('Thanks', message, 'success');\r\n\t\t}\r\n\t\telse Swal.fire('Ops!', 'Something went wrong', 'error');\r\n\t}\r\n\r\n\tconst updateMaterialLocally = (matID: string, newMat: any) => {\r\n\t\tconst newData = {\r\n\t\t\t...materialsTable,\r\n\t\t\t[matID]: newMat\r\n\t\t}\r\n\t\tsetMaterialsTable(() => newData);\r\n\t}\r\n\r\n\tconst MaterialInputs = () => {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"inputs-container\">\r\n\t\t\t\t{inputs.map((hint, index) => {\r\n\t\t\t\t\tif (values!.length > index) return <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} defaultValue={values[index]} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t\treturn <input placeholder={hint} key={index} onChange={(e) => inputHandler(e, index)} type={hint.includes(\"Number\") ? \"number\" : \"text\"} />\r\n\t\t\t\t})}\r\n\t\t\t\t{\r\n\t\t\t\t\tdescriptionInput ? <textarea placeholder={descriptionInput} ref={textAreaRef}\r\n\t\t\t\t\t\tdefaultValue={(localMaterialID) ? materialsTable[localMaterialID].materialDesc : ''}\r\n\t\t\t\t\t\tonFocus={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflowY = 'scroll';\r\n\t\t\t\t\t\t}} onBlur={() => {\r\n\t\t\t\t\t\t\ttextAreaRef.current!.style.overflow = 'hidden';\r\n\t\t\t\t\t\t}} /> : <div />\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"lottie-input-container\" ref={inputLottie} />\r\n\t\t\t\t<div className=\"submit-material-button\" onClick={submitHandler}>\r\n\t\t\t\t\t{(values.length !== 0) ? \"Update\" : \"Submit\"}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tconst Materialpreviewer = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"material-previewer-container\">\r\n\t\t\t\t<div className=\"material-previewer\" >\r\n\t\t\t\t\t<img src={(values.length >= 2) ? values[1] : emptySVG} alt=\"card-img\" ref={previewer} />\r\n\t\t\t\t\t<pre className=\"material-name-container\" ref={materialName}>\r\n\t\t\t\t\t\t{(values.length >= 2) ? values[0] : emptyName}\r\n\t\t\t\t\t</pre>\r\n\t\t\t\t</div>\r\n\t\t\t\t{addResButton()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\t// TODO if I recived the topic ID then the button should be display flex by defualt\r\n\tconst addResButton = () => {\r\n\t\treturn <NavLink to={resRoute}>\r\n\t\t\t<div className=\"add-res-button\" ref={addResButtonRef}>Add resources</div>\r\n\t\t</NavLink>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"manual-entry-method\">\r\n\t\t\t<MaterialInputs />\r\n\t\t\t<Materialpreviewer />\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-container.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\add-by-book.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\data-entry-methods.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-manager-info.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-locations.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\submit-btn.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-names.tsx",["331"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport lottie from \"lottie-web\";\r\nimport Swal from \"sweetalert2\";\r\nimport uniManagerPic from \"../../../../assets/home/uni-manager/uni-manager.json\";\r\nimport DeleteUni from \"./delete-uni\";\r\ninterface SelectProtected {\r\n  readonly wrapperElement: HTMLDivElement;\r\n}\r\n\r\ntype uniNames = {\r\n  unisDataList: any;\r\n  setUnisDataList: any;\r\n  setLocations: any;\r\n  setMajors: any;\r\n  uniName: string;\r\n  setUniName: any;\r\n  uniID: string;\r\n  setUniID: any;\r\n  unisNames: string[];\r\n  setUnisNames: any;\r\n};\r\n\r\nexport default function UnisNames({\r\n  unisDataList,\r\n  setUnisDataList,\r\n  setLocations,\r\n  setMajors,\r\n  uniName,\r\n  setUniName,\r\n  uniID,\r\n  setUniID,\r\n  unisNames,\r\n  setUnisNames,\r\n}: uniNames) {\r\n  const [display, setDisplay] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // let unisNamess: string[] = unisDataList.map(({ doc }: any) => doc.name);\r\n  // const [unisNames, setUnisNames] = useState(unisNamess || []);\r\n\r\n  let index = 0;\r\n  const animated: any = useRef(null);\r\n  const [flag, setFlag] = useState(true); // to clear data (locations and majors) depending on the name\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const setUniDex = (uni: string) => { // set the uni index to fill data locations and majors if founds\r\n    if (unisNames.includes(uni)) {\r\n      // setSearch(uni);\r\n      // setDisplay(false);\r\n      const index = unisNames.indexOf(uni);\r\n      const item = unisDataList[index];\r\n      const { id } = item;\r\n      const { doc } = item;\r\n      const { name } = doc;\r\n      const { locations } = doc;\r\n      const { fields } = doc;\r\n      setLocations(locations);\r\n      setMajors(fields);\r\n      setUniName(name);\r\n      setUniID(id);\r\n      setFlag(true);\r\n    } else {\r\n      setUniName(uni);\r\n      setUniID(null);\r\n      if (flag === true) {\r\n        const empty: any = [];\r\n        setLocations(empty);\r\n        setMajors(empty);\r\n        setFlag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeUniName = async (oldName: string) => {\r\n    let newName = oldName;\r\n    Swal.fire({\r\n      title: \"change university name\",\r\n      input: \"text\",\r\n      inputValue: oldName,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: true,\r\n      allowEnterKey: true,\r\n      confirmButtonText: \"edit\",\r\n      showLoaderOnConfirm: true,\r\n      preConfirm: (result) => {\r\n        if (result) {\r\n          if (unisNames.includes(result)) {\r\n            Swal.showValidationMessage(\"this name already exists\");\r\n          } else return;\r\n        } else {\r\n          Swal.showValidationMessage(\"please enter a name\");\r\n        }\r\n      },\r\n    }).then((result: any) => {\r\n      newName = result.value;\r\n      if (result.isConfirmed) {\r\n        if (newName === \"\") {\r\n        }\r\n        if (newName !== null && newName !== \"\") {\r\n          const temp = [];\r\n          for (let i = 0; i < unisNames.length; i++) {\r\n            if (unisNames[i] === oldName) temp[i] = newName;\r\n            else temp[i] = unisNames[i];\r\n          }\r\n          setUnisNames(temp);\r\n          setSearch(newName);\r\n          setUniName(newName);\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: animated.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: uniManagerPic,\r\n    });\r\n\r\n    if (unisNames[0].length > 0) {\r\n      const temp = unisNames[0];\r\n      setUniDex(temp);\r\n      setSearch(temp);\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutSide);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutSide);\r\n    };\r\n  }, []);\r\n\r\n  const selectProtected: SelectProtected = {\r\n    wrapperElement: document.createElement(\"div\"),\r\n  };\r\n  const wrapperRef = useRef(selectProtected.wrapperElement);\r\n\r\n  const handleClickOutSide = (e: any) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(e.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uni-names-div \">\r\n      <label htmlFor=\"uni-name-input\" className=\"uni-name-label label\">\r\n        University name\r\n      </label>\r\n      <input\r\n        id=\"auto\"\r\n        className=\"auto-input input\"\r\n        onClick={() => setDisplay(true)}\r\n        value={search}\r\n        autoComplete=\"off\"\r\n        onChange={(event) => setSearch(event.target.value)}\r\n        onBlur={(event) => setUniDex(search)}\r\n      ></input>\r\n      {display && (\r\n        <div ref={wrapperRef} className=\"autoContainer\">\r\n          {unisNames\r\n            .filter((uniName: string) => uniName.indexOf(search) > -1)\r\n            .map((uniName: string) => {\r\n              return (\r\n                <div\r\n                  onClick={() => {\r\n                    setSearch(() => uniName);\r\n                    setUniDex(uniName);\r\n                    setDisplay(false);\r\n                  }}\r\n                  className=\"option\"\r\n                  key={index++}\r\n                >\r\n                  <span className=\"uni-name-option\">{uniName}</span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n      <div className=\"change-uni-name-div\">\r\n        <button\r\n          className=\"change-uni-name-btn\"\r\n          onClick={() => changeUniName(search)}\r\n        >\r\n          change name\r\n        </button>\r\n      </div>\r\n      <DeleteUni\r\n        {...{\r\n          unisDataList,\r\n          setUnisDataList,\r\n          unisNames,\r\n          setUnisNames,\r\n          uniID,\r\n          uniName,\r\n          setUniDex,\r\n          setSearch,\r\n        }}\r\n      />\r\n      <div className=\"animated\" ref={animated}></div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\uni-majors.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\location-tag.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\uni-manager\\delete-uni.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\contexts\\home-context\\dynamic-content-state-context.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\view-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\view-page.tsx",["332"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { DynamicContentContext } from '../../../../contexts/home-context/dynamic-content-state-context';\r\nimport { cardInterface } from '../../../../interfaces/cards/cards';\r\nimport '../../../../styles/viewer/cards-viewer/cards-viewer.css';\r\nimport MaterialCard from './material-card';\r\nimport { cretateTopics, manualEntryRoute, materialInfoRoute, updatematerialsRoute, updateTopic } from '../../../../constants/pages-route';\r\nimport { match as cardsViewerMatch } from 'react-router-dom';\r\nimport saveIcon from '../../../../assets/home/profile/save.svg';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { APIsCaller } from '../../../../requestes/apis-caller';\r\nimport { updateUserProfile } from '../../../../requestes/user-requestes/user';\r\nimport { BAD_REQUEST, OK } from '../../../../constants/status-codes';\r\nexport default function CardsViewer({ match }: { match?: cardsViewerMatch<any> }) {\r\n\tconst { user, materialsTable } = useContext(DynamicContentContext);\r\n\tconst MySwal = withReactContent(Swal);\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tdefualtValues();\r\n\t}, [])\r\n\t\r\n\tconst createCardsList = (routeTo:string): cardInterface[] => {\r\n\t\tconst result: cardInterface[] = [];\r\n\t\tfor (let [ key, value ] of Object.entries(materialsTable)) {\r\n\t\t\tconst data: any = value;\r\n\t\t\tresult.push({\r\n\t\t\t\tcardPhoto: data.materialPhoto,\r\n\t\t\t\tcardRate: data.totalRate,\r\n\t\t\t\tcardTitle: data.materialName,\r\n\t\t\t\tcardID: key,\r\n\t\t\t\trouteTo: `${routeTo}/${key}`\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst scheduleCardList = ()=>{\r\n\t\tconst result: cardInterface[] = [];\r\n\t\tfor (let [ key, value ] of Object.entries(materialsTable)) {\r\n\t\t\tconst data: any = value;\r\n\t\t\tresult.push({\r\n\t\t\t\tcardPhoto: data.materialPhoto,\r\n\t\t\t\tcardRate: data.totalRate,\r\n\t\t\t\tcardTitle: data.materialName,\r\n\t\t\t\tcardID: key,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tconst urlHandler = (): cardInterface[] => {\r\n\t\tconst url: string | undefined = match?.url;\r\n\t\tif(!url)return scheduleCardList();\r\n\t\t\r\n\t\tswitch (url) {\r\n\t\t\tcase updatematerialsRoute: return createCardsList(manualEntryRoute);\r\n\t\t\tcase cretateTopics: return createCardsList(updateTopic);\r\n\t\t\tcase materialInfoRoute: return createCardsList(materialInfoRoute);\r\n\t\t\tdefault: return [];\r\n\t\t}\r\n\t};\r\n\r\n\tconst [data, setData]  = useState<(cardInterface | undefined)[]>(urlHandler());\r\n\tconst [selected, setSelected]  = useState<(cardInterface | undefined)[]>();\r\n\tconst [userSchedule, setUserSchedule] = useState<string[]>(user?.userProfile?.schedule);\r\n\r\n\tconst SaveFAB = ()=>{\r\n\t\treturn (\r\n\t\t\t<div className=\"save-button\" onClick={saveShcedule}>\r\n\t\t\t\t<img alt=\"save\" src={saveIcon} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst saveShcedule = async()=>{\r\n\t\tconsole.log(`userSchedule`, userSchedule);\r\n\t\tconst {isConfirmed} = await MySwal.fire({\r\n\t\t\ttitle:'Materials',\r\n\t\t\thtml: <VeiwSelected />, \r\n\t\t\ticon:\"info\", \r\n\t\t\tconfirmButtonText:\"Create\",\r\n\t\t\twidth:\"70vw\",\r\n\t\t\tconfirmButtonColor:\"#766ffa\",\r\n\t})\r\n\tif(!isConfirmed){\r\n\t\tSwal.clickCancel();\r\n\t\treturn;\r\n\t}\r\n\tSwal.showLoading();\r\n\ttry{\r\n\t\tconst requestBody = {\r\n\t\t\tschedule: userSchedule\r\n\t\t}\r\n\t\tconst {status} = await APIsCaller({api:updateUserProfile, requestBody});\r\n\t\t// TODO fix it very very very soooooooooooooooon\r\n\t\tif(status === OK || status === BAD_REQUEST) Swal.fire(\"Congrats\",\"Your Schedule has been updated!\", \"success\");\r\n\t\telse Swal.fire(\"Ops!\",\"Something went wrong\", \"error\");\r\n\t}catch(err){\r\n\t\tSwal.fire(\"Ops!\",\"Something went wrong\", \"error\");\r\n\t  }\r\n\t}\r\n\r\n\tconst VeiwSelected = ()=>{\r\n\t\treturn (\r\n\t\t\t<div className='schedule-alert'>\r\n\t\t\t{selected?.map((card, index) => <MaterialCard key={index} {...card!}  submitHandler={removeCardFromSchedule} option=\"-\"/>)}\r\n\t\t\t</div>)\r\n\t}\r\n\r\n\tconst defualtValues = ()=>{\r\n\t\tconst temp:cardInterface[] = [];\r\n\t\tuserSchedule?.forEach(val =>{\r\n\t\t\tconst currentMat = materialsTable[val];\r\n\t\t\ttemp.push({cardPhoto: currentMat.materialPhoto,\r\n\t\t\t\t\t   cardRate: currentMat.totalRate,\r\n\t\t\t\t\t   cardTitle: currentMat.materialName,\r\n\t\t\t\t\t   cardID: val})\r\n\t\t});\r\n\t\tsetSelected(temp);\r\n\t}\r\n\r\n\tconst removeCardFromSchedule = (matID:string)=>{\r\n\t\tconsole.log(`matID2`, matID);\r\n\t\tconst newData = selected?.filter((tempCard) => tempCard?.cardID !== matID);\r\n\t\tconsole.log(newData)\r\n\t\tsetSelected(() => newData);\r\n\t\tSwal.clickCancel();\r\n\t}\r\n\r\n\tconst onCardClickHandler = (matID:string)=>{\r\n\t\tconsole.log(`matID`, matID);\r\n\t\tsetUserSchedule((mySchedule)=>{\r\n\t\t\tif(!mySchedule) return [...[matID]]\r\n\t\t\treturn [...[matID, ...mySchedule]];\r\n\t\t})\r\n\t\tconst temp = materialsTable[matID];\r\n\t\tconst cardToAdd = {\r\n\t\t\tcardPhoto: temp.materialPhoto,\r\n\t\t\tcardRate: temp.totalRate,\r\n\t\t\tcardTitle: temp.materialName,\r\n\t\t\tcardID: matID,\r\n\t\t}\r\n\t\tsetSelected((selectedSoFar) => {\r\n\t\t\tif(selectedSoFar) return [...[cardToAdd, ...selectedSoFar]];\r\n\t\t\treturn [...[cardToAdd]];\r\n\t\t})\r\n\t\tconst newData = data?.filter((tempCard) => tempCard?.cardID !== matID);\r\n\t\tsetData(newData)\r\n\t}\r\n\r\n\t// TODO check if the array is empty then give a diffrent UI\r\n\treturn (\r\n\t\t<div className=\"cards-viewer\">\r\n\t\t\t<div className=\"space\" />\r\n\t\t\t{data?.map((card, index) => <MaterialCard key={index} {...card!} submitHandler={onCardClickHandler} option=\"+\" />)}\r\n\t\t\t<div className=\"down-space\" />\r\n\t\t\t{match ? <div/>: <SaveFAB />}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\material-requests\\mateirla.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\drop-zone.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\material-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\ocr.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\loading-upload.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\material-info-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-methods.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\material-info\\material-info.tsx",["333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React, { useCallback, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\r\nimport { match as infoPageMatch } from 'react-router-dom';\r\nimport MaterialCard from \"./../viewer/material-card\";\r\nimport TopicCard from \"./../viewer/topic-card\";\r\nimport { APIsCaller } from './../../../../requestes/apis-caller'\r\nimport { getAllTopics } from './../../../../requestes/material-requests/mateirla'\r\nimport { deleteTopic } from './../../../../requestes/material-requests/mateirla'\r\nimport { DynamicContentContext } from './../../../../contexts/home-context/dynamic-content-state-context';\r\nimport loadMoreIcon from '../../../../assets/material-info-assets/load-more-icon.json';\r\nimport loadingIcon from '../../../../assets/material-info-assets/loading_icon.json';\r\nimport lottie, { AnimationItem } from 'lottie-web';\r\n\r\nimport './../../../../styles/materials-info/materials-info.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function MaterialInfo({ match }: { match: infoPageMatch<{ matID: string }> }) {\r\n\tconst materialID = match.params.matID;\r\n\tconst TOPIC_SEGEMENT_LENGTH = 11; // how many topic in each page (initial viwed topics count and how many to add each load more click).\r\n\r\n\tconst { materialsTable } = useContext(DynamicContentContext);\r\n\r\n\tconst [allTopics, setAllTopics] = useState([]);\r\n\tconst [topicsToDisplay, setTopicsToDisplay] = useState([]);\r\n\tconst [nextTopicsIndex, setNextTopicsIndex] = useState(0);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [topicsFound, setTopicsFound] = useState(true);\r\n\r\n\tconst loadMoreDivRef = useRef(null);\r\n\tconst loadingDivRef = useRef(null);\r\n\r\n\tlet material = materialsTable[materialID];\r\n\tlet [loadMoreAnimation, setLoadMoreAnimation] = useState<AnimationItem>();\r\n\tlet [loadingAnimation, setLoadingAnimation] = useState<AnimationItem>();\r\n\r\n\t// helllllllllllllllllllllllllllllo, plz rename\r\n\tlet addNewSetOfTopicsToDisplay = (allTopics: any, length: number = TOPIC_SEGEMENT_LENGTH) => {\r\n\t\tsetTopicsToDisplay(Object.entries(allTopics).slice(0, nextTopicsIndex + length).map((entry) => entry[1]) as any);\r\n\t\tsetNextTopicsIndex(nextTopicsIndex + length)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// I think this is a bit overkill but why not :).\r\n\t\t// this is to retrieve suitable[topics for the current opened material] topics from local storage.\r\n\t\t// if the retrived topics are valid then update \"allTopics\" with its value.\r\n\t\t// else send a request to retrieve them from the database.\r\n\t\tif (allTopics.length == 0 || allTopics == undefined) {\r\n\t\t\t// get topics form localStorage\r\n\t\t\tlet res = JSON.parse(localStorage.getItem('currentTopics') as any) || [];\r\n\t\t\t// is there is any data stored in localStorage [checked by res.length==0]\r\n\t\t\t// see if it belongs to the current opend data by comperaint materialId.\r\n\t\t\tif (res.length == 0 || res == undefined || res.id != materialID) {\r\n\t\t\t\t// no data or incorrecnt strored, send request.\r\n\t\t\t\tconst getData = async () => {\r\n\t\t\t\t\tconst requestParams = { materialID: materialID };\r\n\t\t\t\t\tconst { data: topicsTable } = await APIsCaller({ api: getAllTopics, requestParams });\r\n\t\t\t\t\tif (topicsTable) setAllTopics(topicsTable.topicsTable);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t};\r\n\t\t\t\tgetData();\r\n\t\t\t} else {\r\n\t\t\t\t// correct data stored.\r\n\t\t\t\tsetAllTopics(res.topics);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// loading animation for the loading animation.\r\n\t\t// this comment is intended to be confusing :);\r\n\t\tsetLoadingAnimation(lottie.loadAnimation({\r\n\t\t\tcontainer: loadingDivRef.current!,\r\n\t\t\tautoplay: true,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: loadingIcon,\r\n\t\t}));\r\n\r\n\t\t// delete currentTopics from localstorage, when component is unmounted. \r\n\t\treturn () => {\r\n\t\t\tlocalStorage.removeItem('currentTopics');\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// this effect is entered twice when refreshing the page.\r\n\t\t// once on the value of allTopics is initilized to [].\r\n\t\t// the second when the other useEffect populates allTopics with fetched data\r\n\t\t// so this if statment servers as a gaurd for that.\r\n\t\t// note: if we found better way to handle this I'll change it, but for now i think it's working.\r\n\t\tif (allTopics.length != 0) {\r\n\t\t\t// store current fetched topics for if page is refresed.\r\n\t\t\tlocalStorage.setItem('currentTopics', JSON.stringify({ id: materialID, topics: allTopics }) as any)\r\n\r\n\t\t\t// guess what this line of code does, and you will win the \"I can read code\" grand prize.\r\n\t\t\tsetTopicsFound((Object.keys(allTopics).length != 0) ? true : false);\r\n\r\n\t\t\t// add the first n topics to be displied on the initial refresh,(where n=TOPIC_SEGEMENT_LENGTH).\r\n\t\t\taddNewSetOfTopicsToDisplay(allTopics);\r\n\r\n\t\t\tconsole.log('allTopics', allTopics);\r\n\t\t}\r\n\t}, [allTopics]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// loading animation for the loading more animation.\r\n\t\tsetLoadMoreAnimation(lottie.loadAnimation({\r\n\t\t\tcontainer: loadMoreDivRef.current!,\r\n\t\t\tautoplay: false,\r\n\t\t\trenderer: 'svg',\r\n\t\t\tloop: true,\r\n\t\t\tanimationData: loadMoreIcon,\r\n\t\t}));\r\n\t}, [loadMoreDivRef.current])\r\n\r\n\tlet deleteTopicFun = async (materialID: any, topicID: any) => {\r\n\t\tconst requestParams = { materialID: materialID, topicID: topicID };\r\n\t\tSwal.fire({\r\n\t\t\ttitle: 'Are you sure?',\r\n\t\t\ttext: \"You won't be able to revert this!\",\r\n\t\t\ticon: 'warning',\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\tcancelButtonColor: '#d33',\r\n\t\t\tconfirmButtonText: 'Yes, delete it!',\r\n\t\t\tshowLoaderOnConfirm: true,\r\n\t\t}).then(async (result) => {\r\n\t\t\tif (result.isConfirmed) {\r\n\t\t\t\tSwal.fire({\r\n\t\t\t\t\ttitle: \"Deleting Topic\",\r\n\t\t\t\t\ttext: \"Please Wait...\",\r\n\t\t\t\t\tdidOpen: async () => {\r\n\t\t\t\t\t\tSwal.showLoading();\r\n\t\t\t\t\t\tlet res = await APIsCaller({ api: deleteTopic, requestParams });\r\n\t\t\t\t\t\tSwal.hideLoading();\r\n\t\t\t\t\t\tconsole.log('del-res', res);\r\n\t\t\t\t\t\tremoveFromAllTopics(topicID);\r\n\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t// after deleting completed\r\n\t\t\t\t\t\t\tSwal.fire(\r\n\t\t\t\t\t\t\t\t'Deleted!',\r\n\t\t\t\t\t\t\t\tres.data.message,\r\n\t\t\t\t\t\t\t\t'success'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\t\ticon: 'error',\r\n\t\t\t\t\t\t\t\ttitle: 'Oops...',\r\n\t\t\t\t\t\t\t\ttext: 'Something went wrong!',\r\n\t\t\t\t\t\t\t\tfooter: '<a href>Please Try Agian</a>'\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t// \r\n\tlet removeFromAllTopics = (topicID: any) => {\r\n\t\tdelete allTopics[topicID];\r\n\t\tsetAllTopics(() => allTopics);\r\n\t\tlocalStorage.setItem('currentTopics', JSON.stringify({ id: materialID, topics: allTopics }) as any)\r\n\t\taddNewSetOfTopicsToDisplay(allTopics, nextTopicsIndex);\r\n\t}\r\n\r\n\t// let editTopicFun = (topicID, topicName, topicPhoto, topicDes) => {\r\n\r\n\t// }\r\n\r\n\t// disblay waiting for conext result\r\n\t// show spining circle, a moneky eating a banana or a cat photo anything.\r\n\tif (!material) {\r\n\t\t// show material not found or something.\r\n\t\treturn (\r\n\t\t\t<p>\r\n\t\t\t\tMaterial Not Found :)\r\n\t\t\t</p>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"materials-info-container\">\r\n\t\t\t<div id=\"material-card\">\r\n\t\t\t\t<MaterialCard cardTitle={material.materialName} cardPhoto={material.materialPhoto} cardRate={material.totalRate} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"desc\">\r\n\t\t\t\t<p id=\"desc-title\">Description: </p>\r\n\t\t\t\t<p id=\"desc-text\">{material.materialDesc || \"No Description\"}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"topics-section\">\r\n\t\t\t\t<div id=\"topics\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(loading) ?\r\n\t\t\t\t\t\t\t<div className=\"loading-div\" ref={loadingDivRef}></div>\r\n\t\t\t\t\t\t\t: (topicsFound) ?\r\n\t\t\t\t\t\t\t\ttopicsToDisplay.map((topic: any, index) => {\r\n\t\t\t\t\t\t\t\t\treturn <TopicCard key={index}\r\n\t\t\t\t\t\t\t\t\t\tmaterialID={materialID}\r\n\t\t\t\t\t\t\t\t\t\tcardID={Object.keys(allTopics)[index]}\r\n\t\t\t\t\t\t\t\t\t\tcardTitle={topic.topicName || material.materialName}\r\n\t\t\t\t\t\t\t\t\t\tcardPhoto={topic.topicPhoto || material.materialPhoto}\r\n\t\t\t\t\t\t\t\t\t\tcardRate={topic.topicRate || material.totalRate}\r\n\t\t\t\t\t\t\t\t\t\ttopicDes={topic.description || material.materialDesc || \"No Description\"}\r\n\t\t\t\t\t\t\t\t\t\tdeleteTopicFun={deleteTopicFun} />\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t: <p>No Topics Found</p>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(nextTopicsIndex < Object.keys(allTopics).length) ?\r\n\t\t\t\t\t\t\t(<div ref={loadMoreDivRef} className=\"load-more-card\" onClick={() => addNewSetOfTopicsToDisplay(allTopics)} onMouseEnter={() => { loadMoreAnimation!.play() }} onMouseLeave={() => { loadMoreAnimation!.stop() }}>\r\n\t\t\t\t\t\t\t\t{/* not the best way but it works */}\r\n\t\t\t\t\t\t\t\t<p>Load More</p>\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\avatar.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\utilities\\alearts.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\action-cods.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\res-adders\\res-adders.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\constants\\res-types.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\requestes\\res-requests\\res.ts",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\404\\404-componant.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\viewer\\topic-card.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\profile-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\user-profile\\profile-dropzone.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\schedule-page.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\guidance.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\guidance\\guidance.tsx",[],"C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\components\\home\\subpages\\data-entry\\update-topic.tsx",["347"],"import { useState } from 'react';\r\nimport CardCreateor from '../../../../components/home/subpages/data-entry/add-manually';\r\nimport { match as matchType, useLocation } from 'react-router-dom';\r\nimport { addResMethods } from '../../../../constants/pages-route';\r\n\r\nexport default function UpdateTopic() {\r\n    let loc = useLocation();\r\n\r\n    let { materialID, topicID, name, photo, description }: any = loc.state;\r\n    const basicTopicRoute: string = `${addResMethods}/${materialID}/${topicID}`;\r\n    const [resRoute, setResRoute] = useState<string>(basicTopicRoute);\r\n\r\n    let inputs = [\"Topic Name\", \"Topic Image URL\"];\r\n    let descriptionInput = description;\r\n    let values = [name, photo];\r\n    let id = materialID;\r\n    let rate = 5;\r\n\r\n\r\n    return (\r\n        <div className=\"dynamic-subpage\">\r\n            <CardCreateor {...{ inputs, descriptionInput, values, localMaterialID: id, topicID, rate, resRoute, setResRoute }} />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\hamoz\\OneDrive\\Desktop\\projects\\grad_project\\uni materials\\src\\pages\\not-found-page.tsx",[],{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","severity":1,"message":"353","line":64,"column":16,"nodeType":"354","messageId":"355","endLine":64,"endColumn":18},{"ruleId":"356","severity":1,"message":"357","line":133,"column":6,"nodeType":"358","endLine":133,"endColumn":8,"suggestions":"359"},{"ruleId":"356","severity":1,"message":"360","line":20,"column":5,"nodeType":"358","endLine":20,"endColumn":7,"suggestions":"361"},{"ruleId":"362","severity":1,"message":"363","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":28},{"ruleId":"362","severity":1,"message":"366","line":1,"column":53,"nodeType":"364","messageId":"365","endLine":1,"endColumn":68},{"ruleId":"362","severity":1,"message":"367","line":1,"column":70,"nodeType":"364","messageId":"365","endLine":1,"endColumn":77},{"ruleId":"362","severity":1,"message":"368","line":33,"column":7,"nodeType":"364","messageId":"365","endLine":33,"endColumn":23},{"ruleId":"352","severity":1,"message":"369","line":46,"column":24,"nodeType":"354","messageId":"355","endLine":46,"endColumn":26},{"ruleId":"352","severity":1,"message":"369","line":46,"column":42,"nodeType":"354","messageId":"355","endLine":46,"endColumn":44},{"ruleId":"352","severity":1,"message":"369","line":51,"column":19,"nodeType":"354","messageId":"355","endLine":51,"endColumn":21},{"ruleId":"352","severity":1,"message":"369","line":51,"column":31,"nodeType":"354","messageId":"355","endLine":51,"endColumn":33},{"ruleId":"352","severity":1,"message":"353","line":51,"column":54,"nodeType":"354","messageId":"355","endLine":51,"endColumn":56},{"ruleId":"356","severity":1,"message":"370","line":81,"column":5,"nodeType":"358","endLine":81,"endColumn":7,"suggestions":"371"},{"ruleId":"352","severity":1,"message":"353","line":89,"column":24,"nodeType":"354","messageId":"355","endLine":89,"endColumn":26},{"ruleId":"352","severity":1,"message":"353","line":94,"column":50,"nodeType":"354","messageId":"355","endLine":94,"endColumn":52},{"ruleId":"356","severity":1,"message":"372","line":101,"column":5,"nodeType":"358","endLine":101,"endColumn":16,"suggestions":"373"},{"ruleId":"356","severity":1,"message":"374","line":112,"column":5,"nodeType":"358","endLine":112,"endColumn":29,"suggestions":"375"},{"ruleId":"362","severity":1,"message":"376","line":3,"column":19,"nodeType":"364","messageId":"365","endLine":3,"endColumn":28},"no-native-reassign",["377"],"no-negated-in-lhs",["378"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUniDex' and 'unisNames'. Either include them or remove the dependency array.","ArrayExpression",["379"],"React Hook useEffect has a missing dependency: 'defualtValues'. Either include it or remove the dependency array.",["380"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useLayoutEffect' is defined but never used.","'useMemo' is defined but never used.","'loadingAnimation' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allTopics' and 'materialID'. Either include them or remove the dependency array.",["381"],"React Hook useEffect has missing dependencies: 'addNewSetOfTopicsToDisplay' and 'materialID'. Either include them or remove the dependency array.",["382"],"React Hook useEffect has an unnecessary dependency: 'loadMoreDivRef.current'. Either exclude it or remove the dependency array. Mutable values like 'loadMoreDivRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["383"],"'matchType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [setUniDex, unisNames]",{"range":"394","text":"395"},"Update the dependencies array to be: [defualtValues]",{"range":"396","text":"397"},"Update the dependencies array to be: [allTopics, materialID]",{"range":"398","text":"399"},"Update the dependencies array to be: [addNewSetOfTopicsToDisplay, allTopics, materialID]",{"range":"400","text":"401"},"Update the dependencies array to be: []",{"range":"402","text":"403"},[3725,3727],"[setUniDex, unisNames]",[1170,1172],"[defualtValues]",[3770,3772],"[allTopics, materialID]",[4716,4727],"[addNewSetOfTopicsToDisplay, allTopics, materialID]",[4999,5023],"[]"]